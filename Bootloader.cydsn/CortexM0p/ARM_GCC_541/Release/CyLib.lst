ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysClkImoStart,"ax",%progbits
  20              		.align	1
  21              		.global	CySysClkImoStart
  22              		.code	16
  23              		.thumb_func
  24              		.type	CySysClkImoStart, %function
  25              	CySysClkImoStart:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.60
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2017, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 2


  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  75:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  76:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  77:Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  78:Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  79:Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  80:Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  81:Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  82:Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  83:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  84:Generated_Source\PSoC4/CyLib.c **** 
  85:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  86:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  87:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 3


  88:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  89:Generated_Source\PSoC4/CyLib.c **** 
  90:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  91:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  92:Generated_Source\PSoC4/CyLib.c **** 
  93:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  94:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  95:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  98:Generated_Source\PSoC4/CyLib.c **** *
  99:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 100:Generated_Source\PSoC4/CyLib.c **** * this function will also enable WCO lock if selected in the Design Wide
 101:Generated_Source\PSoC4/CyLib.c **** * Resources tab.
 102:Generated_Source\PSoC4/CyLib.c **** *
 103:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L / devices, this function will also enable USB lock if selected
 104:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 105:Generated_Source\PSoC4/CyLib.c **** *
 106:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 107:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 108:Generated_Source\PSoC4/CyLib.c **** {
  28              		.loc 1 108 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 109:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  33              		.loc 1 109 0
  34 0000 8021     		movs	r1, #128
  35 0002 034A     		ldr	r2, .L2
  36 0004 0906     		lsls	r1, r1, #24
  37 0006 1368     		ldr	r3, [r2]
 110:Generated_Source\PSoC4/CyLib.c **** 
 111:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 112:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 113:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 114:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 115:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 116:Generated_Source\PSoC4/CyLib.c **** 
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 119:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 120:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 121:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 122:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** }
  38              		.loc 1 124 0
  39              		@ sp needed
 109:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  40              		.loc 1 109 0
  41 0008 0B43     		orrs	r3, r1
  42 000a 1360     		str	r3, [r2]
  43              		.loc 1 124 0
  44 000c 7047     		bx	lr
  45              	.L3:
  46 000e C046     		.align	2
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 4


  47              	.L2:
  48 0010 30000340 		.word	1073938480
  49              		.cfi_endproc
  50              	.LFE1:
  51              		.size	CySysClkImoStart, .-CySysClkImoStart
  52              		.section	.text.CySysClkImoDisableWcoLock,"ax",%progbits
  53              		.align	1
  54              		.global	CySysClkImoDisableWcoLock
  55              		.code	16
  56              		.thumb_func
  57              		.type	CySysClkImoDisableWcoLock, %function
  58              	CySysClkImoDisableWcoLock:
  59              	.LFB4:
 125:Generated_Source\PSoC4/CyLib.c **** 
 126:Generated_Source\PSoC4/CyLib.c **** 
 127:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 128:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 129:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 130:Generated_Source\PSoC4/CyLib.c **** *
 131:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 132:Generated_Source\PSoC4/CyLib.c **** *
 133:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 134:Generated_Source\PSoC4/CyLib.c **** * this function will also disable WCO lock.
 135:Generated_Source\PSoC4/CyLib.c **** *
 136:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 137:Generated_Source\PSoC4/CyLib.c **** *
 138:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 139:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 140:Generated_Source\PSoC4/CyLib.c **** {
 141:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 142:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 143:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 144:Generated_Source\PSoC4/CyLib.c **** 
 145:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 146:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 147:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 148:Generated_Source\PSoC4/CyLib.c **** 
 149:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 150:Generated_Source\PSoC4/CyLib.c **** }
 151:Generated_Source\PSoC4/CyLib.c **** 
 152:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 153:Generated_Source\PSoC4/CyLib.c **** 
 154:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 155:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 156:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 157:Generated_Source\PSoC4/CyLib.c ****     *
 158:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 159:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 160:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 161:Generated_Source\PSoC4/CyLib.c ****     *
 162:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 163:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 164:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 165:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 166:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 167:Generated_Source\PSoC4/CyLib.c ****     *
 168:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 5


 169:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 170:Generated_Source\PSoC4/CyLib.c ****     *
 171:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 172:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 173:Generated_Source\PSoC4/CyLib.c ****     *
 174:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 175:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 176:Generated_Source\PSoC4/CyLib.c ****     {
 177:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 178:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 179:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 180:Generated_Source\PSoC4/CyLib.c **** 
 181:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 182:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 183:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 184:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 185:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 186:Generated_Source\PSoC4/CyLib.c **** 
 187:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 188:Generated_Source\PSoC4/CyLib.c ****         {
 189:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 190:Generated_Source\PSoC4/CyLib.c **** 
 191:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 192:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 193:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 194:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 195:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 196:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 197:Generated_Source\PSoC4/CyLib.c **** 
 198:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 199:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 200:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 201:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 202:Generated_Source\PSoC4/CyLib.c ****                 {
 203:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 204:Generated_Source\PSoC4/CyLib.c ****                     {
 205:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 206:Generated_Source\PSoC4/CyLib.c ****                         break;
 207:Generated_Source\PSoC4/CyLib.c ****                     }
 208:Generated_Source\PSoC4/CyLib.c ****                 }
 209:Generated_Source\PSoC4/CyLib.c ****             #else
 210:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 211:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 212:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 213:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 214:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 215:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 216:Generated_Source\PSoC4/CyLib.c ****                 #else
 217:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 218:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 219:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 220:Generated_Source\PSoC4/CyLib.c **** 
 221:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 222:Generated_Source\PSoC4/CyLib.c **** 
 223:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 224:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 225:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 6


 226:Generated_Source\PSoC4/CyLib.c ****                 {
 227:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 228:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 229:Generated_Source\PSoC4/CyLib.c ****                 }
 230:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 231:Generated_Source\PSoC4/CyLib.c **** 
 232:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 233:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 236:Generated_Source\PSoC4/CyLib.c **** 
 237:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 238:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 239:Generated_Source\PSoC4/CyLib.c **** 
 240:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 241:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 242:Generated_Source\PSoC4/CyLib.c **** 
 243:Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 244:Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 245:Generated_Source\PSoC4/CyLib.c ****             {
 246:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 247:Generated_Source\PSoC4/CyLib.c ****             }
 248:Generated_Source\PSoC4/CyLib.c ****             else
 249:Generated_Source\PSoC4/CyLib.c ****             {
 250:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 251:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 252:Generated_Source\PSoC4/CyLib.c **** 
 253:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 254:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 255:Generated_Source\PSoC4/CyLib.c **** 
 256:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 257:Generated_Source\PSoC4/CyLib.c ****             }
 258:Generated_Source\PSoC4/CyLib.c **** 
 259:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 260:Generated_Source\PSoC4/CyLib.c **** 
 261:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 262:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 263:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 264:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 265:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 266:Generated_Source\PSoC4/CyLib.c **** 
 267:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 268:Generated_Source\PSoC4/CyLib.c ****         }
 269:Generated_Source\PSoC4/CyLib.c ****     }
 270:Generated_Source\PSoC4/CyLib.c **** 
 271:Generated_Source\PSoC4/CyLib.c **** 
 272:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 273:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 274:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 275:Generated_Source\PSoC4/CyLib.c ****     *
 276:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 277:Generated_Source\PSoC4/CyLib.c ****     *
 278:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 279:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 280:Generated_Source\PSoC4/CyLib.c ****     *
 281:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 282:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 7


 283:Generated_Source\PSoC4/CyLib.c ****     *
 284:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 285:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 286:Generated_Source\PSoC4/CyLib.c ****     {
  60              		.loc 1 286 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 0, uses_anonymous_args = 0
  64              		@ link register save eliminated.
 287:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
  65              		.loc 1 287 0
  66 0000 024A     		ldr	r2, .L5
  67 0002 034B     		ldr	r3, .L5+4
  68 0004 1168     		ldr	r1, [r2]
 288:Generated_Source\PSoC4/CyLib.c ****     }
  69              		.loc 1 288 0
  70              		@ sp needed
 287:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
  71              		.loc 1 287 0
  72 0006 0B40     		ands	r3, r1
  73 0008 1360     		str	r3, [r2]
  74              		.loc 1 288 0
  75 000a 7047     		bx	lr
  76              	.L6:
  77              		.align	2
  78              	.L5:
  79 000c 00000740 		.word	1074200576
  80 0010 FFFFFFBF 		.word	-1073741825
  81              		.cfi_endproc
  82              	.LFE4:
  83              		.size	CySysClkImoDisableWcoLock, .-CySysClkImoDisableWcoLock
  84              		.section	.text.CySysClkImoStop,"ax",%progbits
  85              		.align	1
  86              		.global	CySysClkImoStop
  87              		.code	16
  88              		.thumb_func
  89              		.type	CySysClkImoStop, %function
  90              	CySysClkImoStop:
  91              	.LFB2:
 140:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  92              		.loc 1 140 0
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 0
  95              		@ frame_needed = 0, uses_anonymous_args = 0
  96 0000 10B5     		push	{r4, lr}
  97              		.cfi_def_cfa_offset 8
  98              		.cfi_offset 4, -8
  99              		.cfi_offset 14, -4
 142:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 100              		.loc 1 142 0
 101 0002 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 102              	.LVL0:
 149:Generated_Source\PSoC4/CyLib.c **** }
 103              		.loc 1 149 0
 104 0006 034A     		ldr	r2, .L8
 150:Generated_Source\PSoC4/CyLib.c **** 
 105              		.loc 1 150 0
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 8


 106              		@ sp needed
 149:Generated_Source\PSoC4/CyLib.c **** }
 107              		.loc 1 149 0
 108 0008 1368     		ldr	r3, [r2]
 109 000a 5B00     		lsls	r3, r3, #1
 110 000c 5B08     		lsrs	r3, r3, #1
 111 000e 1360     		str	r3, [r2]
 150:Generated_Source\PSoC4/CyLib.c **** 
 112              		.loc 1 150 0
 113 0010 10BD     		pop	{r4, pc}
 114              	.L9:
 115 0012 C046     		.align	2
 116              	.L8:
 117 0014 30000340 		.word	1073938480
 118              		.cfi_endproc
 119              	.LFE2:
 120              		.size	CySysClkImoStop, .-CySysClkImoStop
 121              		.section	.text.CySysClkImoGetWcoLock,"ax",%progbits
 122              		.align	1
 123              		.global	CySysClkImoGetWcoLock
 124              		.code	16
 125              		.thumb_func
 126              		.type	CySysClkImoGetWcoLock, %function
 127              	CySysClkImoGetWcoLock:
 128              	.LFB5:
 289:Generated_Source\PSoC4/CyLib.c **** 
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 292:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 293:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 294:Generated_Source\PSoC4/CyLib.c ****     *
 295:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 296:Generated_Source\PSoC4/CyLib.c ****     *
 297:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 298:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 299:Generated_Source\PSoC4/CyLib.c ****     *
 300:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 301:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 302:Generated_Source\PSoC4/CyLib.c ****     *
 303:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 304:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 305:Generated_Source\PSoC4/CyLib.c ****     {
 129              		.loc 1 305 0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 306:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 134              		.loc 1 306 0
 135 0000 024B     		ldr	r3, .L11
 307:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 308:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 309:Generated_Source\PSoC4/CyLib.c ****     }
 136              		.loc 1 309 0
 137              		@ sp needed
 306:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 138              		.loc 1 306 0
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 9


 139 0002 1868     		ldr	r0, [r3]
 140 0004 4000     		lsls	r0, r0, #1
 141 0006 C00F     		lsrs	r0, r0, #31
 142              		.loc 1 309 0
 143 0008 7047     		bx	lr
 144              	.L12:
 145 000a C046     		.align	2
 146              	.L11:
 147 000c 00000740 		.word	1074200576
 148              		.cfi_endproc
 149              	.LFE5:
 150              		.size	CySysClkImoGetWcoLock, .-CySysClkImoGetWcoLock
 151              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 152              		.align	1
 153              		.global	CySysClkWriteHfclkDirect
 154              		.code	16
 155              		.thumb_func
 156              		.type	CySysClkWriteHfclkDirect, %function
 157              	CySysClkWriteHfclkDirect:
 158              	.LFB6:
 310:Generated_Source\PSoC4/CyLib.c **** 
 311:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 312:Generated_Source\PSoC4/CyLib.c **** 
 313:Generated_Source\PSoC4/CyLib.c **** 
 314:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 315:Generated_Source\PSoC4/CyLib.c **** 
 316:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 317:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 318:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 319:Generated_Source\PSoC4/CyLib.c ****     *
 320:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 321:Generated_Source\PSoC4/CyLib.c ****     *
 322:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 323:Generated_Source\PSoC4/CyLib.c ****     *
 324:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 325:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 326:Generated_Source\PSoC4/CyLib.c ****     *
 327:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 328:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 331:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 332:Generated_Source\PSoC4/CyLib.c ****     {
 333:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 334:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 335:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 336:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 337:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 338:Generated_Source\PSoC4/CyLib.c **** 
 339:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 340:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 341:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 342:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 343:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 344:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 10


 347:Generated_Source\PSoC4/CyLib.c ****     }
 348:Generated_Source\PSoC4/CyLib.c **** 
 349:Generated_Source\PSoC4/CyLib.c **** 
 350:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 351:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 352:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 353:Generated_Source\PSoC4/CyLib.c ****     *
 354:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 355:Generated_Source\PSoC4/CyLib.c ****     *
 356:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 357:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 360:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 361:Generated_Source\PSoC4/CyLib.c ****     *
 362:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 363:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 364:Generated_Source\PSoC4/CyLib.c ****     {
 365:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 366:Generated_Source\PSoC4/CyLib.c **** 
 367:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 368:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 369:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 370:Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
 371:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 372:Generated_Source\PSoC4/CyLib.c ****     }
 373:Generated_Source\PSoC4/CyLib.c **** 
 374:Generated_Source\PSoC4/CyLib.c **** 
 375:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 376:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 377:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 378:Generated_Source\PSoC4/CyLib.c ****     *
 379:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 380:Generated_Source\PSoC4/CyLib.c ****     *
 381:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 382:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 383:Generated_Source\PSoC4/CyLib.c ****     *
 384:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 385:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 386:Generated_Source\PSoC4/CyLib.c ****     *
 387:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 388:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 389:Generated_Source\PSoC4/CyLib.c ****     {
 390:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 391:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 392:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 393:Generated_Source\PSoC4/CyLib.c ****     }
 394:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 395:Generated_Source\PSoC4/CyLib.c **** 
 396:Generated_Source\PSoC4/CyLib.c **** 
 397:Generated_Source\PSoC4/CyLib.c **** 
 398:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 399:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 400:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 401:Generated_Source\PSoC4/CyLib.c **** *
 402:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 403:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 11


 404:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 405:Generated_Source\PSoC4/CyLib.c **** *
 406:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 407:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 408:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 409:Generated_Source\PSoC4/CyLib.c **** *
 410:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 411:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 412:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 413:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 414:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 415:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 416:Generated_Source\PSoC4/CyLib.c **** *
 417:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 418:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 419:Generated_Source\PSoC4/CyLib.c **** *
 420:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 421:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 422:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 423:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 424:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L.
 425:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L.
 426:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 427:Generated_Source\PSoC4/CyLib.c **** *
 428:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 429:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 430:Generated_Source\PSoC4/CyLib.c **** {
 159              		.loc 1 430 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163              	.LVL1:
 164 0000 10B5     		push	{r4, lr}
 165              		.cfi_def_cfa_offset 8
 166              		.cfi_offset 4, -8
 167              		.cfi_offset 14, -4
 168              		.loc 1 430 0
 169 0002 0400     		movs	r4, r0
 431:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 432:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 170              		.loc 1 434 0
 171 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 172              	.LVL2:
 435:Generated_Source\PSoC4/CyLib.c **** 
 436:Generated_Source\PSoC4/CyLib.c **** 
 437:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 173              		.loc 1 437 0
 174 0008 0323     		movs	r3, #3
 175 000a 0449     		ldr	r1, .L14
 438:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 439:Generated_Source\PSoC4/CyLib.c **** 
 440:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 441:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 442:Generated_Source\PSoC4/CyLib.c ****     {
 443:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 12


 444:Generated_Source\PSoC4/CyLib.c ****     }
 445:Generated_Source\PSoC4/CyLib.c ****     else
 446:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 447:Generated_Source\PSoC4/CyLib.c ****     {
 448:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 449:Generated_Source\PSoC4/CyLib.c ****     }
 450:Generated_Source\PSoC4/CyLib.c **** 
 451:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 452:Generated_Source\PSoC4/CyLib.c **** 
 453:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 454:Generated_Source\PSoC4/CyLib.c **** }
 176              		.loc 1 454 0
 177              		@ sp needed
 437:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 178              		.loc 1 437 0
 179 000c 0A68     		ldr	r2, [r1]
 180 000e 9A43     		bics	r2, r3
 181              	.LVL3:
 448:Generated_Source\PSoC4/CyLib.c ****     }
 182              		.loc 1 448 0
 183 0010 2340     		ands	r3, r4
 184 0012 1343     		orrs	r3, r2
 185              	.LVL4:
 451:Generated_Source\PSoC4/CyLib.c **** 
 186              		.loc 1 451 0
 187 0014 0B60     		str	r3, [r1]
 453:Generated_Source\PSoC4/CyLib.c **** }
 188              		.loc 1 453 0
 189 0016 FFF7FEFF 		bl	CyExitCriticalSection
 190              	.LVL5:
 191              	.LVL6:
 192              		.loc 1 454 0
 193 001a 10BD     		pop	{r4, pc}
 194              	.L15:
 195              		.align	2
 196              	.L14:
 197 001c 28000340 		.word	1073938472
 198              		.cfi_endproc
 199              	.LFE6:
 200              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 201              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 202              		.align	1
 203              		.global	CySysEnablePumpClock
 204              		.code	16
 205              		.thumb_func
 206              		.type	CySysEnablePumpClock, %function
 207              	CySysEnablePumpClock:
 208              	.LFB7:
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c **** 
 457:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 458:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 459:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 460:Generated_Source\PSoC4/CyLib.c **** *
 461:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 462:Generated_Source\PSoC4/CyLib.c **** *
 463:Generated_Source\PSoC4/CyLib.c **** * \param enable  
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 13


 464:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 465:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 466:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 467:Generated_Source\PSoC4/CyLib.c **** *
 468:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 469:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 470:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 471:Generated_Source\PSoC4/CyLib.c **** *
 472:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 473:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 474:Generated_Source\PSoC4/CyLib.c **** {
 209              		.loc 1 474 0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213              	.LVL7:
 214 0000 10B5     		push	{r4, lr}
 215              		.cfi_def_cfa_offset 8
 216              		.cfi_offset 4, -8
 217              		.cfi_offset 14, -4
 218 0002 094B     		ldr	r3, .L21
 219 0004 094C     		ldr	r4, .L21+4
 475:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 476:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 477:Generated_Source\PSoC4/CyLib.c ****         {
 478:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 479:Generated_Source\PSoC4/CyLib.c ****         }
 480:Generated_Source\PSoC4/CyLib.c ****         else
 481:Generated_Source\PSoC4/CyLib.c ****         {
 482:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 483:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 484:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 485:Generated_Source\PSoC4/CyLib.c ****         }
 486:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 487:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 220              		.loc 1 487 0
 221 0006 C207     		lsls	r2, r0, #31
 222 0008 04D5     		bpl	.L17
 488:Generated_Source\PSoC4/CyLib.c ****         {
 489:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 223              		.loc 1 489 0
 224 000a 2268     		ldr	r2, [r4]
 225 000c 1968     		ldr	r1, [r3]
 226 000e 1201     		lsls	r2, r2, #4
 227 0010 0A43     		orrs	r2, r1
 228 0012 06E0     		b	.L19
 229              	.L17:
 490:Generated_Source\PSoC4/CyLib.c ****         }
 491:Generated_Source\PSoC4/CyLib.c ****         else
 492:Generated_Source\PSoC4/CyLib.c ****         {
 493:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 494:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 495:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 230              		.loc 1 495 0
 231 0014 3021     		movs	r1, #48
 493:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 232              		.loc 1 493 0
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 14


 233 0016 1A68     		ldr	r2, [r3]
 234 0018 9206     		lsls	r2, r2, #26
 235 001a 920F     		lsrs	r2, r2, #30
 236 001c 2260     		str	r2, [r4]
 237              		.loc 1 495 0
 238 001e 1A68     		ldr	r2, [r3]
 239 0020 8A43     		bics	r2, r1
 240              	.L19:
 241 0022 1A60     		str	r2, [r3]
 496:Generated_Source\PSoC4/CyLib.c ****         }
 497:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 498:Generated_Source\PSoC4/CyLib.c **** }
 242              		.loc 1 498 0
 243              		@ sp needed
 244 0024 10BD     		pop	{r4, pc}
 245              	.L22:
 246 0026 C046     		.align	2
 247              	.L21:
 248 0028 28000340 		.word	1073938472
 249 002c 00000000 		.word	.LANCHOR0
 250              		.cfi_endproc
 251              	.LFE7:
 252              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 253              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 254              		.align	1
 255              		.global	CySysClkGetSysclkSource
 256              		.code	16
 257              		.thumb_func
 258              		.type	CySysClkGetSysclkSource, %function
 259              	CySysClkGetSysclkSource:
 260              	.LFB8:
 499:Generated_Source\PSoC4/CyLib.c **** 
 500:Generated_Source\PSoC4/CyLib.c **** 
 501:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 502:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 503:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 504:Generated_Source\PSoC4/CyLib.c **** *
 505:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 506:Generated_Source\PSoC4/CyLib.c **** *
 507:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 508:Generated_Source\PSoC4/CyLib.c **** *
 509:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 510:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 511:Generated_Source\PSoC4/CyLib.c **** {
 261              		.loc 1 511 0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 0
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265 0000 10B5     		push	{r4, lr}
 266              		.cfi_def_cfa_offset 8
 267              		.cfi_offset 4, -8
 268              		.cfi_offset 14, -4
 512:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 513:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 514:Generated_Source\PSoC4/CyLib.c **** 
 515:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 269              		.loc 1 515 0
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 15


 270 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 271              	.LVL8:
 516:Generated_Source\PSoC4/CyLib.c **** 
 517:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 518:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 519:Generated_Source\PSoC4/CyLib.c ****     {
 520:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 521:Generated_Source\PSoC4/CyLib.c ****     }
 522:Generated_Source\PSoC4/CyLib.c ****     else
 523:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 524:Generated_Source\PSoC4/CyLib.c ****     {
 525:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 272              		.loc 1 525 0
 273 0006 034B     		ldr	r3, .L24
 526:Generated_Source\PSoC4/CyLib.c ****     }
 527:Generated_Source\PSoC4/CyLib.c **** 
 528:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 529:Generated_Source\PSoC4/CyLib.c **** 
 530:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 531:Generated_Source\PSoC4/CyLib.c **** }
 274              		.loc 1 531 0
 275              		@ sp needed
 525:Generated_Source\PSoC4/CyLib.c ****     }
 276              		.loc 1 525 0
 277 0008 1C68     		ldr	r4, [r3]
 278              	.LVL9:
 528:Generated_Source\PSoC4/CyLib.c **** 
 279              		.loc 1 528 0
 280 000a FFF7FEFF 		bl	CyExitCriticalSection
 281              	.LVL10:
 530:Generated_Source\PSoC4/CyLib.c **** }
 282              		.loc 1 530 0
 283 000e 0320     		movs	r0, #3
 284 0010 2040     		ands	r0, r4
 285              	.LVL11:
 286              		.loc 1 531 0
 287 0012 10BD     		pop	{r4, pc}
 288              	.L25:
 289              		.align	2
 290              	.L24:
 291 0014 28000340 		.word	1073938472
 292              		.cfi_endproc
 293              	.LFE8:
 294              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 295              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 296              		.align	1
 297              		.global	CySysClkWriteSysclkDiv
 298              		.code	16
 299              		.thumb_func
 300              		.type	CySysClkWriteSysclkDiv, %function
 301              	CySysClkWriteSysclkDiv:
 302              	.LFB9:
 532:Generated_Source\PSoC4/CyLib.c **** 
 533:Generated_Source\PSoC4/CyLib.c **** 
 534:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 535:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 536:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 16


 537:Generated_Source\PSoC4/CyLib.c **** *
 538:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 539:Generated_Source\PSoC4/CyLib.c **** *
 540:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 541:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 542:Generated_Source\PSoC4/CyLib.c **** *
 543:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 544:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 545:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 546:Generated_Source\PSoC4/CyLib.c **** *
 547:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 548:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 549:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 550:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 551:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 552:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 553:Generated_Source\PSoC4/CyLib.c **** *
 554:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 555:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 556:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 557:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 558:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 559:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 560:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 561:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 562:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 563:Generated_Source\PSoC4/CyLib.c **** *
 564:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 565:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 566:Generated_Source\PSoC4/CyLib.c **** {
 303              		.loc 1 566 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 307              	.LVL12:
 308 0000 70B5     		push	{r4, r5, r6, lr}
 309              		.cfi_def_cfa_offset 16
 310              		.cfi_offset 4, -16
 311              		.cfi_offset 5, -12
 312              		.cfi_offset 6, -8
 313              		.cfi_offset 14, -4
 314              		.loc 1 566 0
 315 0002 0400     		movs	r4, r0
 567:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 568:Generated_Source\PSoC4/CyLib.c **** 
 569:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 316              		.loc 1 569 0
 317 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 318              	.LVL13:
 570:Generated_Source\PSoC4/CyLib.c **** 
 571:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 319              		.loc 1 572 0
 320 0008 FF21     		movs	r1, #255
 573:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 321              		.loc 1 573 0
 322 000a 054D     		ldr	r5, .L27
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 17


 572:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 323              		.loc 1 572 0
 324 000c A301     		lsls	r3, r4, #6
 325              		.loc 1 573 0
 326 000e 2A68     		ldr	r2, [r5]
 572:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 327              		.loc 1 572 0
 328 0010 0B40     		ands	r3, r1
 329 0012 3F39     		subs	r1, r1, #63
 330 0014 8A43     		bics	r2, r1
 331 0016 1343     		orrs	r3, r2
 571:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 332              		.loc 1 571 0
 333 0018 2B60     		str	r3, [r5]
 574:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 575:Generated_Source\PSoC4/CyLib.c **** 
 576:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 334              		.loc 1 576 0
 335 001a FFF7FEFF 		bl	CyExitCriticalSection
 336              	.LVL14:
 577:Generated_Source\PSoC4/CyLib.c **** }
 337              		.loc 1 577 0
 338              		@ sp needed
 339              	.LVL15:
 340 001e 70BD     		pop	{r4, r5, r6, pc}
 341              	.L28:
 342              		.align	2
 343              	.L27:
 344 0020 28000340 		.word	1073938472
 345              		.cfi_endproc
 346              	.LFE9:
 347              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 348              		.section	.text.CySysClkWriteHfclkDiv,"ax",%progbits
 349              		.align	1
 350              		.global	CySysClkWriteHfclkDiv
 351              		.code	16
 352              		.thumb_func
 353              		.type	CySysClkWriteHfclkDiv, %function
 354              	CySysClkWriteHfclkDiv:
 355              	.LFB11:
 578:Generated_Source\PSoC4/CyLib.c **** 
 579:Generated_Source\PSoC4/CyLib.c **** 
 580:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 581:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 582:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 583:Generated_Source\PSoC4/CyLib.c **** *
 584:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 585:Generated_Source\PSoC4/CyLib.c **** *
 586:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 587:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 588:Generated_Source\PSoC4/CyLib.c **** *
 589:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 590:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 591:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 592:Generated_Source\PSoC4/CyLib.c **** *
 593:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 594:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 18


 595:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 596:Generated_Source\PSoC4/CyLib.c **** *
 597:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 598:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 599:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 600:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 601:Generated_Source\PSoC4/CyLib.c **** *
 602:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 603:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 604:Generated_Source\PSoC4/CyLib.c **** *
 605:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 606:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 607:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 608:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 609:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 610:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 611:Generated_Source\PSoC4/CyLib.c **** *
 612:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 613:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 614:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 615:Generated_Source\PSoC4/CyLib.c **** *
 616:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 617:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 618:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC 4400: Valid range [24-48] with step size equals
 619:Generated_Source\PSoC4/CyLib.c **** * 4.
 620:Generated_Source\PSoC4/CyLib.c **** *
 621:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 622:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 623:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 624:Generated_Source\PSoC4/CyLib.c ****     {
 625:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 626:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 627:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 628:Generated_Source\PSoC4/CyLib.c ****         #else
 629:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 630:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 631:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 632:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 633:Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 634:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 635:Generated_Source\PSoC4/CyLib.c **** 
 636:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 637:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 638:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 639:Generated_Source\PSoC4/CyLib.c **** 
 640:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 641:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 642:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 643:Generated_Source\PSoC4/CyLib.c **** 
 644:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 645:Generated_Source\PSoC4/CyLib.c **** 
 646:Generated_Source\PSoC4/CyLib.c **** 
 647:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 648:Generated_Source\PSoC4/CyLib.c **** 
 649:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 650:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 651:Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 19


 652:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 653:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 654:Generated_Source\PSoC4/CyLib.c ****             }
 655:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 656:Generated_Source\PSoC4/CyLib.c **** 
 657:Generated_Source\PSoC4/CyLib.c **** 
 658:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 659:Generated_Source\PSoC4/CyLib.c **** 
 660:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 661:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 662:Generated_Source\PSoC4/CyLib.c ****                 {
 663:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 664:Generated_Source\PSoC4/CyLib.c **** 
 665:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 666:Generated_Source\PSoC4/CyLib.c ****                 {
 667:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 668:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 669:Generated_Source\PSoC4/CyLib.c ****                 }
 670:Generated_Source\PSoC4/CyLib.c **** 
 671:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 672:Generated_Source\PSoC4/CyLib.c ****                 }
 673:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 674:Generated_Source\PSoC4/CyLib.c **** 
 675:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 676:Generated_Source\PSoC4/CyLib.c **** 
 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 679:Generated_Source\PSoC4/CyLib.c **** 
 680:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 681:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 682:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 683:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 684:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 685:Generated_Source\PSoC4/CyLib.c **** 
 686:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 687:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 688:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 689:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 690:Generated_Source\PSoC4/CyLib.c **** 
 691:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 692:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 693:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 694:Generated_Source\PSoC4/CyLib.c **** 
 695:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 696:Generated_Source\PSoC4/CyLib.c **** 
 697:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 698:Generated_Source\PSoC4/CyLib.c ****         {
 699:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 700:Generated_Source\PSoC4/CyLib.c ****             {
 701:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 702:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 703:Generated_Source\PSoC4/CyLib.c ****             }
 704:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 705:Generated_Source\PSoC4/CyLib.c ****             {
 706:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 707:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 708:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 20


 709:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 710:Generated_Source\PSoC4/CyLib.c ****             {
 711:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 712:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 713:Generated_Source\PSoC4/CyLib.c ****             }
 714:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 715:Generated_Source\PSoC4/CyLib.c ****             {
 716:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 717:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 718:Generated_Source\PSoC4/CyLib.c ****             }
 719:Generated_Source\PSoC4/CyLib.c ****             else
 720:Generated_Source\PSoC4/CyLib.c ****             {
 721:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 722:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 723:Generated_Source\PSoC4/CyLib.c ****             }
 724:Generated_Source\PSoC4/CyLib.c **** 
 725:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 726:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 727:Generated_Source\PSoC4/CyLib.c **** 
 728:Generated_Source\PSoC4/CyLib.c **** 
 729:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 730:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 731:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 732:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 733:Generated_Source\PSoC4/CyLib.c ****             *
 734:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 735:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 736:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 737:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 738:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 739:Generated_Source\PSoC4/CyLib.c ****             {
 740:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 741:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 742:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 743:Generated_Source\PSoC4/CyLib.c **** 
 744:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 745:Generated_Source\PSoC4/CyLib.c **** 
 746:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 747:Generated_Source\PSoC4/CyLib.c ****             }
 748:Generated_Source\PSoC4/CyLib.c ****             else
 749:Generated_Source\PSoC4/CyLib.c ****             {
 750:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 751:Generated_Source\PSoC4/CyLib.c ****             }
 752:Generated_Source\PSoC4/CyLib.c **** 
 753:Generated_Source\PSoC4/CyLib.c **** 
 754:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 755:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 756:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 757:Generated_Source\PSoC4/CyLib.c ****             *
 758:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 759:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 760:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 761:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 762:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 763:Generated_Source\PSoC4/CyLib.c ****             {
 764:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 765:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 21


 766:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 767:Generated_Source\PSoC4/CyLib.c ****             }
 768:Generated_Source\PSoC4/CyLib.c **** 
 769:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 770:Generated_Source\PSoC4/CyLib.c **** 
 771:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 772:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 773:Generated_Source\PSoC4/CyLib.c ****                 {
 774:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 775:Generated_Source\PSoC4/CyLib.c ****                 }
 776:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 777:Generated_Source\PSoC4/CyLib.c ****                 {
 778:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 779:Generated_Source\PSoC4/CyLib.c ****                 }
 780:Generated_Source\PSoC4/CyLib.c ****                 else
 781:Generated_Source\PSoC4/CyLib.c ****                 {
 782:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 783:Generated_Source\PSoC4/CyLib.c ****                 }
 784:Generated_Source\PSoC4/CyLib.c ****             #else
 785:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 786:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 787:Generated_Source\PSoC4/CyLib.c **** 
 788:Generated_Source\PSoC4/CyLib.c **** 
 789:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 790:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 791:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 792:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 793:Generated_Source\PSoC4/CyLib.c **** 
 794:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 795:Generated_Source\PSoC4/CyLib.c ****             {
 796:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 797:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 798:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 799:Generated_Source\PSoC4/CyLib.c ****             }
 800:Generated_Source\PSoC4/CyLib.c ****         }
 801:Generated_Source\PSoC4/CyLib.c ****         else
 802:Generated_Source\PSoC4/CyLib.c ****         {
 803:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 804:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 805:Generated_Source\PSoC4/CyLib.c ****         }
 806:Generated_Source\PSoC4/CyLib.c **** 
 807:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 808:Generated_Source\PSoC4/CyLib.c **** 
 809:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 810:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 811:Generated_Source\PSoC4/CyLib.c ****             {
 812:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 813:Generated_Source\PSoC4/CyLib.c ****             }
 814:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 815:Generated_Source\PSoC4/CyLib.c **** 
 816:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 817:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 818:Generated_Source\PSoC4/CyLib.c ****             {
 819:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 820:Generated_Source\PSoC4/CyLib.c ****             }
 821:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 822:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 22


 823:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 824:Generated_Source\PSoC4/CyLib.c ****     }
 825:Generated_Source\PSoC4/CyLib.c **** 
 826:Generated_Source\PSoC4/CyLib.c **** #else
 827:Generated_Source\PSoC4/CyLib.c **** 
 828:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 829:Generated_Source\PSoC4/CyLib.c ****     {
 830:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 831:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 832:Generated_Source\PSoC4/CyLib.c **** 
 833:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 834:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 835:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 836:Generated_Source\PSoC4/CyLib.c ****         
 837:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 838:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 839:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 840:Generated_Source\PSoC4/CyLib.c **** 
 841:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 842:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 843:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 844:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 845:Generated_Source\PSoC4/CyLib.c ****         #else
 846:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 847:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 848:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 849:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 850:Generated_Source\PSoC4/CyLib.c ****         {
 851:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 852:Generated_Source\PSoC4/CyLib.c **** 
 853:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 854:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 855:Generated_Source\PSoC4/CyLib.c ****                 {
 856:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 857:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 858:Generated_Source\PSoC4/CyLib.c ****                 }
 859:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 860:Generated_Source\PSoC4/CyLib.c **** 
 861:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 862:Generated_Source\PSoC4/CyLib.c **** 
 863:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 864:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 865:Generated_Source\PSoC4/CyLib.c ****                     {
 866:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 869:Generated_Source\PSoC4/CyLib.c ****                     {
 870:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 871:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 872:Generated_Source\PSoC4/CyLib.c ****                     }
 873:Generated_Source\PSoC4/CyLib.c **** 
 874:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 875:Generated_Source\PSoC4/CyLib.c ****                     }
 876:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 877:Generated_Source\PSoC4/CyLib.c **** 
 878:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 879:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 23


 880:Generated_Source\PSoC4/CyLib.c **** 
 881:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 882:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 883:Generated_Source\PSoC4/CyLib.c **** 
 884:Generated_Source\PSoC4/CyLib.c **** 
 885:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 886:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 887:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 888:Generated_Source\PSoC4/CyLib.c ****                 {
 889:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 890:Generated_Source\PSoC4/CyLib.c ****                 }
 891:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 892:Generated_Source\PSoC4/CyLib.c ****                 {
 893:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 894:Generated_Source\PSoC4/CyLib.c ****                 }
 895:Generated_Source\PSoC4/CyLib.c ****                 else
 896:Generated_Source\PSoC4/CyLib.c ****                 {
 897:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 898:Generated_Source\PSoC4/CyLib.c ****                 }
 899:Generated_Source\PSoC4/CyLib.c ****             #else
 900:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 901:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 902:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 903:Generated_Source\PSoC4/CyLib.c **** 
 904:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 905:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 906:Generated_Source\PSoC4/CyLib.c **** 
 907:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 908:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 909:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 910:Generated_Source\PSoC4/CyLib.c **** 
 911:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 912:Generated_Source\PSoC4/CyLib.c **** 
 913:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 914:Generated_Source\PSoC4/CyLib.c ****             {
 915:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 916:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 917:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 918:Generated_Source\PSoC4/CyLib.c **** 
 919:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 922:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 923:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 924:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 925:Generated_Source\PSoC4/CyLib.c ****             }
 926:Generated_Source\PSoC4/CyLib.c **** 
 927:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 928:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
 929:Generated_Source\PSoC4/CyLib.c ****                 {
 930:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
 931:Generated_Source\PSoC4/CyLib.c ****                 }
 932:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 933:Generated_Source\PSoC4/CyLib.c ****         
 934:Generated_Source\PSoC4/CyLib.c ****         
 935:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 936:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 24


 937:Generated_Source\PSoC4/CyLib.c ****                 {
 938:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
 939:Generated_Source\PSoC4/CyLib.c ****                 }
 940:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 941:Generated_Source\PSoC4/CyLib.c **** 
 942:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 943:Generated_Source\PSoC4/CyLib.c ****         }
 944:Generated_Source\PSoC4/CyLib.c ****         else
 945:Generated_Source\PSoC4/CyLib.c ****         {
 946:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 947:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 948:Generated_Source\PSoC4/CyLib.c ****         }
 949:Generated_Source\PSoC4/CyLib.c ****     }
 950:Generated_Source\PSoC4/CyLib.c **** 
 951:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 952:Generated_Source\PSoC4/CyLib.c **** 
 953:Generated_Source\PSoC4/CyLib.c **** 
 954:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 955:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 956:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 957:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 958:Generated_Source\PSoC4/CyLib.c ****     *
 959:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
 960:Generated_Source\PSoC4/CyLib.c ****     *
 961:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
 962:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 963:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
 964:Generated_Source\PSoC4/CyLib.c ****     *
 965:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 966:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 967:Generated_Source\PSoC4/CyLib.c ****     *
 968:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
 969:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 970:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
 971:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
 972:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 973:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
 974:Generated_Source\PSoC4/CyLib.c ****     *
 975:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 976:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 977:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 978:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 979:Generated_Source\PSoC4/CyLib.c ****     *
 980:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 981:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 982:Generated_Source\PSoC4/CyLib.c ****     {
 356              		.loc 1 982 0
 357              		.cfi_startproc
 358              		@ args = 0, pretend = 0, frame = 0
 359              		@ frame_needed = 0, uses_anonymous_args = 0
 360              	.LVL16:
 361 0000 10B5     		push	{r4, lr}
 362              		.cfi_def_cfa_offset 8
 363              		.cfi_offset 4, -8
 364              		.cfi_offset 14, -4
 365              		.loc 1 982 0
 366 0002 0400     		movs	r4, r0
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 25


 983:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 984:Generated_Source\PSoC4/CyLib.c **** 
 985:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 367              		.loc 1 985 0
 368 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 369              	.LVL17:
 986:Generated_Source\PSoC4/CyLib.c **** 
 987:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 988:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 370              		.loc 1 988 0
 371 0008 A300     		lsls	r3, r4, #2
 372 000a 0C24     		movs	r4, #12
 373              	.LVL18:
 987:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 374              		.loc 1 987 0
 375 000c 0449     		ldr	r1, .L30
 376              		.loc 1 988 0
 377 000e 2340     		ands	r3, r4
 987:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 378              		.loc 1 987 0
 379 0010 0A68     		ldr	r2, [r1]
 989:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 990:Generated_Source\PSoC4/CyLib.c **** 
 991:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 992:Generated_Source\PSoC4/CyLib.c ****     }
 380              		.loc 1 992 0
 381              		@ sp needed
 988:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 382              		.loc 1 988 0
 383 0012 A243     		bics	r2, r4
 384 0014 1343     		orrs	r3, r2
 987:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 385              		.loc 1 987 0
 386 0016 0B60     		str	r3, [r1]
 991:Generated_Source\PSoC4/CyLib.c ****     }
 387              		.loc 1 991 0
 388 0018 FFF7FEFF 		bl	CyExitCriticalSection
 389              	.LVL19:
 390              		.loc 1 992 0
 391 001c 10BD     		pop	{r4, pc}
 392              	.L31:
 393 001e C046     		.align	2
 394              	.L30:
 395 0020 28000340 		.word	1073938472
 396              		.cfi_endproc
 397              	.LFE11:
 398              		.size	CySysClkWriteHfclkDiv, .-CySysClkWriteHfclkDiv
 399              		.section	.text.CySysGetResetReason,"ax",%progbits
 400              		.align	1
 401              		.global	CySysGetResetReason
 402              		.code	16
 403              		.thumb_func
 404              		.type	CySysGetResetReason, %function
 405              	CySysGetResetReason:
 406              	.LFB12:
 993:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 994:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 26


 995:Generated_Source\PSoC4/CyLib.c **** 
 996:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
 997:Generated_Source\PSoC4/CyLib.c **** 
 998:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 999:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1000:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1001:Generated_Source\PSoC4/CyLib.c ****     *
1002:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1003:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1004:Generated_Source\PSoC4/CyLib.c ****     *
1005:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1006:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1007:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1008:Generated_Source\PSoC4/CyLib.c ****     * called.
1009:Generated_Source\PSoC4/CyLib.c ****     *
1010:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1011:Generated_Source\PSoC4/CyLib.c ****     *
1012:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1013:Generated_Source\PSoC4/CyLib.c ****     *
1014:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1015:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1016:Generated_Source\PSoC4/CyLib.c ****     *
1017:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1018:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1019:Generated_Source\PSoC4/CyLib.c ****     *
1020:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1021:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1022:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1023:Generated_Source\PSoC4/CyLib.c ****     *
1024:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1025:Generated_Source\PSoC4/CyLib.c ****     *
1026:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1027:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1028:Generated_Source\PSoC4/CyLib.c ****     {
1029:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1030:Generated_Source\PSoC4/CyLib.c **** 
1031:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1032:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1033:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1036:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1037:Generated_Source\PSoC4/CyLib.c **** 
1038:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1039:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1040:Generated_Source\PSoC4/CyLib.c ****         
1041:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1042:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1043:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1044:Generated_Source\PSoC4/CyLib.c ****             
1045:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1046:Generated_Source\PSoC4/CyLib.c ****             {
1047:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1048:Generated_Source\PSoC4/CyLib.c ****             }
1049:Generated_Source\PSoC4/CyLib.c ****             else
1050:Generated_Source\PSoC4/CyLib.c ****             {
1051:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 27


1052:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1053:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1054:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1055:Generated_Source\PSoC4/CyLib.c ****             
1056:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1057:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1058:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1059:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1060:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1061:Generated_Source\PSoC4/CyLib.c ****                 
1062:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1063:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1064:Generated_Source\PSoC4/CyLib.c ****                 {
1065:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1066:Generated_Source\PSoC4/CyLib.c ****                 }
1067:Generated_Source\PSoC4/CyLib.c ****                 
1068:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1069:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1070:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1071:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1072:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1073:Generated_Source\PSoC4/CyLib.c **** 
1074:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1075:Generated_Source\PSoC4/CyLib.c ****                 {
1076:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1077:Generated_Source\PSoC4/CyLib.c ****                 }
1078:Generated_Source\PSoC4/CyLib.c **** 
1079:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1080:Generated_Source\PSoC4/CyLib.c ****                 {
1081:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1082:Generated_Source\PSoC4/CyLib.c ****                 }
1083:Generated_Source\PSoC4/CyLib.c ****                 
1084:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1085:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1086:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1087:Generated_Source\PSoC4/CyLib.c ****                 
1088:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1089:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1090:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1091:Generated_Source\PSoC4/CyLib.c ****                 #else
1092:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1093:Generated_Source\PSoC4/CyLib.c ****                 #endif
1094:Generated_Source\PSoC4/CyLib.c ****                 
1095:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1096:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1097:Generated_Source\PSoC4/CyLib.c ****                 {
1098:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1099:Generated_Source\PSoC4/CyLib.c ****                 }
1100:Generated_Source\PSoC4/CyLib.c ****                 
1101:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1102:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1103:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1104:Generated_Source\PSoC4/CyLib.c ****                                             
1105:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1106:Generated_Source\PSoC4/CyLib.c ****                 {
1107:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1108:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 28


1109:Generated_Source\PSoC4/CyLib.c **** 
1110:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1111:Generated_Source\PSoC4/CyLib.c ****                 
1112:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1113:Generated_Source\PSoC4/CyLib.c ****                 
1114:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1115:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1116:Generated_Source\PSoC4/CyLib.c ****                 
1117:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1118:Generated_Source\PSoC4/CyLib.c ****                 {
1119:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1120:Generated_Source\PSoC4/CyLib.c ****                 }
1121:Generated_Source\PSoC4/CyLib.c ****                 
1122:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1123:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1124:Generated_Source\PSoC4/CyLib.c ****                 
1125:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1126:Generated_Source\PSoC4/CyLib.c ****                 {
1127:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1128:Generated_Source\PSoC4/CyLib.c ****                 }
1129:Generated_Source\PSoC4/CyLib.c ****                 
1130:Generated_Source\PSoC4/CyLib.c ****             }
1131:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 */
1132:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1133:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1134:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1135:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1136:Generated_Source\PSoC4/CyLib.c **** 
1137:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1138:Generated_Source\PSoC4/CyLib.c ****         {
1139:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1140:Generated_Source\PSoC4/CyLib.c **** 
1141:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1142:Generated_Source\PSoC4/CyLib.c ****             {
1143:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1144:Generated_Source\PSoC4/CyLib.c **** 
1145:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1146:Generated_Source\PSoC4/CyLib.c ****                 {
1147:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1148:Generated_Source\PSoC4/CyLib.c ****                     break;
1149:Generated_Source\PSoC4/CyLib.c ****                 }
1150:Generated_Source\PSoC4/CyLib.c ****             }
1151:Generated_Source\PSoC4/CyLib.c **** 
1152:Generated_Source\PSoC4/CyLib.c ****         }
1153:Generated_Source\PSoC4/CyLib.c **** 
1154:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1155:Generated_Source\PSoC4/CyLib.c ****     }
1156:Generated_Source\PSoC4/CyLib.c **** 
1157:Generated_Source\PSoC4/CyLib.c **** 
1158:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1159:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1160:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1161:Generated_Source\PSoC4/CyLib.c ****     *
1162:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1163:Generated_Source\PSoC4/CyLib.c ****     *
1164:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1165:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 29


1166:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1167:Generated_Source\PSoC4/CyLib.c ****     *
1168:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1169:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1170:Generated_Source\PSoC4/CyLib.c ****     {
1171:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1172:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1173:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1174:Generated_Source\PSoC4/CyLib.c **** 
1175:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1176:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1177:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1178:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1179:Generated_Source\PSoC4/CyLib.c ****         #else
1180:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1181:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1182:Generated_Source\PSoC4/CyLib.c ****     }
1183:Generated_Source\PSoC4/CyLib.c **** 
1184:Generated_Source\PSoC4/CyLib.c **** 
1185:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1186:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1187:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1188:Generated_Source\PSoC4/CyLib.c ****     *
1189:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1190:Generated_Source\PSoC4/CyLib.c ****     *
1191:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1192:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1193:Generated_Source\PSoC4/CyLib.c ****     *
1194:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1195:Generated_Source\PSoC4/CyLib.c ****     * ECO_STATUS register.
1196:Generated_Source\PSoC4/CyLib.c ****     *
1197:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1198:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1199:Generated_Source\PSoC4/CyLib.c ****     *
1200:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L: Non-zero indicates that ECO is running.
1201:Generated_Source\PSoC4/CyLib.c ****     *
1202:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1203:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1204:Generated_Source\PSoC4/CyLib.c ****     {
1205:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1206:Generated_Source\PSoC4/CyLib.c **** 
1207:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1208:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1209:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1210:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1211:Generated_Source\PSoC4/CyLib.c **** 
1212:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1213:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1214:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1215:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1216:Generated_Source\PSoC4/CyLib.c ****         #else
1217:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1218:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1219:Generated_Source\PSoC4/CyLib.c **** 
1220:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1221:Generated_Source\PSoC4/CyLib.c ****     }
1222:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 30


1223:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1224:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1225:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1226:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1227:Generated_Source\PSoC4/CyLib.c ****         *
1228:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1229:Generated_Source\PSoC4/CyLib.c ****         *
1230:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1231:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1232:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1233:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1234:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1235:Generated_Source\PSoC4/CyLib.c ****         *
1236:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1237:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1238:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1239:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1240:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1241:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1242:Generated_Source\PSoC4/CyLib.c ****         *
1243:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1244:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1245:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1246:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1247:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1248:Generated_Source\PSoC4/CyLib.c ****         *
1249:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1250:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1251:Generated_Source\PSoC4/CyLib.c ****         {
1252:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1253:Generated_Source\PSoC4/CyLib.c **** 
1254:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1255:Generated_Source\PSoC4/CyLib.c ****             {
1256:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1257:Generated_Source\PSoC4/CyLib.c **** 
1258:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1259:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1260:Generated_Source\PSoC4/CyLib.c **** 
1261:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1262:Generated_Source\PSoC4/CyLib.c ****             }
1263:Generated_Source\PSoC4/CyLib.c ****             else
1264:Generated_Source\PSoC4/CyLib.c ****             {
1265:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1266:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1267:Generated_Source\PSoC4/CyLib.c ****             }
1268:Generated_Source\PSoC4/CyLib.c ****         }
1269:Generated_Source\PSoC4/CyLib.c **** 
1270:Generated_Source\PSoC4/CyLib.c ****     #else
1271:Generated_Source\PSoC4/CyLib.c **** 
1272:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1273:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1274:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1275:Generated_Source\PSoC4/CyLib.c ****         *
1276:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1277:Generated_Source\PSoC4/CyLib.c ****         * 4200L devices only.
1278:Generated_Source\PSoC4/CyLib.c ****         *
1279:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 31


1280:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1281:Generated_Source\PSoC4/CyLib.c ****         *
1282:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1283:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1284:Generated_Source\PSoC4/CyLib.c ****         *
1285:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1286:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1287:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1288:Generated_Source\PSoC4/CyLib.c ****         *
1289:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1290:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1291:Generated_Source\PSoC4/CyLib.c ****         *
1292:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1293:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1294:Generated_Source\PSoC4/CyLib.c ****         *
1295:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1296:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1297:Generated_Source\PSoC4/CyLib.c ****         *
1298:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1299:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1300:Generated_Source\PSoC4/CyLib.c ****         *
1301:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1302:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1303:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1304:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1305:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1306:Generated_Source\PSoC4/CyLib.c ****         *
1307:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1308:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1309:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1310:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1311:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1312:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1313:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1314:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1315:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1316:Generated_Source\PSoC4/CyLib.c ****         *
1317:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1318:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1319:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1320:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1321:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1322:Generated_Source\PSoC4/CyLib.c ****         *
1323:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1324:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1325:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1326:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1327:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1328:Generated_Source\PSoC4/CyLib.c ****         *
1329:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1330:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1331:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1332:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1333:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1334:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1335:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1336:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 32


1337:Generated_Source\PSoC4/CyLib.c ****         *
1338:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1339:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1340:Generated_Source\PSoC4/CyLib.c ****         {
1341:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1342:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1343:Generated_Source\PSoC4/CyLib.c **** 
1344:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1345:Generated_Source\PSoC4/CyLib.c **** 
1346:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1347:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1348:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1349:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1350:Generated_Source\PSoC4/CyLib.c **** 
1351:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1352:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1353:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1354:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1355:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1356:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1357:Generated_Source\PSoC4/CyLib.c **** 
1358:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1359:Generated_Source\PSoC4/CyLib.c **** 
1360:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1361:Generated_Source\PSoC4/CyLib.c ****         }
1362:Generated_Source\PSoC4/CyLib.c **** 
1363:Generated_Source\PSoC4/CyLib.c **** 
1364:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1365:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1366:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1367:Generated_Source\PSoC4/CyLib.c ****         *
1368:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1369:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1370:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1371:Generated_Source\PSoC4/CyLib.c ****         *
1372:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L devices only.
1373:Generated_Source\PSoC4/CyLib.c ****         *
1374:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1375:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1376:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1377:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1378:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1379:Generated_Source\PSoC4/CyLib.c ****         *
1380:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1381:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1382:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1383:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1384:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1385:Generated_Source\PSoC4/CyLib.c ****         *
1386:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1387:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1388:Generated_Source\PSoC4/CyLib.c ****         *
1389:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1390:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1391:Generated_Source\PSoC4/CyLib.c ****         {
1392:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1393:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 33


1394:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1395:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1396:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1397:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1398:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1399:Generated_Source\PSoC4/CyLib.c **** 
1400:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1401:Generated_Source\PSoC4/CyLib.c **** 
1402:Generated_Source\PSoC4/CyLib.c **** 
1403:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1404:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1405:Generated_Source\PSoC4/CyLib.c ****             {
1406:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1407:Generated_Source\PSoC4/CyLib.c ****             }
1408:Generated_Source\PSoC4/CyLib.c ****             else
1409:Generated_Source\PSoC4/CyLib.c ****             {
1410:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1411:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1412:Generated_Source\PSoC4/CyLib.c **** 
1413:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1414:Generated_Source\PSoC4/CyLib.c ****                 {
1415:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1416:Generated_Source\PSoC4/CyLib.c ****                 }
1417:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1418:Generated_Source\PSoC4/CyLib.c ****                 {
1419:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1420:Generated_Source\PSoC4/CyLib.c ****                 }
1421:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1422:Generated_Source\PSoC4/CyLib.c ****                 {
1423:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1424:Generated_Source\PSoC4/CyLib.c ****                 }
1425:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1426:Generated_Source\PSoC4/CyLib.c ****                 {
1427:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1428:Generated_Source\PSoC4/CyLib.c ****                 }
1429:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1430:Generated_Source\PSoC4/CyLib.c ****                 {
1431:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1432:Generated_Source\PSoC4/CyLib.c ****                 }
1433:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1434:Generated_Source\PSoC4/CyLib.c ****                 {
1435:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1436:Generated_Source\PSoC4/CyLib.c ****                 }
1437:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1438:Generated_Source\PSoC4/CyLib.c ****                 {
1439:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1440:Generated_Source\PSoC4/CyLib.c ****                 }
1441:Generated_Source\PSoC4/CyLib.c ****                 else
1442:Generated_Source\PSoC4/CyLib.c ****                 {
1443:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1444:Generated_Source\PSoC4/CyLib.c ****                 }
1445:Generated_Source\PSoC4/CyLib.c **** 
1446:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1447:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1448:Generated_Source\PSoC4/CyLib.c **** 
1449:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1450:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 34


1451:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1452:Generated_Source\PSoC4/CyLib.c ****                 {
1453:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1454:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1455:Generated_Source\PSoC4/CyLib.c ****                 }
1456:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1457:Generated_Source\PSoC4/CyLib.c ****                 {
1458:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1459:Generated_Source\PSoC4/CyLib.c ****                 }
1460:Generated_Source\PSoC4/CyLib.c ****                 else
1461:Generated_Source\PSoC4/CyLib.c ****                 {
1462:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1463:Generated_Source\PSoC4/CyLib.c ****                 }
1464:Generated_Source\PSoC4/CyLib.c **** 
1465:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1466:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1467:Generated_Source\PSoC4/CyLib.c ****                 {
1468:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1469:Generated_Source\PSoC4/CyLib.c ****                 }
1470:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1471:Generated_Source\PSoC4/CyLib.c ****                 {
1472:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1473:Generated_Source\PSoC4/CyLib.c ****                 }
1474:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1475:Generated_Source\PSoC4/CyLib.c ****                 {
1476:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1477:Generated_Source\PSoC4/CyLib.c ****                 }
1478:Generated_Source\PSoC4/CyLib.c ****                 else
1479:Generated_Source\PSoC4/CyLib.c ****                 {
1480:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1481:Generated_Source\PSoC4/CyLib.c ****                 }
1482:Generated_Source\PSoC4/CyLib.c **** 
1483:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1484:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1485:Generated_Source\PSoC4/CyLib.c **** 
1486:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1487:Generated_Source\PSoC4/CyLib.c **** 
1488:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1489:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1490:Generated_Source\PSoC4/CyLib.c ****                 {
1491:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1492:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1493:Generated_Source\PSoC4/CyLib.c ****                 }
1494:Generated_Source\PSoC4/CyLib.c ****                 else
1495:Generated_Source\PSoC4/CyLib.c ****                 {
1496:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1497:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1498:Generated_Source\PSoC4/CyLib.c ****                     */
1499:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1500:Generated_Source\PSoC4/CyLib.c ****                 }
1501:Generated_Source\PSoC4/CyLib.c ****             }
1502:Generated_Source\PSoC4/CyLib.c **** 
1503:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1504:Generated_Source\PSoC4/CyLib.c ****         }
1505:Generated_Source\PSoC4/CyLib.c **** 
1506:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1507:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 35


1508:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1509:Generated_Source\PSoC4/CyLib.c **** 
1510:Generated_Source\PSoC4/CyLib.c **** 
1511:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1512:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1513:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1514:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1515:Generated_Source\PSoC4/CyLib.c ****     *
1516:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1517:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1518:Generated_Source\PSoC4/CyLib.c ****     *
1519:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1520:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1521:Generated_Source\PSoC4/CyLib.c ****     *
1522:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1523:Generated_Source\PSoC4/CyLib.c ****     *
1524:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1525:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1526:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1
1527:Generated_Source\PSoC4/CyLib.c ****     *
1528:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1529:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1530:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1531:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1532:Generated_Source\PSoC4/CyLib.c ****     *
1533:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1534:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1535:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1536:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1537:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1538:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1539:Generated_Source\PSoC4/CyLib.c ****     *
1540:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1541:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1542:Generated_Source\PSoC4/CyLib.c ****     {
1543:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1544:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1545:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1546:Generated_Source\PSoC4/CyLib.c **** 
1547:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1548:Generated_Source\PSoC4/CyLib.c ****         {
1549:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1550:Generated_Source\PSoC4/CyLib.c **** 
1551:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1552:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1553:Generated_Source\PSoC4/CyLib.c **** 
1554:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1555:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1556:Generated_Source\PSoC4/CyLib.c **** 
1557:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1558:Generated_Source\PSoC4/CyLib.c **** 
1559:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1560:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1561:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1562:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1563:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1564:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 36


1565:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1566:Generated_Source\PSoC4/CyLib.c ****             {
1567:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1568:Generated_Source\PSoC4/CyLib.c **** 
1569:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1570:Generated_Source\PSoC4/CyLib.c ****                 {
1571:Generated_Source\PSoC4/CyLib.c **** 
1572:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1573:Generated_Source\PSoC4/CyLib.c ****                     {
1574:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1575:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1576:Generated_Source\PSoC4/CyLib.c ****                         break;
1577:Generated_Source\PSoC4/CyLib.c ****                     }
1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1580:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1581:Generated_Source\PSoC4/CyLib.c ****                 }
1582:Generated_Source\PSoC4/CyLib.c ****             }
1583:Generated_Source\PSoC4/CyLib.c ****         }
1584:Generated_Source\PSoC4/CyLib.c ****         else
1585:Generated_Source\PSoC4/CyLib.c ****         {
1586:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1587:Generated_Source\PSoC4/CyLib.c ****         }
1588:Generated_Source\PSoC4/CyLib.c **** 
1589:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1590:Generated_Source\PSoC4/CyLib.c ****     }
1591:Generated_Source\PSoC4/CyLib.c **** 
1592:Generated_Source\PSoC4/CyLib.c **** 
1593:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1594:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1595:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1596:Generated_Source\PSoC4/CyLib.c ****     *
1597:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1598:Generated_Source\PSoC4/CyLib.c ****     *
1599:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1600:Generated_Source\PSoC4/CyLib.c ****     *
1601:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1602:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1603:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1604:Generated_Source\PSoC4/CyLib.c ****     *
1605:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1606:Generated_Source\PSoC4/CyLib.c ****     *
1607:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1608:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1609:Generated_Source\PSoC4/CyLib.c ****     {
1610:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1611:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1612:Generated_Source\PSoC4/CyLib.c **** 
1613:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1614:Generated_Source\PSoC4/CyLib.c **** 
1615:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1616:Generated_Source\PSoC4/CyLib.c **** 
1617:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1618:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1619:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1620:Generated_Source\PSoC4/CyLib.c ****         {
1621:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 37


1622:Generated_Source\PSoC4/CyLib.c ****         }
1623:Generated_Source\PSoC4/CyLib.c **** 
1624:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1625:Generated_Source\PSoC4/CyLib.c **** 
1626:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1627:Generated_Source\PSoC4/CyLib.c ****     }
1628:Generated_Source\PSoC4/CyLib.c **** 
1629:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1630:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1631:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1632:Generated_Source\PSoC4/CyLib.c ****     *
1633:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1634:Generated_Source\PSoC4/CyLib.c ****     *
1635:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1636:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1637:Generated_Source\PSoC4/CyLib.c ****     *
1638:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1639:Generated_Source\PSoC4/CyLib.c ****     *
1640:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1641:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1642:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1643:Generated_Source\PSoC4/CyLib.c ****     *
1644:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1645:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1646:Generated_Source\PSoC4/CyLib.c ****     {
1647:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1648:Generated_Source\PSoC4/CyLib.c **** 
1649:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1650:Generated_Source\PSoC4/CyLib.c ****         {
1651:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1652:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1653:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1654:Generated_Source\PSoC4/CyLib.c ****         }
1655:Generated_Source\PSoC4/CyLib.c ****     }
1656:Generated_Source\PSoC4/CyLib.c **** 
1657:Generated_Source\PSoC4/CyLib.c **** 
1658:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1659:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1660:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1661:Generated_Source\PSoC4/CyLib.c ****     *
1662:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1663:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1664:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1665:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1666:Generated_Source\PSoC4/CyLib.c ****     *
1667:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1668:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1669:Generated_Source\PSoC4/CyLib.c ****     *
1670:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1671:Generated_Source\PSoC4/CyLib.c ****     *
1672:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1673:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1674:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1675:Generated_Source\PSoC4/CyLib.c ****     *
1676:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1677:Generated_Source\PSoC4/CyLib.c ****     * divider.
1678:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 38


1679:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1680:Generated_Source\PSoC4/CyLib.c ****     *
1681:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1682:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1683:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1684:Generated_Source\PSoC4/CyLib.c ****     *
1685:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1686:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1687:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1688:Generated_Source\PSoC4/CyLib.c ****     *
1689:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1690:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1691:Generated_Source\PSoC4/CyLib.c ****     {
1692:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1693:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1694:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1695:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1696:Generated_Source\PSoC4/CyLib.c **** 
1697:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1698:Generated_Source\PSoC4/CyLib.c **** 
1699:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1700:Generated_Source\PSoC4/CyLib.c **** 
1701:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1702:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1703:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1704:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1705:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1706:Generated_Source\PSoC4/CyLib.c ****         {
1707:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1708:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1709:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1710:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1711:Generated_Source\PSoC4/CyLib.c **** 
1712:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1713:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1714:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1715:Generated_Source\PSoC4/CyLib.c **** 
1716:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1717:Generated_Source\PSoC4/CyLib.c **** 
1718:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1719:Generated_Source\PSoC4/CyLib.c ****         }
1720:Generated_Source\PSoC4/CyLib.c **** 
1721:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1722:Generated_Source\PSoC4/CyLib.c **** 
1723:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1724:Generated_Source\PSoC4/CyLib.c ****     }
1725:Generated_Source\PSoC4/CyLib.c **** 
1726:Generated_Source\PSoC4/CyLib.c **** 
1727:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1728:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1729:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1732:Generated_Source\PSoC4/CyLib.c ****     *
1733:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1734:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1735:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 39


1736:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1737:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1738:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1739:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1740:Generated_Source\PSoC4/CyLib.c ****     *
1741:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1742:Generated_Source\PSoC4/CyLib.c ****     *
1743:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1744:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1745:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1746:Generated_Source\PSoC4/CyLib.c ****     *
1747:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1748:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1749:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1750:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1751:Generated_Source\PSoC4/CyLib.c ****     *
1752:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1753:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1754:Generated_Source\PSoC4/CyLib.c ****     *
1755:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1756:Generated_Source\PSoC4/CyLib.c ****     *
1757:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1758:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1759:Generated_Source\PSoC4/CyLib.c ****     {
1760:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1761:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1762:Generated_Source\PSoC4/CyLib.c **** 
1763:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1764:Generated_Source\PSoC4/CyLib.c **** 
1765:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1766:Generated_Source\PSoC4/CyLib.c ****         {
1767:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1768:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1769:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1770:Generated_Source\PSoC4/CyLib.c ****         }
1771:Generated_Source\PSoC4/CyLib.c **** 
1772:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1773:Generated_Source\PSoC4/CyLib.c ****     }
1774:Generated_Source\PSoC4/CyLib.c **** 
1775:Generated_Source\PSoC4/CyLib.c **** 
1776:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1777:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1778:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1779:Generated_Source\PSoC4/CyLib.c ****     *
1780:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1781:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1782:Generated_Source\PSoC4/CyLib.c ****     *
1783:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1784:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1785:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1786:Generated_Source\PSoC4/CyLib.c ****     *
1787:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1788:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1789:Generated_Source\PSoC4/CyLib.c ****     *
1790:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1791:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1792:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 40


1793:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1794:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1795:Generated_Source\PSoC4/CyLib.c **** 
1796:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1797:Generated_Source\PSoC4/CyLib.c **** 
1798:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1799:Generated_Source\PSoC4/CyLib.c **** 
1800:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1801:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1802:Generated_Source\PSoC4/CyLib.c **** 
1803:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1804:Generated_Source\PSoC4/CyLib.c **** 
1805:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1806:Generated_Source\PSoC4/CyLib.c ****     }
1807:Generated_Source\PSoC4/CyLib.c **** 
1808:Generated_Source\PSoC4/CyLib.c **** 
1809:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1810:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1811:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1812:Generated_Source\PSoC4/CyLib.c ****     *
1813:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1814:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1815:Generated_Source\PSoC4/CyLib.c ****     *
1816:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1817:Generated_Source\PSoC4/CyLib.c ****     *
1818:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1819:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1820:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1821:Generated_Source\PSoC4/CyLib.c ****     *
1822:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1823:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1824:Generated_Source\PSoC4/CyLib.c ****     *
1825:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1826:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1827:Generated_Source\PSoC4/CyLib.c ****     {
1828:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1829:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1830:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1831:Generated_Source\PSoC4/CyLib.c **** 
1832:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1833:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1834:Generated_Source\PSoC4/CyLib.c **** 
1835:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1836:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
1837:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
1838:Generated_Source\PSoC4/CyLib.c ****         {
1839:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1840:Generated_Source\PSoC4/CyLib.c ****         }
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1843:Generated_Source\PSoC4/CyLib.c ****     }
1844:Generated_Source\PSoC4/CyLib.c **** 
1845:Generated_Source\PSoC4/CyLib.c **** 
1846:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1847:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1848:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1849:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 41


1850:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1851:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1852:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1853:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1856:Generated_Source\PSoC4/CyLib.c ****     *
1857:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1858:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1859:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1860:Generated_Source\PSoC4/CyLib.c ****     *
1861:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1862:Generated_Source\PSoC4/CyLib.c ****     *
1863:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1864:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1865:Generated_Source\PSoC4/CyLib.c ****     {
1866:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1867:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1868:Generated_Source\PSoC4/CyLib.c **** 
1869:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1870:Generated_Source\PSoC4/CyLib.c **** 
1871:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1872:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1873:Generated_Source\PSoC4/CyLib.c **** 
1874:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1875:Generated_Source\PSoC4/CyLib.c **** 
1876:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1877:Generated_Source\PSoC4/CyLib.c ****     }
1878:Generated_Source\PSoC4/CyLib.c **** 
1879:Generated_Source\PSoC4/CyLib.c **** 
1880:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1881:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1882:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1883:Generated_Source\PSoC4/CyLib.c ****     *
1884:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1885:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1886:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1887:Generated_Source\PSoC4/CyLib.c ****     *
1888:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1889:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1890:Generated_Source\PSoC4/CyLib.c ****     *
1891:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1892:Generated_Source\PSoC4/CyLib.c ****     *
1893:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1894:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1895:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1896:Generated_Source\PSoC4/CyLib.c ****     *
1897:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1898:Generated_Source\PSoC4/CyLib.c ****     *
1899:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1900:Generated_Source\PSoC4/CyLib.c ****     *
1901:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
1902:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1903:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1904:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1905:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1906:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 42


1907:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
1908:Generated_Source\PSoC4/CyLib.c ****     *
1909:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
1910:Generated_Source\PSoC4/CyLib.c ****     * frequency.
1911:Generated_Source\PSoC4/CyLib.c ****     *
1912:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
1913:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
1914:Generated_Source\PSoC4/CyLib.c ****     *
1915:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1916:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1917:Generated_Source\PSoC4/CyLib.c ****     {
1918:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1919:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1920:Generated_Source\PSoC4/CyLib.c **** 
1921:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
1922:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
1923:Generated_Source\PSoC4/CyLib.c **** 
1924:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1925:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1926:Generated_Source\PSoC4/CyLib.c **** 
1927:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1928:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1929:Generated_Source\PSoC4/CyLib.c **** 
1930:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1931:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c **** 
1934:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1935:Generated_Source\PSoC4/CyLib.c **** 
1936:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1937:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
1938:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
1939:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
1940:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1941:Generated_Source\PSoC4/CyLib.c ****         {
1942:Generated_Source\PSoC4/CyLib.c **** 
1943:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1944:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
1945:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
1946:Generated_Source\PSoC4/CyLib.c **** 
1947:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1948:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
1949:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
1950:Generated_Source\PSoC4/CyLib.c **** 
1951:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
1952:Generated_Source\PSoC4/CyLib.c ****             {
1953:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
1954:Generated_Source\PSoC4/CyLib.c ****                 {
1955:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1956:Generated_Source\PSoC4/CyLib.c **** 
1957:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1958:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
1959:Generated_Source\PSoC4/CyLib.c **** 
1960:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
1961:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
1962:Generated_Source\PSoC4/CyLib.c **** 
1963:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 43


1964:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
1965:Generated_Source\PSoC4/CyLib.c **** 
1966:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1967:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
1968:Generated_Source\PSoC4/CyLib.c ****                     {
1969:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
1970:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
1971:Generated_Source\PSoC4/CyLib.c ****                         break;
1972:Generated_Source\PSoC4/CyLib.c ****                     }
1973:Generated_Source\PSoC4/CyLib.c ****                 }
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c **** 
1976:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
1977:Generated_Source\PSoC4/CyLib.c ****                 {
1978:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
1979:Generated_Source\PSoC4/CyLib.c ****                     {
1980:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
1981:Generated_Source\PSoC4/CyLib.c ****                     }
1982:Generated_Source\PSoC4/CyLib.c ****                 }
1983:Generated_Source\PSoC4/CyLib.c ****             }
1984:Generated_Source\PSoC4/CyLib.c **** 
1985:Generated_Source\PSoC4/CyLib.c ****         }
1986:Generated_Source\PSoC4/CyLib.c **** 
1987:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1988:Generated_Source\PSoC4/CyLib.c ****     }
1989:Generated_Source\PSoC4/CyLib.c **** 
1990:Generated_Source\PSoC4/CyLib.c **** 
1991:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1992:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1993:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1994:Generated_Source\PSoC4/CyLib.c ****     *
1995:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
1996:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
1997:Generated_Source\PSoC4/CyLib.c ****     *
1998:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1999:Generated_Source\PSoC4/CyLib.c ****     *
2000:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2001:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2002:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
2003:Generated_Source\PSoC4/CyLib.c ****     *
2004:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2005:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2006:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
2007:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2008:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
2009:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
2010:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
2011:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
2012:Generated_Source\PSoC4/CyLib.c ****     *
2013:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2014:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2015:Generated_Source\PSoC4/CyLib.c ****     {
2016:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2017:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2018:Generated_Source\PSoC4/CyLib.c **** 
2019:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2020:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 44


2021:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2022:Generated_Source\PSoC4/CyLib.c ****         {
2023:Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2024:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
2025:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
2026:Generated_Source\PSoC4/CyLib.c ****         }
2027:Generated_Source\PSoC4/CyLib.c **** 
2028:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2029:Generated_Source\PSoC4/CyLib.c ****     }
2030:Generated_Source\PSoC4/CyLib.c **** 
2031:Generated_Source\PSoC4/CyLib.c **** 
2032:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2033:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2034:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2035:Generated_Source\PSoC4/CyLib.c ****     *
2036:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2037:Generated_Source\PSoC4/CyLib.c ****     *
2038:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2039:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2040:Generated_Source\PSoC4/CyLib.c ****     *
2041:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
2042:Generated_Source\PSoC4/CyLib.c ****     *
2043:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2044:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2045:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
2046:Generated_Source\PSoC4/CyLib.c ****     *
2047:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2048:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2049:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2050:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2051:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2052:Generated_Source\PSoC4/CyLib.c ****     *
2053:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2054:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2055:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2056:Generated_Source\PSoC4/CyLib.c ****     *
2057:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2058:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2059:Generated_Source\PSoC4/CyLib.c ****     {
2060:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2061:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2062:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2063:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2064:Generated_Source\PSoC4/CyLib.c **** 
2065:Generated_Source\PSoC4/CyLib.c **** 
2066:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2067:Generated_Source\PSoC4/CyLib.c **** 
2068:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2069:Generated_Source\PSoC4/CyLib.c **** 
2070:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2071:Generated_Source\PSoC4/CyLib.c ****         {
2072:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2073:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2074:Generated_Source\PSoC4/CyLib.c **** 
2075:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2076:Generated_Source\PSoC4/CyLib.c **** 
2077:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 45


2078:Generated_Source\PSoC4/CyLib.c ****         }
2079:Generated_Source\PSoC4/CyLib.c **** 
2080:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2081:Generated_Source\PSoC4/CyLib.c **** 
2082:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2083:Generated_Source\PSoC4/CyLib.c ****     }
2084:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
2085:Generated_Source\PSoC4/CyLib.c **** 
2086:Generated_Source\PSoC4/CyLib.c **** 
2087:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2088:Generated_Source\PSoC4/CyLib.c **** 
2089:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2090:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2091:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2092:Generated_Source\PSoC4/CyLib.c ****     *
2093:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2094:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2095:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2096:Generated_Source\PSoC4/CyLib.c ****     *
2097:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2098:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2099:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2100:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2101:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2102:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2103:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2104:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2105:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2106:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2107:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2108:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2109:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2110:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2111:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2112:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2113:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2114:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2115:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2116:Generated_Source\PSoC4/CyLib.c ****     *
2117:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2118:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2119:Generated_Source\PSoC4/CyLib.c ****     {
2120:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2121:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2122:Generated_Source\PSoC4/CyLib.c **** 
2123:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2124:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2125:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2126:Generated_Source\PSoC4/CyLib.c **** 
2127:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2128:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2129:Generated_Source\PSoC4/CyLib.c **** 
2130:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2131:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2132:Generated_Source\PSoC4/CyLib.c **** 
2133:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2134:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 46


2135:Generated_Source\PSoC4/CyLib.c **** 
2136:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2137:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2138:Generated_Source\PSoC4/CyLib.c ****     }
2139:Generated_Source\PSoC4/CyLib.c **** 
2140:Generated_Source\PSoC4/CyLib.c **** 
2141:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2142:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2143:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2144:Generated_Source\PSoC4/CyLib.c ****     *
2145:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2146:Generated_Source\PSoC4/CyLib.c ****     *
2147:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2148:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2149:Generated_Source\PSoC4/CyLib.c ****     {
2150:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
2151:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2152:Generated_Source\PSoC4/CyLib.c ****     }
2153:Generated_Source\PSoC4/CyLib.c **** 
2154:Generated_Source\PSoC4/CyLib.c **** 
2155:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2156:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2157:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2158:Generated_Source\PSoC4/CyLib.c ****     *
2159:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2160:Generated_Source\PSoC4/CyLib.c ****     *
2161:Generated_Source\PSoC4/CyLib.c ****     * \return
2162:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2163:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2164:Generated_Source\PSoC4/CyLib.c ****     *
2165:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2166:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2167:Generated_Source\PSoC4/CyLib.c ****     {
2168:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
2169:Generated_Source\PSoC4/CyLib.c ****     }
2170:Generated_Source\PSoC4/CyLib.c **** 
2171:Generated_Source\PSoC4/CyLib.c **** 
2172:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2173:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2174:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2175:Generated_Source\PSoC4/CyLib.c ****     *
2176:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2177:Generated_Source\PSoC4/CyLib.c ****     *
2178:Generated_Source\PSoC4/CyLib.c ****     * \return
2179:Generated_Source\PSoC4/CyLib.c ****     *  None
2180:Generated_Source\PSoC4/CyLib.c ****     *
2181:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2182:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2183:Generated_Source\PSoC4/CyLib.c ****     {
2184:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
2185:Generated_Source\PSoC4/CyLib.c ****     }
2186:Generated_Source\PSoC4/CyLib.c **** 
2187:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2188:Generated_Source\PSoC4/CyLib.c **** 
2189:Generated_Source\PSoC4/CyLib.c **** 
2190:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2191:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 47


2192:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2193:Generated_Source\PSoC4/CyLib.c **** *
2194:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2195:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2196:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2197:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2198:Generated_Source\PSoC4/CyLib.c **** *
2199:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2200:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2201:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2202:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2203:Generated_Source\PSoC4/CyLib.c **** *
2204:Generated_Source\PSoC4/CyLib.c **** * \return
2205:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2206:Generated_Source\PSoC4/CyLib.c **** *
2207:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2208:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2209:Generated_Source\PSoC4/CyLib.c **** {
 407              		.loc 1 2209 0
 408              		.cfi_startproc
 409              		@ args = 0, pretend = 0, frame = 0
 410              		@ frame_needed = 0, uses_anonymous_args = 0
 411              		@ link register save eliminated.
 412              	.LVL20:
2210:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2211:Generated_Source\PSoC4/CyLib.c **** 
2212:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 413              		.loc 1 2212 0
 414 0000 1923     		movs	r3, #25
 415 0002 0200     		movs	r2, r0
2213:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 416              		.loc 1 2213 0
 417 0004 0249     		ldr	r1, .L33
2212:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 418              		.loc 1 2212 0
 419 0006 1A40     		ands	r2, r3
 420              	.LVL21:
 421              		.loc 1 2213 0
 422 0008 0868     		ldr	r0, [r1]
 423              	.LVL22:
2214:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2215:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
2216:Generated_Source\PSoC4/CyLib.c **** 
2217:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2218:Generated_Source\PSoC4/CyLib.c **** }
 424              		.loc 1 2218 0
 425              		@ sp needed
2217:Generated_Source\PSoC4/CyLib.c **** }
 426              		.loc 1 2217 0
 427 000a 1840     		ands	r0, r3
 428              	.LVL23:
2215:Generated_Source\PSoC4/CyLib.c **** 
 429              		.loc 1 2215 0
 430 000c 0A60     		str	r2, [r1]
 431              		.loc 1 2218 0
 432 000e 7047     		bx	lr
 433              	.L34:
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 48


 434              		.align	2
 435              	.L33:
 436 0010 54000340 		.word	1073938516
 437              		.cfi_endproc
 438              	.LFE12:
 439              		.size	CySysGetResetReason, .-CySysGetResetReason
 440              		.section	.text.CyDisableInts,"ax",%progbits
 441              		.align	1
 442              		.global	CyDisableInts
 443              		.code	16
 444              		.thumb_func
 445              		.type	CyDisableInts, %function
 446              	CyDisableInts:
 447              	.LFB13:
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c **** 
2221:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2222:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2223:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2224:Generated_Source\PSoC4/CyLib.c **** *
2225:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2226:Generated_Source\PSoC4/CyLib.c **** *
2227:Generated_Source\PSoC4/CyLib.c **** * \return
2228:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2229:Generated_Source\PSoC4/CyLib.c **** *
2230:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2231:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2232:Generated_Source\PSoC4/CyLib.c **** {
 448              		.loc 1 2232 0
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 0
 451              		@ frame_needed = 0, uses_anonymous_args = 0
 452              		@ link register save eliminated.
2233:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2236:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
2237:Generated_Source\PSoC4/CyLib.c **** 
2238:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2239:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 453              		.loc 1 2239 0
 454 0000 0122     		movs	r2, #1
2236:Generated_Source\PSoC4/CyLib.c **** 
 455              		.loc 1 2236 0
 456 0002 024B     		ldr	r3, .L36
 457              		.loc 1 2239 0
 458 0004 5242     		rsbs	r2, r2, #0
2236:Generated_Source\PSoC4/CyLib.c **** 
 459              		.loc 1 2236 0
 460 0006 1868     		ldr	r0, [r3]
 461              	.LVL24:
2240:Generated_Source\PSoC4/CyLib.c **** 
2241:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2242:Generated_Source\PSoC4/CyLib.c **** }
 462              		.loc 1 2242 0
 463              		@ sp needed
2239:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 49


 464              		.loc 1 2239 0
 465 0008 1A60     		str	r2, [r3]
 466              		.loc 1 2242 0
 467 000a 7047     		bx	lr
 468              	.L37:
 469              		.align	2
 470              	.L36:
 471 000c 80E100E0 		.word	-536813184
 472              		.cfi_endproc
 473              	.LFE13:
 474              		.size	CyDisableInts, .-CyDisableInts
 475              		.section	.text.CyEnableInts,"ax",%progbits
 476              		.align	1
 477              		.global	CyEnableInts
 478              		.code	16
 479              		.thumb_func
 480              		.type	CyEnableInts, %function
 481              	CyEnableInts:
 482              	.LFB14:
2243:Generated_Source\PSoC4/CyLib.c **** 
2244:Generated_Source\PSoC4/CyLib.c **** 
2245:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2246:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2247:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2248:Generated_Source\PSoC4/CyLib.c **** *
2249:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2250:Generated_Source\PSoC4/CyLib.c **** *
2251:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2252:Generated_Source\PSoC4/CyLib.c **** *
2253:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2254:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2255:Generated_Source\PSoC4/CyLib.c **** {
 483              		.loc 1 2255 0
 484              		.cfi_startproc
 485              		@ args = 0, pretend = 0, frame = 0
 486              		@ frame_needed = 0, uses_anonymous_args = 0
 487              		@ link register save eliminated.
 488              	.LVL25:
2256:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 489              		.loc 1 2256 0
 490 0000 014B     		ldr	r3, .L39
2257:Generated_Source\PSoC4/CyLib.c **** }
 491              		.loc 1 2257 0
 492              		@ sp needed
2256:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 493              		.loc 1 2256 0
 494 0002 1860     		str	r0, [r3]
 495              		.loc 1 2257 0
 496 0004 7047     		bx	lr
 497              	.L40:
 498 0006 C046     		.align	2
 499              	.L39:
 500 0008 00E100E0 		.word	-536813312
 501              		.cfi_endproc
 502              	.LFE14:
 503              		.size	CyEnableInts, .-CyEnableInts
 504              		.section	.text.CyIntSetSysVector,"ax",%progbits
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 50


 505              		.align	1
 506              		.global	CyIntSetSysVector
 507              		.code	16
 508              		.thumb_func
 509              		.type	CyIntSetSysVector, %function
 510              	CyIntSetSysVector:
 511              	.LFB15:
2258:Generated_Source\PSoC4/CyLib.c **** 
2259:Generated_Source\PSoC4/CyLib.c **** 
2260:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2261:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2262:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2263:Generated_Source\PSoC4/CyLib.c **** *
2264:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2265:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2266:Generated_Source\PSoC4/CyLib.c **** *
2267:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2268:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2269:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2270:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2271:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2272:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2273:Generated_Source\PSoC4/CyLib.c **** *
2274:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2275:Generated_Source\PSoC4/CyLib.c **** *
2276:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2277:Generated_Source\PSoC4/CyLib.c **** *
2278:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2279:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2280:Generated_Source\PSoC4/CyLib.c **** {
 512              		.loc 1 2280 0
 513              		.cfi_startproc
 514              		@ args = 0, pretend = 0, frame = 0
 515              		@ frame_needed = 0, uses_anonymous_args = 0
 516              		@ link register save eliminated.
 517              	.LVL26:
2281:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2282:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2285:Generated_Source\PSoC4/CyLib.c **** 
2286:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2287:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
 518              		.loc 1 2287 0
 519 0000 8023     		movs	r3, #128
 520 0002 8000     		lsls	r0, r0, #2
 521              	.LVL27:
 522 0004 9B05     		lsls	r3, r3, #22
 523 0006 C318     		adds	r3, r0, r3
 524 0008 1868     		ldr	r0, [r3]
 525              	.LVL28:
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2290:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2291:Generated_Source\PSoC4/CyLib.c **** 
2292:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2293:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 51


 526              		.loc 1 2293 0
 527              		@ sp needed
2290:Generated_Source\PSoC4/CyLib.c **** 
 528              		.loc 1 2290 0
 529 000a 1960     		str	r1, [r3]
 530              		.loc 1 2293 0
 531 000c 7047     		bx	lr
 532              		.cfi_endproc
 533              	.LFE15:
 534              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 535              		.section	.text.CyIntGetSysVector,"ax",%progbits
 536              		.align	1
 537              		.global	CyIntGetSysVector
 538              		.code	16
 539              		.thumb_func
 540              		.type	CyIntGetSysVector, %function
 541              	CyIntGetSysVector:
 542              	.LFB16:
2294:Generated_Source\PSoC4/CyLib.c **** 
2295:Generated_Source\PSoC4/CyLib.c **** 
2296:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2297:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2298:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2299:Generated_Source\PSoC4/CyLib.c **** *
2300:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2301:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2302:Generated_Source\PSoC4/CyLib.c **** *
2303:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2304:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2305:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2306:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2307:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2308:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2309:Generated_Source\PSoC4/CyLib.c **** *
2310:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2311:Generated_Source\PSoC4/CyLib.c **** *
2312:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2313:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2314:Generated_Source\PSoC4/CyLib.c **** {
 543              		.loc 1 2314 0
 544              		.cfi_startproc
 545              		@ args = 0, pretend = 0, frame = 0
 546              		@ frame_needed = 0, uses_anonymous_args = 0
 547              		@ link register save eliminated.
 548              	.LVL29:
2315:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2316:Generated_Source\PSoC4/CyLib.c **** 
2317:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2318:Generated_Source\PSoC4/CyLib.c **** 
2319:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
 549              		.loc 1 2319 0
 550 0000 8023     		movs	r3, #128
 551 0002 8000     		lsls	r0, r0, #2
 552              	.LVL30:
 553 0004 9B05     		lsls	r3, r3, #22
 554 0006 C018     		adds	r0, r0, r3
 555 0008 0068     		ldr	r0, [r0]
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 52


2320:Generated_Source\PSoC4/CyLib.c **** }
 556              		.loc 1 2320 0
 557              		@ sp needed
 558 000a 7047     		bx	lr
 559              		.cfi_endproc
 560              	.LFE16:
 561              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 562              		.section	.text.CyIntSetVector,"ax",%progbits
 563              		.align	1
 564              		.global	CyIntSetVector
 565              		.code	16
 566              		.thumb_func
 567              		.type	CyIntSetVector, %function
 568              	CyIntSetVector:
 569              	.LFB17:
2321:Generated_Source\PSoC4/CyLib.c **** 
2322:Generated_Source\PSoC4/CyLib.c **** 
2323:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2324:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2325:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2326:Generated_Source\PSoC4/CyLib.c **** *
2327:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2328:Generated_Source\PSoC4/CyLib.c **** *
2329:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2330:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2331:Generated_Source\PSoC4/CyLib.c **** *
2332:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2333:Generated_Source\PSoC4/CyLib.c **** *
2334:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2335:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2336:Generated_Source\PSoC4/CyLib.c **** {
 570              		.loc 1 2336 0
 571              		.cfi_startproc
 572              		@ args = 0, pretend = 0, frame = 0
 573              		@ frame_needed = 0, uses_anonymous_args = 0
 574              		@ link register save eliminated.
 575              	.LVL31:
2337:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2338:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2339:Generated_Source\PSoC4/CyLib.c **** 
2340:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2341:Generated_Source\PSoC4/CyLib.c **** 
2342:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2343:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
 576              		.loc 1 2343 0
 577 0000 024B     		ldr	r3, .L44
 578 0002 8000     		lsls	r0, r0, #2
 579              	.LVL32:
 580 0004 C318     		adds	r3, r0, r3
 581 0006 1868     		ldr	r0, [r3]
 582              	.LVL33:
2344:Generated_Source\PSoC4/CyLib.c **** 
2345:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2346:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2347:Generated_Source\PSoC4/CyLib.c **** 
2348:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2349:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 53


 583              		.loc 1 2349 0
 584              		@ sp needed
2346:Generated_Source\PSoC4/CyLib.c **** 
 585              		.loc 1 2346 0
 586 0008 1960     		str	r1, [r3]
 587              		.loc 1 2349 0
 588 000a 7047     		bx	lr
 589              	.L45:
 590              		.align	2
 591              	.L44:
 592 000c 40000020 		.word	536870976
 593              		.cfi_endproc
 594              	.LFE17:
 595              		.size	CyIntSetVector, .-CyIntSetVector
 596              		.section	.text.CyIntGetVector,"ax",%progbits
 597              		.align	1
 598              		.global	CyIntGetVector
 599              		.code	16
 600              		.thumb_func
 601              		.type	CyIntGetVector, %function
 602              	CyIntGetVector:
 603              	.LFB18:
2350:Generated_Source\PSoC4/CyLib.c **** 
2351:Generated_Source\PSoC4/CyLib.c **** 
2352:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2353:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2354:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2355:Generated_Source\PSoC4/CyLib.c **** *
2356:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2357:Generated_Source\PSoC4/CyLib.c **** *
2358:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2359:Generated_Source\PSoC4/CyLib.c **** *
2360:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2361:Generated_Source\PSoC4/CyLib.c **** *
2362:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2363:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2364:Generated_Source\PSoC4/CyLib.c **** {
 604              		.loc 1 2364 0
 605              		.cfi_startproc
 606              		@ args = 0, pretend = 0, frame = 0
 607              		@ frame_needed = 0, uses_anonymous_args = 0
 608              		@ link register save eliminated.
 609              	.LVL34:
2365:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2366:Generated_Source\PSoC4/CyLib.c **** 
2367:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2368:Generated_Source\PSoC4/CyLib.c **** 
2369:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
 610              		.loc 1 2369 0
 611 0000 024B     		ldr	r3, .L47
 612 0002 8000     		lsls	r0, r0, #2
 613              	.LVL35:
 614 0004 C018     		adds	r0, r0, r3
 615 0006 0068     		ldr	r0, [r0]
2370:Generated_Source\PSoC4/CyLib.c **** }
 616              		.loc 1 2370 0
 617              		@ sp needed
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 54


 618 0008 7047     		bx	lr
 619              	.L48:
 620 000a C046     		.align	2
 621              	.L47:
 622 000c 40000020 		.word	536870976
 623              		.cfi_endproc
 624              	.LFE18:
 625              		.size	CyIntGetVector, .-CyIntGetVector
 626              		.section	.text.CyIntSetPriority,"ax",%progbits
 627              		.align	1
 628              		.global	CyIntSetPriority
 629              		.code	16
 630              		.thumb_func
 631              		.type	CyIntSetPriority, %function
 632              	CyIntSetPriority:
 633              	.LFB19:
2371:Generated_Source\PSoC4/CyLib.c **** 
2372:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2373:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2374:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2375:Generated_Source\PSoC4/CyLib.c **** *
2376:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2377:Generated_Source\PSoC4/CyLib.c **** *
2378:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2379:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2380:Generated_Source\PSoC4/CyLib.c **** *
2381:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2382:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2383:Generated_Source\PSoC4/CyLib.c **** {
 634              		.loc 1 2383 0
 635              		.cfi_startproc
 636              		@ args = 0, pretend = 0, frame = 0
 637              		@ frame_needed = 0, uses_anonymous_args = 0
 638              	.LVL36:
 639 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 640              		.cfi_def_cfa_offset 24
 641              		.cfi_offset 3, -24
 642              		.cfi_offset 4, -20
 643              		.cfi_offset 5, -16
 644              		.cfi_offset 6, -12
 645              		.cfi_offset 7, -8
 646              		.cfi_offset 14, -4
2384:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2385:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2386:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2387:Generated_Source\PSoC4/CyLib.c **** 
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2389:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2390:Generated_Source\PSoC4/CyLib.c **** 
2391:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
 647              		.loc 1 2391 0
 648 0002 0326     		movs	r6, #3
 649 0004 0500     		movs	r5, r0
 650 0006 3540     		ands	r5, r6
 651 0008 B540     		lsls	r5, r5, r6
2383:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 652              		.loc 1 2383 0
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 55


 653 000a 0F00     		movs	r7, r1
 654 000c 0400     		movs	r4, r0
 655              		.loc 1 2391 0
 656 000e 0635     		adds	r5, r5, #6
 657              	.LVL37:
2392:Generated_Source\PSoC4/CyLib.c **** 
2393:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2394:Generated_Source\PSoC4/CyLib.c **** 
2395:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2396:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 658              		.loc 1 2396 0
 659 0010 AE40     		lsls	r6, r6, r5
2397:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 660              		.loc 1 2397 0
 661 0012 AF40     		lsls	r7, r7, r5
2393:Generated_Source\PSoC4/CyLib.c **** 
 662              		.loc 1 2393 0
 663 0014 FFF7FEFF 		bl	CyEnterCriticalSection
 664              	.LVL38:
2395:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 665              		.loc 1 2395 0
 666 0018 A408     		lsrs	r4, r4, #2
 667 001a 054B     		ldr	r3, .L50
 668 001c A400     		lsls	r4, r4, #2
 669 001e E418     		adds	r4, r4, r3
 670 0020 2368     		ldr	r3, [r4]
 671              	.LVL39:
2398:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2399:Generated_Source\PSoC4/CyLib.c **** 
2400:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2401:Generated_Source\PSoC4/CyLib.c **** }
 672              		.loc 1 2401 0
 673              		@ sp needed
2396:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 674              		.loc 1 2396 0
 675 0022 B343     		bics	r3, r6
 676              	.LVL40:
2397:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 677              		.loc 1 2397 0
 678 0024 1F43     		orrs	r7, r3
 679              	.LVL41:
2398:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 680              		.loc 1 2398 0
 681 0026 2760     		str	r7, [r4]
2400:Generated_Source\PSoC4/CyLib.c **** }
 682              		.loc 1 2400 0
 683 0028 FFF7FEFF 		bl	CyExitCriticalSection
 684              	.LVL42:
 685              	.LVL43:
 686              	.LVL44:
 687              		.loc 1 2401 0
 688 002c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 689              	.L51:
 690 002e C046     		.align	2
 691              	.L50:
 692 0030 00E400E0 		.word	-536812544
 693              		.cfi_endproc
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 56


 694              	.LFE19:
 695              		.size	CyIntSetPriority, .-CyIntSetPriority
 696              		.section	.text.CyIntGetPriority,"ax",%progbits
 697              		.align	1
 698              		.global	CyIntGetPriority
 699              		.code	16
 700              		.thumb_func
 701              		.type	CyIntGetPriority, %function
 702              	CyIntGetPriority:
 703              	.LFB20:
2402:Generated_Source\PSoC4/CyLib.c **** 
2403:Generated_Source\PSoC4/CyLib.c **** 
2404:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2405:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2406:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2407:Generated_Source\PSoC4/CyLib.c **** *
2408:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2409:Generated_Source\PSoC4/CyLib.c **** *
2410:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2411:Generated_Source\PSoC4/CyLib.c **** *
2412:Generated_Source\PSoC4/CyLib.c **** * \return
2413:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2414:Generated_Source\PSoC4/CyLib.c **** *
2415:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2416:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2417:Generated_Source\PSoC4/CyLib.c **** {
 704              		.loc 1 2417 0
 705              		.cfi_startproc
 706              		@ args = 0, pretend = 0, frame = 0
 707              		@ frame_needed = 0, uses_anonymous_args = 0
 708              		@ link register save eliminated.
 709              	.LVL45:
2418:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2419:Generated_Source\PSoC4/CyLib.c **** 
2420:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2421:Generated_Source\PSoC4/CyLib.c **** 
2422:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
 710              		.loc 1 2422 0
 711 0000 8308     		lsrs	r3, r0, #2
 712 0002 064A     		ldr	r2, .L53
 713 0004 9B00     		lsls	r3, r3, #2
 714 0006 9B18     		adds	r3, r3, r2
 715 0008 1968     		ldr	r1, [r3]
 716              	.LVL46:
2423:Generated_Source\PSoC4/CyLib.c **** 
2424:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
 717              		.loc 1 2424 0
 718 000a 0322     		movs	r2, #3
 719 000c 0300     		movs	r3, r0
 720 000e 1340     		ands	r3, r2
 721 0010 9340     		lsls	r3, r3, r2
 722 0012 0633     		adds	r3, r3, #6
 723 0014 D940     		lsrs	r1, r1, r3
 724              	.LVL47:
 725 0016 0800     		movs	r0, r1
 726              	.LVL48:
2425:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 57


 727              		.loc 1 2425 0
 728              		@ sp needed
2424:Generated_Source\PSoC4/CyLib.c **** }
 729              		.loc 1 2424 0
 730 0018 1040     		ands	r0, r2
 731              		.loc 1 2425 0
 732 001a 7047     		bx	lr
 733              	.L54:
 734              		.align	2
 735              	.L53:
 736 001c 00E400E0 		.word	-536812544
 737              		.cfi_endproc
 738              	.LFE20:
 739              		.size	CyIntGetPriority, .-CyIntGetPriority
 740              		.section	.text.CyIntEnable,"ax",%progbits
 741              		.align	1
 742              		.global	CyIntEnable
 743              		.code	16
 744              		.thumb_func
 745              		.type	CyIntEnable, %function
 746              	CyIntEnable:
 747              	.LFB21:
2426:Generated_Source\PSoC4/CyLib.c **** 
2427:Generated_Source\PSoC4/CyLib.c **** 
2428:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2429:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2430:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2431:Generated_Source\PSoC4/CyLib.c **** *
2432:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2433:Generated_Source\PSoC4/CyLib.c **** *
2434:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2435:Generated_Source\PSoC4/CyLib.c **** *
2436:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2437:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2438:Generated_Source\PSoC4/CyLib.c **** {
 748              		.loc 1 2438 0
 749              		.cfi_startproc
 750              		@ args = 0, pretend = 0, frame = 0
 751              		@ frame_needed = 0, uses_anonymous_args = 0
 752              		@ link register save eliminated.
 753              	.LVL49:
2439:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 754              		.loc 1 2439 0
 755 0000 1F23     		movs	r3, #31
 756 0002 1840     		ands	r0, r3
 757              	.LVL50:
 758 0004 1E3B     		subs	r3, r3, #30
 759 0006 8340     		lsls	r3, r3, r0
 760 0008 014A     		ldr	r2, .L56
2440:Generated_Source\PSoC4/CyLib.c **** }
 761              		.loc 1 2440 0
 762              		@ sp needed
2439:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 763              		.loc 1 2439 0
 764 000a 1360     		str	r3, [r2]
 765              		.loc 1 2440 0
 766 000c 7047     		bx	lr
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 58


 767              	.L57:
 768 000e C046     		.align	2
 769              	.L56:
 770 0010 00E100E0 		.word	-536813312
 771              		.cfi_endproc
 772              	.LFE21:
 773              		.size	CyIntEnable, .-CyIntEnable
 774              		.section	.text.CyIntGetState,"ax",%progbits
 775              		.align	1
 776              		.global	CyIntGetState
 777              		.code	16
 778              		.thumb_func
 779              		.type	CyIntGetState, %function
 780              	CyIntGetState:
 781              	.LFB22:
2441:Generated_Source\PSoC4/CyLib.c **** 
2442:Generated_Source\PSoC4/CyLib.c **** 
2443:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2444:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2445:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2446:Generated_Source\PSoC4/CyLib.c **** *
2447:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2448:Generated_Source\PSoC4/CyLib.c **** *
2449:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2450:Generated_Source\PSoC4/CyLib.c **** *
2451:Generated_Source\PSoC4/CyLib.c **** * \return
2452:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2453:Generated_Source\PSoC4/CyLib.c **** *
2454:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2455:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2456:Generated_Source\PSoC4/CyLib.c **** {
 782              		.loc 1 2456 0
 783              		.cfi_startproc
 784              		@ args = 0, pretend = 0, frame = 0
 785              		@ frame_needed = 0, uses_anonymous_args = 0
 786              		@ link register save eliminated.
 787              	.LVL51:
2457:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2458:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 788              		.loc 1 2458 0
 789 0000 1F22     		movs	r2, #31
 790 0002 044B     		ldr	r3, .L59
 791 0004 1040     		ands	r0, r2
 792              	.LVL52:
 793 0006 1B68     		ldr	r3, [r3]
2459:Generated_Source\PSoC4/CyLib.c **** }
 794              		.loc 1 2459 0
 795              		@ sp needed
2458:Generated_Source\PSoC4/CyLib.c **** }
 796              		.loc 1 2458 0
 797 0008 C340     		lsrs	r3, r3, r0
 798 000a 1800     		movs	r0, r3
 799 000c 0123     		movs	r3, #1
 800 000e 1840     		ands	r0, r3
 801              		.loc 1 2459 0
 802 0010 7047     		bx	lr
 803              	.L60:
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 59


 804 0012 C046     		.align	2
 805              	.L59:
 806 0014 00E100E0 		.word	-536813312
 807              		.cfi_endproc
 808              	.LFE22:
 809              		.size	CyIntGetState, .-CyIntGetState
 810              		.section	.text.CyIntDisable,"ax",%progbits
 811              		.align	1
 812              		.global	CyIntDisable
 813              		.code	16
 814              		.thumb_func
 815              		.type	CyIntDisable, %function
 816              	CyIntDisable:
 817              	.LFB23:
2460:Generated_Source\PSoC4/CyLib.c **** 
2461:Generated_Source\PSoC4/CyLib.c **** 
2462:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2463:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2464:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2465:Generated_Source\PSoC4/CyLib.c **** *
2466:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2467:Generated_Source\PSoC4/CyLib.c **** *
2468:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2469:Generated_Source\PSoC4/CyLib.c **** *
2470:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2471:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2472:Generated_Source\PSoC4/CyLib.c **** {
 818              		.loc 1 2472 0
 819              		.cfi_startproc
 820              		@ args = 0, pretend = 0, frame = 0
 821              		@ frame_needed = 0, uses_anonymous_args = 0
 822              		@ link register save eliminated.
 823              	.LVL53:
2473:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 824              		.loc 1 2473 0
 825 0000 1F23     		movs	r3, #31
 826 0002 1840     		ands	r0, r3
 827              	.LVL54:
 828 0004 1E3B     		subs	r3, r3, #30
 829 0006 8340     		lsls	r3, r3, r0
 830 0008 014A     		ldr	r2, .L62
2474:Generated_Source\PSoC4/CyLib.c **** }
 831              		.loc 1 2474 0
 832              		@ sp needed
2473:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 833              		.loc 1 2473 0
 834 000a 1360     		str	r3, [r2]
 835              		.loc 1 2474 0
 836 000c 7047     		bx	lr
 837              	.L63:
 838 000e C046     		.align	2
 839              	.L62:
 840 0010 80E100E0 		.word	-536813184
 841              		.cfi_endproc
 842              	.LFE23:
 843              		.size	CyIntDisable, .-CyIntDisable
 844              		.section	.text.CyIntSetPending,"ax",%progbits
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 60


 845              		.align	1
 846              		.global	CyIntSetPending
 847              		.code	16
 848              		.thumb_func
 849              		.type	CyIntSetPending, %function
 850              	CyIntSetPending:
 851              	.LFB24:
2475:Generated_Source\PSoC4/CyLib.c **** 
2476:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2477:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2478:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2479:Generated_Source\PSoC4/CyLib.c **** *
2480:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2481:Generated_Source\PSoC4/CyLib.c **** *
2482:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2483:Generated_Source\PSoC4/CyLib.c **** *
2484:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2485:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2486:Generated_Source\PSoC4/CyLib.c **** {
 852              		.loc 1 2486 0
 853              		.cfi_startproc
 854              		@ args = 0, pretend = 0, frame = 0
 855              		@ frame_needed = 0, uses_anonymous_args = 0
 856              		@ link register save eliminated.
 857              	.LVL55:
2487:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 858              		.loc 1 2487 0
 859 0000 1F23     		movs	r3, #31
 860 0002 1840     		ands	r0, r3
 861              	.LVL56:
 862 0004 1E3B     		subs	r3, r3, #30
 863 0006 8340     		lsls	r3, r3, r0
 864 0008 014A     		ldr	r2, .L65
2488:Generated_Source\PSoC4/CyLib.c **** }
 865              		.loc 1 2488 0
 866              		@ sp needed
2487:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 867              		.loc 1 2487 0
 868 000a 1360     		str	r3, [r2]
 869              		.loc 1 2488 0
 870 000c 7047     		bx	lr
 871              	.L66:
 872 000e C046     		.align	2
 873              	.L65:
 874 0010 00E200E0 		.word	-536813056
 875              		.cfi_endproc
 876              	.LFE24:
 877              		.size	CyIntSetPending, .-CyIntSetPending
 878              		.section	.text.CyIntClearPending,"ax",%progbits
 879              		.align	1
 880              		.global	CyIntClearPending
 881              		.code	16
 882              		.thumb_func
 883              		.type	CyIntClearPending, %function
 884              	CyIntClearPending:
 885              	.LFB25:
2489:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 61


2490:Generated_Source\PSoC4/CyLib.c **** 
2491:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2492:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2493:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2494:Generated_Source\PSoC4/CyLib.c **** *
2495:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2496:Generated_Source\PSoC4/CyLib.c **** *
2497:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2498:Generated_Source\PSoC4/CyLib.c **** *
2499:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2500:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2501:Generated_Source\PSoC4/CyLib.c **** {
 886              		.loc 1 2501 0
 887              		.cfi_startproc
 888              		@ args = 0, pretend = 0, frame = 0
 889              		@ frame_needed = 0, uses_anonymous_args = 0
 890              		@ link register save eliminated.
 891              	.LVL57:
2502:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 892              		.loc 1 2502 0
 893 0000 1F23     		movs	r3, #31
 894 0002 1840     		ands	r0, r3
 895              	.LVL58:
 896 0004 1E3B     		subs	r3, r3, #30
 897 0006 8340     		lsls	r3, r3, r0
 898 0008 014A     		ldr	r2, .L68
2503:Generated_Source\PSoC4/CyLib.c **** }
 899              		.loc 1 2503 0
 900              		@ sp needed
2502:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 901              		.loc 1 2502 0
 902 000a 1360     		str	r3, [r2]
 903              		.loc 1 2503 0
 904 000c 7047     		bx	lr
 905              	.L69:
 906 000e C046     		.align	2
 907              	.L68:
 908 0010 80E200E0 		.word	-536812928
 909              		.cfi_endproc
 910              	.LFE25:
 911              		.size	CyIntClearPending, .-CyIntClearPending
 912              		.section	.text.CyHalt,"ax",%progbits
 913              		.align	1
 914              		.global	CyHalt
 915              		.code	16
 916              		.thumb_func
 917              		.type	CyHalt, %function
 918              	CyHalt:
 919              	.LFB26:
2504:Generated_Source\PSoC4/CyLib.c **** 
2505:Generated_Source\PSoC4/CyLib.c **** 
2506:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2507:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2508:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2509:Generated_Source\PSoC4/CyLib.c **** *
2510:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2511:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 62


2512:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2513:Generated_Source\PSoC4/CyLib.c **** *
2514:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2515:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2516:Generated_Source\PSoC4/CyLib.c **** {
 920              		.loc 1 2516 0
 921              		.cfi_startproc
 922              		@ args = 0, pretend = 0, frame = 0
 923              		@ frame_needed = 0, uses_anonymous_args = 0
 924              		@ link register save eliminated.
 925              	.LVL59:
2517:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2518:Generated_Source\PSoC4/CyLib.c ****     {
2519:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2520:Generated_Source\PSoC4/CyLib.c ****     }
2521:Generated_Source\PSoC4/CyLib.c **** 
2522:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2523:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2524:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2525:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 926              		.loc 1 2525 0
 927              		.syntax divided
 928              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 929 0000 01BE     		    bkpt    1
 930              	@ 0 "" 2
2526:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2527:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2528:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2529:Generated_Source\PSoC4/CyLib.c **** }
 931              		.loc 1 2529 0
 932              		.thumb
 933              		.syntax unified
 934              		@ sp needed
 935 0002 7047     		bx	lr
 936              		.cfi_endproc
 937              	.LFE26:
 938              		.size	CyHalt, .-CyHalt
 939              		.section	.text.CySoftwareReset,"ax",%progbits
 940              		.align	1
 941              		.global	CySoftwareReset
 942              		.code	16
 943              		.thumb_func
 944              		.type	CySoftwareReset, %function
 945              	CySoftwareReset:
 946              	.LFB27:
2530:Generated_Source\PSoC4/CyLib.c **** 
2531:Generated_Source\PSoC4/CyLib.c **** 
2532:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2533:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2534:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2535:Generated_Source\PSoC4/CyLib.c **** *
2536:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2537:Generated_Source\PSoC4/CyLib.c **** *
2538:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2539:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2540:Generated_Source\PSoC4/CyLib.c **** {
 947              		.loc 1 2540 0
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 63


 948              		.cfi_startproc
 949              		@ args = 0, pretend = 0, frame = 0
 950              		@ frame_needed = 0, uses_anonymous_args = 0
 951              		@ link register save eliminated.
2541:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2542:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2543:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2544:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2545:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 952              		.loc 1 2545 0
 953 0000 034A     		ldr	r2, .L72
2546:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 954              		.loc 1 2546 0
 955 0002 0449     		ldr	r1, .L72+4
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 956              		.loc 1 2545 0
 957 0004 1368     		ldr	r3, [r2]
2547:Generated_Source\PSoC4/CyLib.c **** }
 958              		.loc 1 2547 0
 959              		@ sp needed
2546:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 960              		.loc 1 2546 0
 961 0006 9BB2     		uxth	r3, r3
 962 0008 0B43     		orrs	r3, r1
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 963              		.loc 1 2545 0
 964 000a 1360     		str	r3, [r2]
 965              		.loc 1 2547 0
 966 000c 7047     		bx	lr
 967              	.L73:
 968 000e C046     		.align	2
 969              	.L72:
 970 0010 0CED00E0 		.word	-536810228
 971 0014 0400FA05 		.word	100270084
 972              		.cfi_endproc
 973              	.LFE27:
 974              		.size	CySoftwareReset, .-CySoftwareReset
 975              		.section	.text.CyDelay,"ax",%progbits
 976              		.align	1
 977              		.global	CyDelay
 978              		.code	16
 979              		.thumb_func
 980              		.type	CyDelay, %function
 981              	CyDelay:
 982              	.LFB28:
2548:Generated_Source\PSoC4/CyLib.c **** 
2549:Generated_Source\PSoC4/CyLib.c **** 
2550:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2551:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2552:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2553:Generated_Source\PSoC4/CyLib.c **** *
2554:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2555:Generated_Source\PSoC4/CyLib.c **** *
2556:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2557:Generated_Source\PSoC4/CyLib.c **** *
2558:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2559:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 64


2560:Generated_Source\PSoC4/CyLib.c **** {
 983              		.loc 1 2560 0
 984              		.cfi_startproc
 985              		@ args = 0, pretend = 0, frame = 0
 986              		@ frame_needed = 0, uses_anonymous_args = 0
 987              	.LVL60:
 988 0000 70B5     		push	{r4, r5, r6, lr}
 989              		.cfi_def_cfa_offset 16
 990              		.cfi_offset 4, -16
 991              		.cfi_offset 5, -12
 992              		.cfi_offset 6, -8
 993              		.cfi_offset 14, -4
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 994              		.loc 1 2561 0
 995 0002 8025     		movs	r5, #128
2560:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 996              		.loc 1 2560 0
 997 0004 0400     		movs	r4, r0
 998              		.loc 1 2561 0
 999 0006 2D02     		lsls	r5, r5, #8
 1000              	.LVL61:
 1001              	.L75:
 1002 0008 064B     		ldr	r3, .L78
 1003 000a AC42     		cmp	r4, r5
 1004 000c 05D9     		bls	.L77
2562:Generated_Source\PSoC4/CyLib.c ****     {
2563:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2564:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2565:Generated_Source\PSoC4/CyLib.c ****          */
2566:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1005              		.loc 1 2566 0
 1006 000e 5868     		ldr	r0, [r3, #4]
 1007 0010 FFF7FEFF 		bl	CyDelayCycles
 1008              	.LVL62:
2567:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1009              		.loc 1 2567 0
 1010 0014 044B     		ldr	r3, .L78+4
 1011 0016 E418     		adds	r4, r4, r3
 1012              	.LVL63:
 1013 0018 F6E7     		b	.L75
 1014              	.L77:
2568:Generated_Source\PSoC4/CyLib.c ****     }
2569:Generated_Source\PSoC4/CyLib.c **** 
2570:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1015              		.loc 1 2570 0
 1016 001a 9868     		ldr	r0, [r3, #8]
2571:Generated_Source\PSoC4/CyLib.c **** }
 1017              		.loc 1 2571 0
 1018              		@ sp needed
2570:Generated_Source\PSoC4/CyLib.c **** }
 1019              		.loc 1 2570 0
 1020 001c 6043     		muls	r0, r4
 1021 001e FFF7FEFF 		bl	CyDelayCycles
 1022              	.LVL64:
 1023              	.LVL65:
 1024              		.loc 1 2571 0
 1025 0022 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 65


 1026              	.L79:
 1027              		.align	2
 1028              	.L78:
 1029 0024 00000000 		.word	.LANCHOR0
 1030 0028 0080FFFF 		.word	-32768
 1031              		.cfi_endproc
 1032              	.LFE28:
 1033              		.size	CyDelay, .-CyDelay
 1034              		.section	.text.CySysClkImoEnableWcoLock,"ax",%progbits
 1035              		.align	1
 1036              		.global	CySysClkImoEnableWcoLock
 1037              		.code	16
 1038              		.thumb_func
 1039              		.type	CySysClkImoEnableWcoLock, %function
 1040              	CySysClkImoEnableWcoLock:
 1041              	.LFB3:
 176:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 1042              		.loc 1 176 0
 1043              		.cfi_startproc
 1044              		@ args = 0, pretend = 0, frame = 8
 1045              		@ frame_needed = 0, uses_anonymous_args = 0
 1046              	.LVL66:
 1047 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
 1048              		.cfi_def_cfa_offset 24
 1049              		.cfi_offset 0, -24
 1050              		.cfi_offset 1, -20
 1051              		.cfi_offset 2, -16
 1052              		.cfi_offset 4, -12
 1053              		.cfi_offset 5, -8
 1054              		.cfi_offset 14, -4
 187:Generated_Source\PSoC4/CyLib.c ****         {
 1055              		.loc 1 187 0
 1056 0002 FFF7FEFF 		bl	CySysClkWcoEnabled
 1057              	.LVL67:
 1058 0006 0028     		cmp	r0, #0
 1059 0008 42D0     		beq	.L80
 1060              	.LBB12:
 1061              	.LBB13:
 189:Generated_Source\PSoC4/CyLib.c **** 
 1062              		.loc 1 189 0
 1063 000a FFF7FEFF 		bl	CyEnterCriticalSection
 1064              	.LVL68:
 212:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 1065              		.loc 1 212 0
 1066 000e 1C21     		movs	r1, #28
 1067 0010 204B     		ldr	r3, .L89
 214:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 1068              		.loc 1 214 0
 1069 0012 214A     		ldr	r2, .L89+4
 212:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 1070              		.loc 1 212 0
 1071 0014 1B68     		ldr	r3, [r3]
 214:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 1072              		.loc 1 214 0
 1073 0016 1268     		ldr	r2, [r2]
 212:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 1074              		.loc 1 212 0
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 66


 1075 0018 9B00     		lsls	r3, r3, #2
 1076 001a 8A40     		lsls	r2, r2, r1
 1077 001c 0B40     		ands	r3, r1
 1078 001e 920F     		lsrs	r2, r2, #30
 1079 0020 1833     		adds	r3, r3, #24
 1080 0022 D340     		lsrs	r3, r3, r2
 238:Generated_Source\PSoC4/CyLib.c **** 
 1081              		.loc 1 238 0
 1082 0024 8025     		movs	r5, #128
 232:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 1083              		.loc 1 232 0
 1084 0026 1D49     		ldr	r1, .L89+8
 1085 0028 1D4A     		ldr	r2, .L89+12
 189:Generated_Source\PSoC4/CyLib.c **** 
 1086              		.loc 1 189 0
 1087 002a 0400     		movs	r4, r0
 1088              	.LVL69:
 232:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 1089              		.loc 1 232 0
 1090 002c 0868     		ldr	r0, [r1]
 238:Generated_Source\PSoC4/CyLib.c **** 
 1091              		.loc 1 238 0
 1092 002e ED01     		lsls	r5, r5, #7
 232:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 1093              		.loc 1 232 0
 1094 0030 1040     		ands	r0, r2
 1095              	.LVL70:
 238:Generated_Source\PSoC4/CyLib.c **** 
 1096              		.loc 1 238 0
 1097 0032 1C4A     		ldr	r2, .L89+16
 1098 0034 5A43     		muls	r2, r3
 1099 0036 5219     		adds	r2, r2, r5
 1100 0038 D20B     		lsrs	r2, r2, #15
 1101 003a 013A     		subs	r2, r2, #1
 1102 003c 0243     		orrs	r2, r0
 1103              	.LVL71:
 244:Generated_Source\PSoC4/CyLib.c ****             {
 1104              		.loc 1 244 0
 1105 003e 192B     		cmp	r3, #25
 1106 0040 01D8     		bhi	.L82
 246:Generated_Source\PSoC4/CyLib.c ****             }
 1107              		.loc 1 246 0
 1108 0042 194B     		ldr	r3, .L89+20
 1109              	.LVL72:
 1110 0044 0EE0     		b	.L88
 1111              	.LVL73:
 1112              	.L82:
 251:Generated_Source\PSoC4/CyLib.c **** 
 1113              		.loc 1 251 0
 1114 0046 194D     		ldr	r5, .L89+24
 250:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 1115              		.loc 1 250 0
 1116 0048 1948     		ldr	r0, .L89+28
 1117 004a 1818     		adds	r0, r3, r0
 251:Generated_Source\PSoC4/CyLib.c **** 
 1118              		.loc 1 251 0
 1119 004c EB18     		adds	r3, r5, r3
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 67


 1120              	.LVL74:
 241:Generated_Source\PSoC4/CyLib.c **** 
 1121              		.loc 1 241 0
 1122 004e A025     		movs	r5, #160
 251:Generated_Source\PSoC4/CyLib.c **** 
 1123              		.loc 1 251 0
 1124 0050 1A3B     		subs	r3, r3, #26
 250:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 1125              		.loc 1 250 0
 1126 0052 0078     		ldrb	r0, [r0]
 1127              	.LVL75:
 1128 0054 1B78     		ldrb	r3, [r3]
 1129              	.LVL76:
 241:Generated_Source\PSoC4/CyLib.c **** 
 1130              		.loc 1 241 0
 1131 0056 6D03     		lsls	r5, r5, #13
 256:Generated_Source\PSoC4/CyLib.c ****             }
 1132              		.loc 1 256 0
 1133 0058 1B18     		adds	r3, r3, r0
 1134              	.LVL77:
 241:Generated_Source\PSoC4/CyLib.c **** 
 1135              		.loc 1 241 0
 1136 005a 2A43     		orrs	r2, r5
 1137              	.LVL78:
 256:Generated_Source\PSoC4/CyLib.c ****             }
 1138              		.loc 1 256 0
 1139 005c FF2B     		cmp	r3, #255
 1140 005e 00D9     		bls	.L84
 1141 0060 FF23     		movs	r3, #255
 1142              	.L84:
 1143 0062 9B05     		lsls	r3, r3, #22
 1144              	.L88:
 1145 0064 1A43     		orrs	r2, r3
 1146              	.LVL79:
 261:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 1147              		.loc 1 261 0
 1148 0066 134D     		ldr	r5, .L89+32
 259:Generated_Source\PSoC4/CyLib.c **** 
 1149              		.loc 1 259 0
 1150 0068 0A60     		str	r2, [r1]
 261:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 1151              		.loc 1 261 0
 1152 006a 2B68     		ldr	r3, [r5]
 262:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 1153              		.loc 1 262 0
 1154 006c 3020     		movs	r0, #48
 261:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 1155              		.loc 1 261 0
 1156 006e 0193     		str	r3, [sp, #4]
 262:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 1157              		.loc 1 262 0
 1158 0070 FFF7FEFF 		bl	CySysFlashSetWaitCycles
 1159              	.LVL80:
 263:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 1160              		.loc 1 263 0
 1161 0074 8021     		movs	r1, #128
 1162 0076 104A     		ldr	r2, .L89+36
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 68


 1163 0078 C905     		lsls	r1, r1, #23
 1164 007a 1368     		ldr	r3, [r2]
 264:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 1165              		.loc 1 264 0
 1166 007c 1420     		movs	r0, #20
 263:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 1167              		.loc 1 263 0
 1168 007e 0B43     		orrs	r3, r1
 1169 0080 1360     		str	r3, [r2]
 264:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 1170              		.loc 1 264 0
 1171 0082 FFF7FEFF 		bl	CyDelay
 1172              	.LVL81:
 265:Generated_Source\PSoC4/CyLib.c **** 
 1173              		.loc 1 265 0
 1174 0086 019B     		ldr	r3, [sp, #4]
 267:Generated_Source\PSoC4/CyLib.c ****         }
 1175              		.loc 1 267 0
 1176 0088 2000     		movs	r0, r4
 265:Generated_Source\PSoC4/CyLib.c **** 
 1177              		.loc 1 265 0
 1178 008a 2B60     		str	r3, [r5]
 267:Generated_Source\PSoC4/CyLib.c ****         }
 1179              		.loc 1 267 0
 1180 008c FFF7FEFF 		bl	CyExitCriticalSection
 1181              	.LVL82:
 1182              	.L80:
 1183              	.LBE13:
 1184              	.LBE12:
 269:Generated_Source\PSoC4/CyLib.c **** 
 1185              		.loc 1 269 0
 1186              		@ sp needed
 1187 0090 37BD     		pop	{r0, r1, r2, r4, r5, pc}
 1188              	.L90:
 1189 0092 C046     		.align	2
 1190              	.L89:
 1191 0094 080F0340 		.word	1073942280
 1192 0098 28000340 		.word	1073938472
 1193 009c 08000740 		.word	1074200584
 1194 00a0 00F800C0 		.word	-1073678336
 1195 00a4 40420F00 		.word	1000000
 1196 00a8 0000D43F 		.word	1070858240
 1197 00ac 00000000 		.word	.LANCHOR1
 1198 00b0 CDF1FF0F 		.word	268431821
 1199 00b4 30001040 		.word	1074790448
 1200 00b8 00000740 		.word	1074200576
 1201              		.cfi_endproc
 1202              	.LFE3:
 1203              		.size	CySysClkImoEnableWcoLock, .-CySysClkImoEnableWcoLock
 1204              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 1205              		.align	1
 1206              		.global	CySysClkWriteImoFreq
 1207              		.code	16
 1208              		.thumb_func
 1209              		.type	CySysClkWriteImoFreq, %function
 1210              	CySysClkWriteImoFreq:
 1211              	.LFB10:
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 69


 829:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 1212              		.loc 1 829 0
 1213              		.cfi_startproc
 1214              		@ args = 0, pretend = 0, frame = 8
 1215              		@ frame_needed = 0, uses_anonymous_args = 0
 1216              	.LVL83:
 1217 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 1218              		.cfi_def_cfa_offset 32
 1219              		.cfi_offset 0, -32
 1220              		.cfi_offset 1, -28
 1221              		.cfi_offset 2, -24
 1222              		.cfi_offset 4, -20
 1223              		.cfi_offset 5, -16
 1224              		.cfi_offset 6, -12
 1225              		.cfi_offset 7, -8
 1226              		.cfi_offset 14, -4
 846:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 1227              		.loc 1 846 0
 1228 0002 0500     		movs	r5, r0
 1229 0004 183D     		subs	r5, r5, #24
 829:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 1230              		.loc 1 829 0
 1231 0006 0400     		movs	r4, r0
 846:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 1232              		.loc 1 846 0
 1233 0008 182D     		cmp	r5, #24
 1234 000a 45D8     		bhi	.L91
 1235 000c 0126     		movs	r6, #1
 1236 000e 234B     		ldr	r3, .L101
 1237 0010 3700     		movs	r7, r6
 1238 0012 EB40     		lsrs	r3, r3, r5
 1239 0014 9F43     		bics	r7, r3
 1240 0016 3FD1     		bne	.L91
 851:Generated_Source\PSoC4/CyLib.c **** 
 1241              		.loc 1 851 0
 1242 0018 FFF7FEFF 		bl	CyEnterCriticalSection
 1243              	.LVL84:
 1244 001c 0190     		str	r0, [sp, #4]
 1245              	.LVL85:
 854:Generated_Source\PSoC4/CyLib.c ****                 {
 1246              		.loc 1 854 0
 1247 001e FFF7FEFF 		bl	CySysClkImoGetWcoLock
 1248              	.LVL86:
 834:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 1249              		.loc 1 834 0
 1250 0022 0097     		str	r7, [sp]
 854:Generated_Source\PSoC4/CyLib.c ****                 {
 1251              		.loc 1 854 0
 1252 0024 0028     		cmp	r0, #0
 1253 0026 02D0     		beq	.L93
 1254              	.LVL87:
 857:Generated_Source\PSoC4/CyLib.c ****                 }
 1255              		.loc 1 857 0
 1256 0028 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 1257              	.LVL88:
 856:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 1258              		.loc 1 856 0
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 70


 1259 002c 0096     		str	r6, [sp]
 1260              	.LVL89:
 1261              	.L93:
 882:Generated_Source\PSoC4/CyLib.c **** 
 1262              		.loc 1 882 0
 1263 002e 0727     		movs	r7, #7
 1264 0030 1B4E     		ldr	r6, .L101+4
 902:Generated_Source\PSoC4/CyLib.c **** 
 1265              		.loc 1 902 0
 1266 0032 1C4A     		ldr	r2, .L101+8
 882:Generated_Source\PSoC4/CyLib.c **** 
 1267              		.loc 1 882 0
 1268 0034 3368     		ldr	r3, [r6]
 908:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 1269              		.loc 1 908 0
 1270 0036 1C49     		ldr	r1, .L101+12
 882:Generated_Source\PSoC4/CyLib.c **** 
 1271              		.loc 1 882 0
 1272 0038 BB43     		bics	r3, r7
 1273 003a 3360     		str	r3, [r6]
 900:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 1274              		.loc 1 900 0
 1275 003c 1B4B     		ldr	r3, .L101+16
 1276 003e E318     		adds	r3, r4, r3
 1277 0040 1B78     		ldrb	r3, [r3]
 1278 0042 DBB2     		uxtb	r3, r3
 1279              	.LVL90:
 902:Generated_Source\PSoC4/CyLib.c **** 
 1280              		.loc 1 902 0
 1281 0044 1360     		str	r3, [r2]
 905:Generated_Source\PSoC4/CyLib.c **** 
 1282              		.loc 1 905 0
 1283 0046 1A4A     		ldr	r2, .L101+20
 1284 0048 1368     		ldr	r3, [r2]
 1285              	.LVL91:
 1286 004a BB43     		bics	r3, r7
 1287 004c 1360     		str	r3, [r2]
 1288              	.LVL92:
 909:Generated_Source\PSoC4/CyLib.c **** 
 1289              		.loc 1 909 0
 1290 004e 194B     		ldr	r3, .L101+24
 908:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 1291              		.loc 1 908 0
 1292 0050 0A68     		ldr	r2, [r1]
 909:Generated_Source\PSoC4/CyLib.c **** 
 1293              		.loc 1 909 0
 1294 0052 E318     		adds	r3, r4, r3
 1295 0054 1878     		ldrb	r0, [r3]
 908:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 1296              		.loc 1 908 0
 1297 0056 7F23     		movs	r3, #127
 1298 0058 9A43     		bics	r2, r3
 1299 005a 0340     		ands	r3, r0
 1300 005c 1343     		orrs	r3, r2
 1301 005e 0B60     		str	r3, [r1]
 911:Generated_Source\PSoC4/CyLib.c **** 
 1302              		.loc 1 911 0
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 71


 1303 0060 3220     		movs	r0, #50
 1304 0062 FFF7FEFF 		bl	CyDelayCycles
 1305              	.LVL93:
 913:Generated_Source\PSoC4/CyLib.c ****             {
 1306              		.loc 1 913 0
 1307 0066 182C     		cmp	r4, #24
 1308 0068 0ED0     		beq	.L94
 916:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 1309              		.loc 1 916 0
 1310 006a 3368     		ldr	r3, [r6]
 1311 006c 1C3C     		subs	r4, r4, #28
 1312              	.LVL94:
 1313 006e A408     		lsrs	r4, r4, #2
 1314              	.LVL95:
 1315 0070 BB43     		bics	r3, r7
 1316 0072 3C40     		ands	r4, r7
 1317 0074 1C43     		orrs	r4, r3
 1318 0076 3460     		str	r4, [r6]
 919:Generated_Source\PSoC4/CyLib.c **** 
 1319              		.loc 1 919 0
 1320 0078 3220     		movs	r0, #50
 1321 007a FFF7FEFF 		bl	CyDelayCycles
 1322              	.LVL96:
 923:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 1323              		.loc 1 923 0
 1324 007e 3368     		ldr	r3, [r6]
 924:Generated_Source\PSoC4/CyLib.c ****             }
 1325              		.loc 1 924 0
 1326 0080 AD08     		lsrs	r5, r5, #2
 1327              	.LVL97:
 923:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 1328              		.loc 1 923 0
 1329 0082 BB43     		bics	r3, r7
 1330 0084 1D43     		orrs	r5, r3
 1331 0086 3560     		str	r5, [r6]
 1332              	.L94:
 928:Generated_Source\PSoC4/CyLib.c ****                 {
 1333              		.loc 1 928 0
 1334 0088 009B     		ldr	r3, [sp]
 1335 008a 012B     		cmp	r3, #1
 1336 008c 01D1     		bne	.L95
 930:Generated_Source\PSoC4/CyLib.c ****                 }
 1337              		.loc 1 930 0
 1338 008e FFF7FEFF 		bl	CySysClkImoEnableWcoLock
 1339              	.LVL98:
 1340              	.L95:
 942:Generated_Source\PSoC4/CyLib.c ****         }
 1341              		.loc 1 942 0
 1342 0092 0198     		ldr	r0, [sp, #4]
 1343 0094 FFF7FEFF 		bl	CyExitCriticalSection
 1344              	.LVL99:
 1345              	.L91:
 949:Generated_Source\PSoC4/CyLib.c **** 
 1346              		.loc 1 949 0
 1347              		@ sp needed
 1348 0098 F7BD     		pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 1349              	.L102:
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 72


 1350 009a C046     		.align	2
 1351              	.L101:
 1352 009c 11111101 		.word	17895697
 1353 00a0 080F0340 		.word	1073942280
 1354 00a4 0C0F0340 		.word	1073942284
 1355 00a8 180F0340 		.word	1073942296
 1356 00ac CDF1FF0F 		.word	268431821
 1357 00b0 100F0340 		.word	1073942288
 1358 00b4 B4F1FF0F 		.word	268431796
 1359              		.cfi_endproc
 1360              	.LFE10:
 1361              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1362              		.section	.text.CyDelayUs,"ax",%progbits
 1363              		.align	1
 1364              		.global	CyDelayUs
 1365              		.code	16
 1366              		.thumb_func
 1367              		.type	CyDelayUs, %function
 1368              	CyDelayUs:
 1369              	.LFB29:
2572:Generated_Source\PSoC4/CyLib.c **** 
2573:Generated_Source\PSoC4/CyLib.c **** 
2574:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2575:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2576:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2577:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2578:Generated_Source\PSoC4/CyLib.c **** *
2579:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2580:Generated_Source\PSoC4/CyLib.c **** *
2581:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2582:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2583:Generated_Source\PSoC4/CyLib.c **** {
 1370              		.loc 1 2583 0
 1371              		.cfi_startproc
 1372              		@ args = 0, pretend = 0, frame = 0
 1373              		@ frame_needed = 0, uses_anonymous_args = 0
 1374              	.LVL100:
 1375 0000 10B5     		push	{r4, lr}
 1376              		.cfi_def_cfa_offset 8
 1377              		.cfi_offset 4, -8
 1378              		.cfi_offset 14, -4
2584:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1379              		.loc 1 2584 0
 1380 0002 034B     		ldr	r3, .L104
2585:Generated_Source\PSoC4/CyLib.c **** }
 1381              		.loc 1 2585 0
 1382              		@ sp needed
2584:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1383              		.loc 1 2584 0
 1384 0004 1B7B     		ldrb	r3, [r3, #12]
 1385 0006 5843     		muls	r0, r3
 1386              	.LVL101:
 1387 0008 FFF7FEFF 		bl	CyDelayCycles
 1388              	.LVL102:
 1389              		.loc 1 2585 0
 1390 000c 10BD     		pop	{r4, pc}
 1391              	.L105:
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 73


 1392 000e C046     		.align	2
 1393              	.L104:
 1394 0010 00000000 		.word	.LANCHOR0
 1395              		.cfi_endproc
 1396              	.LFE29:
 1397              		.size	CyDelayUs, .-CyDelayUs
 1398              		.global	__aeabi_uidiv
 1399              		.section	.text.CyDelayFreq,"ax",%progbits
 1400              		.align	1
 1401              		.global	CyDelayFreq
 1402              		.code	16
 1403              		.thumb_func
 1404              		.type	CyDelayFreq, %function
 1405              	CyDelayFreq:
 1406              	.LFB30:
2586:Generated_Source\PSoC4/CyLib.c **** 
2587:Generated_Source\PSoC4/CyLib.c **** 
2588:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2589:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2590:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2591:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2592:Generated_Source\PSoC4/CyLib.c **** *
2593:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2594:Generated_Source\PSoC4/CyLib.c **** *
2595:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2596:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2597:Generated_Source\PSoC4/CyLib.c **** {
 1407              		.loc 1 2597 0
 1408              		.cfi_startproc
 1409              		@ args = 0, pretend = 0, frame = 0
 1410              		@ frame_needed = 0, uses_anonymous_args = 0
 1411              	.LVL103:
 1412 0000 70B5     		push	{r4, r5, r6, lr}
 1413              		.cfi_def_cfa_offset 16
 1414              		.cfi_offset 4, -16
 1415              		.cfi_offset 5, -12
 1416              		.cfi_offset 6, -8
 1417              		.cfi_offset 14, -4
 1418 0002 0C4C     		ldr	r4, .L109
2598:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1419              		.loc 1 2598 0
 1420 0004 0028     		cmp	r0, #0
 1421 0006 01D0     		beq	.L107
2599:Generated_Source\PSoC4/CyLib.c ****     {
2600:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1422              		.loc 1 2600 0
 1423 0008 2061     		str	r0, [r4, #16]
 1424 000a 01E0     		b	.L108
 1425              	.L107:
2601:Generated_Source\PSoC4/CyLib.c ****     }
2602:Generated_Source\PSoC4/CyLib.c ****     else
2603:Generated_Source\PSoC4/CyLib.c ****     {
2604:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1426              		.loc 1 2604 0
 1427 000c 0A4B     		ldr	r3, .L109+4
 1428 000e 2361     		str	r3, [r4, #16]
 1429              	.L108:
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 74


2605:Generated_Source\PSoC4/CyLib.c ****     }
2606:Generated_Source\PSoC4/CyLib.c **** 
2607:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1430              		.loc 1 2607 0
 1431 0010 2569     		ldr	r5, [r4, #16]
 1432 0012 0A4B     		ldr	r3, .L109+8
 1433 0014 0A49     		ldr	r1, .L109+12
 1434 0016 E818     		adds	r0, r5, r3
 1435              	.LVL104:
 1436 0018 FFF7FEFF 		bl	__aeabi_uidiv
 1437              	.LVL105:
2608:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1438              		.loc 1 2608 0
 1439 001c FA21     		movs	r1, #250
 1440 001e 094B     		ldr	r3, .L109+16
2607:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1441              		.loc 1 2607 0
 1442 0020 2073     		strb	r0, [r4, #12]
 1443              		.loc 1 2608 0
 1444 0022 8900     		lsls	r1, r1, #2
 1445 0024 E818     		adds	r0, r5, r3
 1446 0026 FFF7FEFF 		bl	__aeabi_uidiv
 1447              	.LVL106:
 1448 002a A060     		str	r0, [r4, #8]
2609:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1449              		.loc 1 2609 0
 1450 002c C003     		lsls	r0, r0, #15
 1451 002e 6060     		str	r0, [r4, #4]
2610:Generated_Source\PSoC4/CyLib.c **** }
 1452              		.loc 1 2610 0
 1453              		@ sp needed
 1454 0030 70BD     		pop	{r4, r5, r6, pc}
 1455              	.L110:
 1456 0032 C046     		.align	2
 1457              	.L109:
 1458 0034 00000000 		.word	.LANCHOR0
 1459 0038 00366E01 		.word	24000000
 1460 003c 3F420F00 		.word	999999
 1461 0040 40420F00 		.word	1000000
 1462 0044 E7030000 		.word	999
 1463              		.cfi_endproc
 1464              	.LFE30:
 1465              		.size	CyDelayFreq, .-CyDelayFreq
 1466              		.section	.text.CySysTickInit,"ax",%progbits
 1467              		.align	1
 1468              		.global	CySysTickInit
 1469              		.code	16
 1470              		.thumb_func
 1471              		.type	CySysTickInit, %function
 1472              	CySysTickInit:
 1473              	.LFB32:
2611:Generated_Source\PSoC4/CyLib.c **** 
2612:Generated_Source\PSoC4/CyLib.c **** 
2613:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2614:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2615:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2616:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 75


2617:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2618:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2619:Generated_Source\PSoC4/CyLib.c **** *
2620:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2621:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2622:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2623:Generated_Source\PSoC4/CyLib.c **** *
2624:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2625:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2626:Generated_Source\PSoC4/CyLib.c **** *
2627:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2628:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2629:Generated_Source\PSoC4/CyLib.c **** {
2630:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
2631:Generated_Source\PSoC4/CyLib.c ****     {
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
2633:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
2634:Generated_Source\PSoC4/CyLib.c ****     }
2635:Generated_Source\PSoC4/CyLib.c **** 
2636:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
2637:Generated_Source\PSoC4/CyLib.c **** }
2638:Generated_Source\PSoC4/CyLib.c **** 
2639:Generated_Source\PSoC4/CyLib.c **** 
2640:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2641:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2642:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2643:Generated_Source\PSoC4/CyLib.c **** *
2644:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2645:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2646:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2647:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2648:Generated_Source\PSoC4/CyLib.c **** *
2649:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2650:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2651:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2652:Generated_Source\PSoC4/CyLib.c **** *
2653:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2654:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2655:Generated_Source\PSoC4/CyLib.c **** *
2656:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2657:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2658:Generated_Source\PSoC4/CyLib.c **** {
 1474              		.loc 1 2658 0
 1475              		.cfi_startproc
 1476              		@ args = 0, pretend = 0, frame = 0
 1477              		@ frame_needed = 0, uses_anonymous_args = 0
 1478              	.LVL107:
 1479 0000 10B5     		push	{r4, lr}
 1480              		.cfi_def_cfa_offset 8
 1481              		.cfi_offset 4, -8
 1482              		.cfi_offset 14, -4
2659:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2660:Generated_Source\PSoC4/CyLib.c **** 
2661:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2662:Generated_Source\PSoC4/CyLib.c ****     {
2663:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 1483              		.loc 1 2663 0
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 76


 1484 0002 0024     		movs	r4, #0
 1485              	.LBB24:
 1486              	.LBB25:
 1487              	.LBB26:
2664:Generated_Source\PSoC4/CyLib.c ****     }
2665:Generated_Source\PSoC4/CyLib.c **** 
2666:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
2667:Generated_Source\PSoC4/CyLib.c **** 
2668:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2669:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2670:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2671:Generated_Source\PSoC4/CyLib.c **** 
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
2673:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
2674:Generated_Source\PSoC4/CyLib.c **** }
2675:Generated_Source\PSoC4/CyLib.c **** 
2676:Generated_Source\PSoC4/CyLib.c **** 
2677:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2678:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2679:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2680:Generated_Source\PSoC4/CyLib.c **** *
2681:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2682:Generated_Source\PSoC4/CyLib.c **** *
2683:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2684:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2685:Generated_Source\PSoC4/CyLib.c **** *
2686:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2687:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2688:Generated_Source\PSoC4/CyLib.c **** {
2689:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
2690:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
2691:Generated_Source\PSoC4/CyLib.c **** }
2692:Generated_Source\PSoC4/CyLib.c **** 
2693:Generated_Source\PSoC4/CyLib.c **** 
2694:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2695:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2696:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2697:Generated_Source\PSoC4/CyLib.c **** *
2698:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2699:Generated_Source\PSoC4/CyLib.c **** *
2700:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2701:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2702:Generated_Source\PSoC4/CyLib.c **** *
2703:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2704:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2705:Generated_Source\PSoC4/CyLib.c **** {
2706:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
2707:Generated_Source\PSoC4/CyLib.c **** }
2708:Generated_Source\PSoC4/CyLib.c **** 
2709:Generated_Source\PSoC4/CyLib.c **** 
2710:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2711:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2712:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2713:Generated_Source\PSoC4/CyLib.c **** *
2714:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2715:Generated_Source\PSoC4/CyLib.c **** *
2716:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 77


2717:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2718:Generated_Source\PSoC4/CyLib.c **** *
2719:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2720:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2721:Generated_Source\PSoC4/CyLib.c **** {
2722:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
2723:Generated_Source\PSoC4/CyLib.c **** }
2724:Generated_Source\PSoC4/CyLib.c **** 
2725:Generated_Source\PSoC4/CyLib.c **** 
2726:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2727:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2728:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2729:Generated_Source\PSoC4/CyLib.c **** *
2730:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2731:Generated_Source\PSoC4/CyLib.c **** *
2732:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2733:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2734:Generated_Source\PSoC4/CyLib.c **** *
2735:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2736:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2737:Generated_Source\PSoC4/CyLib.c **** {
2738:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
2739:Generated_Source\PSoC4/CyLib.c **** }
2740:Generated_Source\PSoC4/CyLib.c **** 
2741:Generated_Source\PSoC4/CyLib.c **** 
2742:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2743:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2744:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2745:Generated_Source\PSoC4/CyLib.c **** *
2746:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2747:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2748:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2749:Generated_Source\PSoC4/CyLib.c **** *
2750:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2751:Generated_Source\PSoC4/CyLib.c **** *
2752:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2753:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2754:Generated_Source\PSoC4/CyLib.c **** {
2755:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
2756:Generated_Source\PSoC4/CyLib.c **** }
2757:Generated_Source\PSoC4/CyLib.c **** 
2758:Generated_Source\PSoC4/CyLib.c **** 
2759:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2760:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2761:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2762:Generated_Source\PSoC4/CyLib.c **** *
2763:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2764:Generated_Source\PSoC4/CyLib.c **** *
2765:Generated_Source\PSoC4/CyLib.c **** * \return
2766:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2767:Generated_Source\PSoC4/CyLib.c **** *
2768:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2769:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2770:Generated_Source\PSoC4/CyLib.c **** {
2771:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
2772:Generated_Source\PSoC4/CyLib.c **** }
2773:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 78


2774:Generated_Source\PSoC4/CyLib.c **** 
2775:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2776:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2777:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2778:Generated_Source\PSoC4/CyLib.c **** *
2779:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2780:Generated_Source\PSoC4/CyLib.c **** *
2781:Generated_Source\PSoC4/CyLib.c **** * \return
2782:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2783:Generated_Source\PSoC4/CyLib.c **** *
2784:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2785:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2786:Generated_Source\PSoC4/CyLib.c **** {
2787:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
2788:Generated_Source\PSoC4/CyLib.c **** }
2789:Generated_Source\PSoC4/CyLib.c **** 
2790:Generated_Source\PSoC4/CyLib.c **** 
2791:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2792:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2793:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2794:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2795:Generated_Source\PSoC4/CyLib.c ****     *
2796:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2797:Generated_Source\PSoC4/CyLib.c ****     *
2798:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2799:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2800:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2801:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2802:Generated_Source\PSoC4/CyLib.c ****     *
2803:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2804:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2805:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2806:Generated_Source\PSoC4/CyLib.c ****     *
2807:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2808:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2809:Generated_Source\PSoC4/CyLib.c ****     *
2810:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2811:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2812:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
2813:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2814:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2815:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2816:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2817:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2818:Generated_Source\PSoC4/CyLib.c ****     {
2819:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
2820:Generated_Source\PSoC4/CyLib.c ****         {
2821:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 1488              		.loc 1 2821 0
 1489 0004 0421     		movs	r1, #4
 1490              	.LBE26:
 1491              	.LBE25:
 1492              	.LBE24:
2663:Generated_Source\PSoC4/CyLib.c ****     }
 1493              		.loc 1 2663 0
 1494 0006 0C4B     		ldr	r3, .L112
 1495              	.LBB31:
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 79


 1496              	.LBB32:
2290:Generated_Source\PSoC4/CyLib.c **** 
 1497              		.loc 1 2290 0
 1498 0008 0C4A     		ldr	r2, .L112+4
 1499              	.LBE32:
 1500              	.LBE31:
2663:Generated_Source\PSoC4/CyLib.c ****     }
 1501              		.loc 1 2663 0
 1502 000a 1C60     		str	r4, [r3]
 1503              	.LVL108:
 1504 000c 1C61     		str	r4, [r3, #16]
 1505 000e 5C60     		str	r4, [r3, #4]
 1506              	.LVL109:
 1507 0010 9C60     		str	r4, [r3, #8]
 1508              	.LVL110:
 1509 0012 DC60     		str	r4, [r3, #12]
 1510              	.LVL111:
 1511              	.LBB35:
 1512              	.LBB33:
2290:Generated_Source\PSoC4/CyLib.c **** 
 1513              		.loc 1 2290 0
 1514 0014 0A4B     		ldr	r3, .L112+8
 1515              	.LVL112:
 1516              	.LBE33:
 1517              	.LBE35:
2674:Generated_Source\PSoC4/CyLib.c **** 
 1518              		.loc 1 2674 0
 1519              		@ sp needed
 1520              	.LBB36:
 1521              	.LBB34:
2290:Generated_Source\PSoC4/CyLib.c **** 
 1522              		.loc 1 2290 0
 1523 0016 1A60     		str	r2, [r3]
 1524              	.LVL113:
 1525              	.LBE34:
 1526              	.LBE36:
 1527              	.LBB37:
 1528              	.LBB29:
 1529              	.LBB27:
 1530              		.loc 1 2821 0
 1531 0018 0A4A     		ldr	r2, .L112+12
 1532 001a 1368     		ldr	r3, [r2]
 1533 001c 0B43     		orrs	r3, r1
 1534              	.LBE27:
 1535              	.LBE29:
 1536              	.LBE37:
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1537              		.loc 1 2672 0
 1538 001e FA21     		movs	r1, #250
 1539              	.LBB38:
 1540              	.LBB30:
 1541              	.LBB28:
 1542              		.loc 1 2821 0
 1543 0020 1360     		str	r3, [r2]
 1544              	.LVL114:
 1545              	.LBE28:
 1546              	.LBE30:
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 80


 1547              	.LBE38:
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1548              		.loc 1 2672 0
 1549 0022 094B     		ldr	r3, .L112+16
 1550 0024 8900     		lsls	r1, r1, #2
 1551 0026 1869     		ldr	r0, [r3, #16]
 1552 0028 FFF7FEFF 		bl	__aeabi_uidiv
 1553              	.LVL115:
 1554              	.LBB39:
 1555              	.LBB40:
2755:Generated_Source\PSoC4/CyLib.c **** }
 1556              		.loc 1 2755 0
 1557 002c 074B     		ldr	r3, .L112+20
 1558 002e 1860     		str	r0, [r3]
 1559              	.LVL116:
 1560              	.LBE40:
 1561              	.LBE39:
 1562              	.LBB41:
 1563              	.LBB42:
2822:Generated_Source\PSoC4/CyLib.c ****         }
2823:Generated_Source\PSoC4/CyLib.c ****         else
2824:Generated_Source\PSoC4/CyLib.c ****         {
2825:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
2826:Generated_Source\PSoC4/CyLib.c ****         }
2827:Generated_Source\PSoC4/CyLib.c ****     }
2828:Generated_Source\PSoC4/CyLib.c **** 
2829:Generated_Source\PSoC4/CyLib.c ****     
2830:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2831:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
2832:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2833:Generated_Source\PSoC4/CyLib.c ****     *
2834:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2835:Generated_Source\PSoC4/CyLib.c ****     *
2836:Generated_Source\PSoC4/CyLib.c ****     *  \return 
2837:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2838:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2839:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2840:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2841:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2842:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
2843:Generated_Source\PSoC4/CyLib.c ****     {
2844:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
2845:Generated_Source\PSoC4/CyLib.c ****     }
2846:Generated_Source\PSoC4/CyLib.c ****     
2847:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2848:Generated_Source\PSoC4/CyLib.c **** 
2849:Generated_Source\PSoC4/CyLib.c **** 
2850:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2851:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2852:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2853:Generated_Source\PSoC4/CyLib.c **** *
2854:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2855:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
2856:Generated_Source\PSoC4/CyLib.c **** *
2857:Generated_Source\PSoC4/CyLib.c **** * \return
2858:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2859:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 81


2860:Generated_Source\PSoC4/CyLib.c **** *
2861:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2862:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2863:Generated_Source\PSoC4/CyLib.c **** *
2864:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2865:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2866:Generated_Source\PSoC4/CyLib.c **** {
2867:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
2868:Generated_Source\PSoC4/CyLib.c **** }
2869:Generated_Source\PSoC4/CyLib.c **** 
2870:Generated_Source\PSoC4/CyLib.c **** 
2871:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2872:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2873:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2874:Generated_Source\PSoC4/CyLib.c **** *
2875:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2876:Generated_Source\PSoC4/CyLib.c **** *
2877:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2878:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2879:Generated_Source\PSoC4/CyLib.c **** {
2880:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1564              		.loc 1 2880 0
 1565 0030 074B     		ldr	r3, .L112+24
 1566 0032 1C60     		str	r4, [r3]
 1567              	.LBE42:
 1568              	.LBE41:
2674:Generated_Source\PSoC4/CyLib.c **** 
 1569              		.loc 1 2674 0
 1570 0034 10BD     		pop	{r4, pc}
 1571              	.L113:
 1572 0036 C046     		.align	2
 1573              	.L112:
 1574 0038 00000000 		.word	.LANCHOR2
 1575 003c 00000000 		.word	CySysTickServiceCallbacks
 1576 0040 3C000020 		.word	536870972
 1577 0044 10E000E0 		.word	-536813552
 1578 0048 00000000 		.word	.LANCHOR0
 1579 004c 14E000E0 		.word	-536813548
 1580 0050 18E000E0 		.word	-536813544
 1581              		.cfi_endproc
 1582              	.LFE32:
 1583              		.size	CySysTickInit, .-CySysTickInit
 1584              		.section	.text.CySysTickStop,"ax",%progbits
 1585              		.align	1
 1586              		.global	CySysTickStop
 1587              		.code	16
 1588              		.thumb_func
 1589              		.type	CySysTickStop, %function
 1590              	CySysTickStop:
 1591              	.LFB34:
2705:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1592              		.loc 1 2705 0
 1593              		.cfi_startproc
 1594              		@ args = 0, pretend = 0, frame = 0
 1595              		@ frame_needed = 0, uses_anonymous_args = 0
 1596              		@ link register save eliminated.
2706:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 82


 1597              		.loc 1 2706 0
 1598 0000 0121     		movs	r1, #1
 1599 0002 024A     		ldr	r2, .L115
2707:Generated_Source\PSoC4/CyLib.c **** 
 1600              		.loc 1 2707 0
 1601              		@ sp needed
2706:Generated_Source\PSoC4/CyLib.c **** }
 1602              		.loc 1 2706 0
 1603 0004 1368     		ldr	r3, [r2]
 1604 0006 8B43     		bics	r3, r1
 1605 0008 1360     		str	r3, [r2]
2707:Generated_Source\PSoC4/CyLib.c **** 
 1606              		.loc 1 2707 0
 1607 000a 7047     		bx	lr
 1608              	.L116:
 1609              		.align	2
 1610              	.L115:
 1611 000c 10E000E0 		.word	-536813552
 1612              		.cfi_endproc
 1613              	.LFE34:
 1614              		.size	CySysTickStop, .-CySysTickStop
 1615              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1616              		.align	1
 1617              		.global	CySysTickEnableInterrupt
 1618              		.code	16
 1619              		.thumb_func
 1620              		.type	CySysTickEnableInterrupt, %function
 1621              	CySysTickEnableInterrupt:
 1622              	.LFB35:
2721:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1623              		.loc 1 2721 0
 1624              		.cfi_startproc
 1625              		@ args = 0, pretend = 0, frame = 0
 1626              		@ frame_needed = 0, uses_anonymous_args = 0
 1627              		@ link register save eliminated.
2722:Generated_Source\PSoC4/CyLib.c **** }
 1628              		.loc 1 2722 0
 1629 0000 0221     		movs	r1, #2
 1630 0002 024A     		ldr	r2, .L118
2723:Generated_Source\PSoC4/CyLib.c **** 
 1631              		.loc 1 2723 0
 1632              		@ sp needed
2722:Generated_Source\PSoC4/CyLib.c **** }
 1633              		.loc 1 2722 0
 1634 0004 1368     		ldr	r3, [r2]
 1635 0006 0B43     		orrs	r3, r1
 1636 0008 1360     		str	r3, [r2]
2723:Generated_Source\PSoC4/CyLib.c **** 
 1637              		.loc 1 2723 0
 1638 000a 7047     		bx	lr
 1639              	.L119:
 1640              		.align	2
 1641              	.L118:
 1642 000c 10E000E0 		.word	-536813552
 1643              		.cfi_endproc
 1644              	.LFE35:
 1645              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 83


 1646              		.section	.text.CySysTickEnable,"ax",%progbits
 1647              		.align	1
 1648              		.global	CySysTickEnable
 1649              		.code	16
 1650              		.thumb_func
 1651              		.type	CySysTickEnable, %function
 1652              	CySysTickEnable:
 1653              	.LFB33:
2688:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1654              		.loc 1 2688 0
 1655              		.cfi_startproc
 1656              		@ args = 0, pretend = 0, frame = 0
 1657              		@ frame_needed = 0, uses_anonymous_args = 0
 1658 0000 10B5     		push	{r4, lr}
 1659              		.cfi_def_cfa_offset 8
 1660              		.cfi_offset 4, -8
 1661              		.cfi_offset 14, -4
2689:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1662              		.loc 1 2689 0
 1663 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1664              	.LVL117:
2690:Generated_Source\PSoC4/CyLib.c **** }
 1665              		.loc 1 2690 0
 1666 0006 0121     		movs	r1, #1
 1667 0008 024A     		ldr	r2, .L121
2691:Generated_Source\PSoC4/CyLib.c **** 
 1668              		.loc 1 2691 0
 1669              		@ sp needed
2690:Generated_Source\PSoC4/CyLib.c **** }
 1670              		.loc 1 2690 0
 1671 000a 1368     		ldr	r3, [r2]
 1672 000c 0B43     		orrs	r3, r1
 1673 000e 1360     		str	r3, [r2]
2691:Generated_Source\PSoC4/CyLib.c **** 
 1674              		.loc 1 2691 0
 1675 0010 10BD     		pop	{r4, pc}
 1676              	.L122:
 1677 0012 C046     		.align	2
 1678              	.L121:
 1679 0014 10E000E0 		.word	-536813552
 1680              		.cfi_endproc
 1681              	.LFE33:
 1682              		.size	CySysTickEnable, .-CySysTickEnable
 1683              		.section	.text.CySysTickStart,"ax",%progbits
 1684              		.align	1
 1685              		.global	CySysTickStart
 1686              		.code	16
 1687              		.thumb_func
 1688              		.type	CySysTickStart, %function
 1689              	CySysTickStart:
 1690              	.LFB31:
2629:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1691              		.loc 1 2629 0
 1692              		.cfi_startproc
 1693              		@ args = 0, pretend = 0, frame = 0
 1694              		@ frame_needed = 0, uses_anonymous_args = 0
 1695 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 84


 1696              		.cfi_def_cfa_offset 8
 1697              		.cfi_offset 4, -8
 1698              		.cfi_offset 14, -4
2630:Generated_Source\PSoC4/CyLib.c ****     {
 1699              		.loc 1 2630 0
 1700 0002 054C     		ldr	r4, .L125
 1701 0004 6369     		ldr	r3, [r4, #20]
 1702 0006 002B     		cmp	r3, #0
 1703 0008 03D1     		bne	.L124
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1704              		.loc 1 2632 0
 1705 000a FFF7FEFF 		bl	CySysTickInit
 1706              	.LVL118:
2633:Generated_Source\PSoC4/CyLib.c ****     }
 1707              		.loc 1 2633 0
 1708 000e 0123     		movs	r3, #1
 1709 0010 6361     		str	r3, [r4, #20]
 1710              	.L124:
2636:Generated_Source\PSoC4/CyLib.c **** }
 1711              		.loc 1 2636 0
 1712 0012 FFF7FEFF 		bl	CySysTickEnable
 1713              	.LVL119:
2637:Generated_Source\PSoC4/CyLib.c **** 
 1714              		.loc 1 2637 0
 1715              		@ sp needed
 1716 0016 10BD     		pop	{r4, pc}
 1717              	.L126:
 1718              		.align	2
 1719              	.L125:
 1720 0018 00000000 		.word	.LANCHOR2
 1721              		.cfi_endproc
 1722              	.LFE31:
 1723              		.size	CySysTickStart, .-CySysTickStart
 1724              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1725              		.align	1
 1726              		.global	CySysTickDisableInterrupt
 1727              		.code	16
 1728              		.thumb_func
 1729              		.type	CySysTickDisableInterrupt, %function
 1730              	CySysTickDisableInterrupt:
 1731              	.LFB36:
2737:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1732              		.loc 1 2737 0
 1733              		.cfi_startproc
 1734              		@ args = 0, pretend = 0, frame = 0
 1735              		@ frame_needed = 0, uses_anonymous_args = 0
 1736              		@ link register save eliminated.
2738:Generated_Source\PSoC4/CyLib.c **** }
 1737              		.loc 1 2738 0
 1738 0000 0221     		movs	r1, #2
 1739 0002 024A     		ldr	r2, .L128
2739:Generated_Source\PSoC4/CyLib.c **** 
 1740              		.loc 1 2739 0
 1741              		@ sp needed
2738:Generated_Source\PSoC4/CyLib.c **** }
 1742              		.loc 1 2738 0
 1743 0004 1368     		ldr	r3, [r2]
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 85


 1744 0006 8B43     		bics	r3, r1
 1745 0008 1360     		str	r3, [r2]
2739:Generated_Source\PSoC4/CyLib.c **** 
 1746              		.loc 1 2739 0
 1747 000a 7047     		bx	lr
 1748              	.L129:
 1749              		.align	2
 1750              	.L128:
 1751 000c 10E000E0 		.word	-536813552
 1752              		.cfi_endproc
 1753              	.LFE36:
 1754              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1755              		.section	.text.CySysTickSetReload,"ax",%progbits
 1756              		.align	1
 1757              		.global	CySysTickSetReload
 1758              		.code	16
 1759              		.thumb_func
 1760              		.type	CySysTickSetReload, %function
 1761              	CySysTickSetReload:
 1762              	.LFB37:
2754:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1763              		.loc 1 2754 0
 1764              		.cfi_startproc
 1765              		@ args = 0, pretend = 0, frame = 0
 1766              		@ frame_needed = 0, uses_anonymous_args = 0
 1767              		@ link register save eliminated.
 1768              	.LVL120:
2755:Generated_Source\PSoC4/CyLib.c **** }
 1769              		.loc 1 2755 0
 1770 0000 024B     		ldr	r3, .L131
 1771 0002 0002     		lsls	r0, r0, #8
 1772              	.LVL121:
 1773 0004 000A     		lsrs	r0, r0, #8
 1774 0006 1860     		str	r0, [r3]
2756:Generated_Source\PSoC4/CyLib.c **** 
 1775              		.loc 1 2756 0
 1776              		@ sp needed
 1777 0008 7047     		bx	lr
 1778              	.L132:
 1779 000a C046     		.align	2
 1780              	.L131:
 1781 000c 14E000E0 		.word	-536813548
 1782              		.cfi_endproc
 1783              	.LFE37:
 1784              		.size	CySysTickSetReload, .-CySysTickSetReload
 1785              		.section	.text.CySysTickGetReload,"ax",%progbits
 1786              		.align	1
 1787              		.global	CySysTickGetReload
 1788              		.code	16
 1789              		.thumb_func
 1790              		.type	CySysTickGetReload, %function
 1791              	CySysTickGetReload:
 1792              	.LFB38:
2770:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1793              		.loc 1 2770 0
 1794              		.cfi_startproc
 1795              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 86


 1796              		@ frame_needed = 0, uses_anonymous_args = 0
 1797              		@ link register save eliminated.
2771:Generated_Source\PSoC4/CyLib.c **** }
 1798              		.loc 1 2771 0
 1799 0000 024B     		ldr	r3, .L134
2772:Generated_Source\PSoC4/CyLib.c **** 
 1800              		.loc 1 2772 0
 1801              		@ sp needed
2771:Generated_Source\PSoC4/CyLib.c **** }
 1802              		.loc 1 2771 0
 1803 0002 1868     		ldr	r0, [r3]
 1804 0004 0002     		lsls	r0, r0, #8
 1805 0006 000A     		lsrs	r0, r0, #8
2772:Generated_Source\PSoC4/CyLib.c **** 
 1806              		.loc 1 2772 0
 1807 0008 7047     		bx	lr
 1808              	.L135:
 1809 000a C046     		.align	2
 1810              	.L134:
 1811 000c 14E000E0 		.word	-536813548
 1812              		.cfi_endproc
 1813              	.LFE38:
 1814              		.size	CySysTickGetReload, .-CySysTickGetReload
 1815              		.section	.text.CySysTickGetValue,"ax",%progbits
 1816              		.align	1
 1817              		.global	CySysTickGetValue
 1818              		.code	16
 1819              		.thumb_func
 1820              		.type	CySysTickGetValue, %function
 1821              	CySysTickGetValue:
 1822              	.LFB39:
2786:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1823              		.loc 1 2786 0
 1824              		.cfi_startproc
 1825              		@ args = 0, pretend = 0, frame = 0
 1826              		@ frame_needed = 0, uses_anonymous_args = 0
 1827              		@ link register save eliminated.
2787:Generated_Source\PSoC4/CyLib.c **** }
 1828              		.loc 1 2787 0
 1829 0000 024B     		ldr	r3, .L137
2788:Generated_Source\PSoC4/CyLib.c **** 
 1830              		.loc 1 2788 0
 1831              		@ sp needed
2787:Generated_Source\PSoC4/CyLib.c **** }
 1832              		.loc 1 2787 0
 1833 0002 1868     		ldr	r0, [r3]
 1834 0004 0002     		lsls	r0, r0, #8
 1835 0006 000A     		lsrs	r0, r0, #8
2788:Generated_Source\PSoC4/CyLib.c **** 
 1836              		.loc 1 2788 0
 1837 0008 7047     		bx	lr
 1838              	.L138:
 1839 000a C046     		.align	2
 1840              	.L137:
 1841 000c 18E000E0 		.word	-536813544
 1842              		.cfi_endproc
 1843              	.LFE39:
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 87


 1844              		.size	CySysTickGetValue, .-CySysTickGetValue
 1845              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 1846              		.align	1
 1847              		.global	CySysTickSetClockSource
 1848              		.code	16
 1849              		.thumb_func
 1850              		.type	CySysTickSetClockSource, %function
 1851              	CySysTickSetClockSource:
 1852              	.LFB40:
2818:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 1853              		.loc 1 2818 0
 1854              		.cfi_startproc
 1855              		@ args = 0, pretend = 0, frame = 0
 1856              		@ frame_needed = 0, uses_anonymous_args = 0
 1857              		@ link register save eliminated.
 1858              	.LVL122:
 1859 0000 044B     		ldr	r3, .L143
 1860 0002 0421     		movs	r1, #4
 1861              	.LBB45:
 1862              	.LBB46:
2821:Generated_Source\PSoC4/CyLib.c ****         }
 1863              		.loc 1 2821 0
 1864 0004 1A68     		ldr	r2, [r3]
 1865              	.LBE46:
 1866              	.LBE45:
2819:Generated_Source\PSoC4/CyLib.c ****         {
 1867              		.loc 1 2819 0
 1868 0006 0128     		cmp	r0, #1
 1869 0008 01D1     		bne	.L140
 1870              	.LVL123:
 1871              	.LBB48:
 1872              	.LBB47:
2821:Generated_Source\PSoC4/CyLib.c ****         }
 1873              		.loc 1 2821 0
 1874 000a 0A43     		orrs	r2, r1
 1875 000c 00E0     		b	.L142
 1876              	.LVL124:
 1877              	.L140:
 1878              	.LBE47:
 1879              	.LBE48:
2825:Generated_Source\PSoC4/CyLib.c ****         }
 1880              		.loc 1 2825 0
 1881 000e 8A43     		bics	r2, r1
 1882              	.L142:
 1883 0010 1A60     		str	r2, [r3]
2827:Generated_Source\PSoC4/CyLib.c **** 
 1884              		.loc 1 2827 0
 1885              		@ sp needed
 1886 0012 7047     		bx	lr
 1887              	.L144:
 1888              		.align	2
 1889              	.L143:
 1890 0014 10E000E0 		.word	-536813552
 1891              		.cfi_endproc
 1892              	.LFE40:
 1893              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 1894              		.section	.text.CySysTickGetClockSource,"ax",%progbits
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 88


 1895              		.align	1
 1896              		.global	CySysTickGetClockSource
 1897              		.code	16
 1898              		.thumb_func
 1899              		.type	CySysTickGetClockSource, %function
 1900              	CySysTickGetClockSource:
 1901              	.LFB41:
2843:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
 1902              		.loc 1 2843 0
 1903              		.cfi_startproc
 1904              		@ args = 0, pretend = 0, frame = 0
 1905              		@ frame_needed = 0, uses_anonymous_args = 0
 1906              		@ link register save eliminated.
2844:Generated_Source\PSoC4/CyLib.c ****     }
 1907              		.loc 1 2844 0
 1908 0000 024B     		ldr	r3, .L146
2845:Generated_Source\PSoC4/CyLib.c ****     
 1909              		.loc 1 2845 0
 1910              		@ sp needed
2844:Generated_Source\PSoC4/CyLib.c ****     }
 1911              		.loc 1 2844 0
 1912 0002 1868     		ldr	r0, [r3]
 1913 0004 4007     		lsls	r0, r0, #29
 1914 0006 C00F     		lsrs	r0, r0, #31
2845:Generated_Source\PSoC4/CyLib.c ****     
 1915              		.loc 1 2845 0
 1916 0008 7047     		bx	lr
 1917              	.L147:
 1918 000a C046     		.align	2
 1919              	.L146:
 1920 000c 10E000E0 		.word	-536813552
 1921              		.cfi_endproc
 1922              	.LFE41:
 1923              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
 1924              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1925              		.align	1
 1926              		.global	CySysTickGetCountFlag
 1927              		.code	16
 1928              		.thumb_func
 1929              		.type	CySysTickGetCountFlag, %function
 1930              	CySysTickGetCountFlag:
 1931              	.LFB42:
2866:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 1932              		.loc 1 2866 0
 1933              		.cfi_startproc
 1934              		@ args = 0, pretend = 0, frame = 0
 1935              		@ frame_needed = 0, uses_anonymous_args = 0
 1936              		@ link register save eliminated.
2867:Generated_Source\PSoC4/CyLib.c **** }
 1937              		.loc 1 2867 0
 1938 0000 024B     		ldr	r3, .L149
2868:Generated_Source\PSoC4/CyLib.c **** 
 1939              		.loc 1 2868 0
 1940              		@ sp needed
2867:Generated_Source\PSoC4/CyLib.c **** }
 1941              		.loc 1 2867 0
 1942 0002 1868     		ldr	r0, [r3]
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 89


 1943 0004 C003     		lsls	r0, r0, #15
 1944 0006 C00F     		lsrs	r0, r0, #31
2868:Generated_Source\PSoC4/CyLib.c **** 
 1945              		.loc 1 2868 0
 1946 0008 7047     		bx	lr
 1947              	.L150:
 1948 000a C046     		.align	2
 1949              	.L149:
 1950 000c 10E000E0 		.word	-536813552
 1951              		.cfi_endproc
 1952              	.LFE42:
 1953              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 1954              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 1955              		.align	1
 1956              		.code	16
 1957              		.thumb_func
 1958              		.type	CySysTickServiceCallbacks, %function
 1959              	CySysTickServiceCallbacks:
 1960              	.LFB46:
2881:Generated_Source\PSoC4/CyLib.c **** }
2882:Generated_Source\PSoC4/CyLib.c **** 
2883:Generated_Source\PSoC4/CyLib.c **** 
2884:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2885:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2886:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2887:Generated_Source\PSoC4/CyLib.c **** *
2888:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
2889:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2890:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2891:Generated_Source\PSoC4/CyLib.c **** *
2892:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2893:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2894:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2895:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2896:Generated_Source\PSoC4/CyLib.c **** *  functions.
2897:Generated_Source\PSoC4/CyLib.c **** *
2898:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
2899:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2900:Generated_Source\PSoC4/CyLib.c **** *
2901:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
2902:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2903:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2904:Generated_Source\PSoC4/CyLib.c **** *
2905:Generated_Source\PSoC4/CyLib.c **** * \return
2906:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2907:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2908:Generated_Source\PSoC4/CyLib.c **** *
2909:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2910:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2911:Generated_Source\PSoC4/CyLib.c **** *
2912:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2913:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2914:Generated_Source\PSoC4/CyLib.c **** {
2915:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2916:Generated_Source\PSoC4/CyLib.c **** 
2917:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
2918:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 90


2919:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
2920:Generated_Source\PSoC4/CyLib.c **** }
2921:Generated_Source\PSoC4/CyLib.c **** 
2922:Generated_Source\PSoC4/CyLib.c **** 
2923:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2924:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2925:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2926:Generated_Source\PSoC4/CyLib.c **** *
2927:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2928:Generated_Source\PSoC4/CyLib.c **** *
2929:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
2930:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2931:Generated_Source\PSoC4/CyLib.c **** *
2932:Generated_Source\PSoC4/CyLib.c **** * \return
2933:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2934:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2935:Generated_Source\PSoC4/CyLib.c **** *
2936:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2937:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2938:Generated_Source\PSoC4/CyLib.c **** {
2939:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
2940:Generated_Source\PSoC4/CyLib.c **** }
2941:Generated_Source\PSoC4/CyLib.c **** 
2942:Generated_Source\PSoC4/CyLib.c **** 
2943:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2944:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2945:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2946:Generated_Source\PSoC4/CyLib.c **** *
2947:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
2948:Generated_Source\PSoC4/CyLib.c **** *
2949:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2950:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
2951:Generated_Source\PSoC4/CyLib.c **** {
 1961              		.loc 1 2951 0
 1962              		.cfi_startproc
 1963              		@ args = 0, pretend = 0, frame = 0
 1964              		@ frame_needed = 0, uses_anonymous_args = 0
 1965 0000 10B5     		push	{r4, lr}
 1966              		.cfi_def_cfa_offset 8
 1967              		.cfi_offset 4, -8
 1968              		.cfi_offset 14, -4
2952:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2953:Generated_Source\PSoC4/CyLib.c **** 
2954:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
2955:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 1969              		.loc 1 2955 0
 1970 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 1971              	.LVL125:
 1972 0006 0128     		cmp	r0, #1
 1973 0008 08D1     		bne	.L151
 1974 000a 0024     		movs	r4, #0
 1975              	.L154:
 1976              	.LBB51:
2956:Generated_Source\PSoC4/CyLib.c ****     {
2957:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2958:Generated_Source\PSoC4/CyLib.c ****         {
2959:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 91


 1977              		.loc 1 2959 0
 1978 000c 044B     		ldr	r3, .L160
 1979 000e E358     		ldr	r3, [r4, r3]
 1980 0010 002B     		cmp	r3, #0
 1981 0012 00D0     		beq	.L153
2960:Generated_Source\PSoC4/CyLib.c ****             {
2961:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 1982              		.loc 1 2961 0
 1983 0014 9847     		blx	r3
 1984              	.LVL126:
 1985              	.L153:
 1986 0016 0434     		adds	r4, r4, #4
2957:Generated_Source\PSoC4/CyLib.c ****         {
 1987              		.loc 1 2957 0
 1988 0018 142C     		cmp	r4, #20
 1989 001a F7D1     		bne	.L154
 1990              	.L151:
 1991              	.LBE51:
2962:Generated_Source\PSoC4/CyLib.c ****             }
2963:Generated_Source\PSoC4/CyLib.c ****         }
2964:Generated_Source\PSoC4/CyLib.c ****     }
2965:Generated_Source\PSoC4/CyLib.c **** }
 1992              		.loc 1 2965 0
 1993              		@ sp needed
 1994 001c 10BD     		pop	{r4, pc}
 1995              	.L161:
 1996 001e C046     		.align	2
 1997              	.L160:
 1998 0020 00000000 		.word	.LANCHOR2
 1999              		.cfi_endproc
 2000              	.LFE46:
 2001              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 2002              		.section	.text.CySysTickClear,"ax",%progbits
 2003              		.align	1
 2004              		.global	CySysTickClear
 2005              		.code	16
 2006              		.thumb_func
 2007              		.type	CySysTickClear, %function
 2008              	CySysTickClear:
 2009              	.LFB43:
2879:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 2010              		.loc 1 2879 0
 2011              		.cfi_startproc
 2012              		@ args = 0, pretend = 0, frame = 0
 2013              		@ frame_needed = 0, uses_anonymous_args = 0
 2014              		@ link register save eliminated.
2880:Generated_Source\PSoC4/CyLib.c **** }
 2015              		.loc 1 2880 0
 2016 0000 0022     		movs	r2, #0
 2017 0002 014B     		ldr	r3, .L163
2881:Generated_Source\PSoC4/CyLib.c **** 
 2018              		.loc 1 2881 0
 2019              		@ sp needed
2880:Generated_Source\PSoC4/CyLib.c **** }
 2020              		.loc 1 2880 0
 2021 0004 1A60     		str	r2, [r3]
2881:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 92


 2022              		.loc 1 2881 0
 2023 0006 7047     		bx	lr
 2024              	.L164:
 2025              		.align	2
 2026              	.L163:
 2027 0008 18E000E0 		.word	-536813544
 2028              		.cfi_endproc
 2029              	.LFE43:
 2030              		.size	CySysTickClear, .-CySysTickClear
 2031              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2032              		.align	1
 2033              		.global	CySysTickSetCallback
 2034              		.code	16
 2035              		.thumb_func
 2036              		.type	CySysTickSetCallback, %function
 2037              	CySysTickSetCallback:
 2038              	.LFB44:
2914:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 2039              		.loc 1 2914 0
 2040              		.cfi_startproc
 2041              		@ args = 0, pretend = 0, frame = 0
 2042              		@ frame_needed = 0, uses_anonymous_args = 0
 2043              		@ link register save eliminated.
 2044              	.LVL127:
2917:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2045              		.loc 1 2917 0
 2046 0000 024A     		ldr	r2, .L166
 2047 0002 8300     		lsls	r3, r0, #2
 2048 0004 9858     		ldr	r0, [r3, r2]
 2049              	.LVL128:
2920:Generated_Source\PSoC4/CyLib.c **** 
 2050              		.loc 1 2920 0
 2051              		@ sp needed
2918:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2052              		.loc 1 2918 0
 2053 0006 9950     		str	r1, [r3, r2]
2920:Generated_Source\PSoC4/CyLib.c **** 
 2054              		.loc 1 2920 0
 2055 0008 7047     		bx	lr
 2056              	.L167:
 2057 000a C046     		.align	2
 2058              	.L166:
 2059 000c 00000000 		.word	.LANCHOR2
 2060              		.cfi_endproc
 2061              	.LFE44:
 2062              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2063              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2064              		.align	1
 2065              		.global	CySysTickGetCallback
 2066              		.code	16
 2067              		.thumb_func
 2068              		.type	CySysTickGetCallback, %function
 2069              	CySysTickGetCallback:
 2070              	.LFB45:
2938:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2071              		.loc 1 2938 0
 2072              		.cfi_startproc
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 93


 2073              		@ args = 0, pretend = 0, frame = 0
 2074              		@ frame_needed = 0, uses_anonymous_args = 0
 2075              		@ link register save eliminated.
 2076              	.LVL129:
2939:Generated_Source\PSoC4/CyLib.c **** }
 2077              		.loc 1 2939 0
 2078 0000 014B     		ldr	r3, .L169
 2079 0002 8000     		lsls	r0, r0, #2
 2080              	.LVL130:
 2081 0004 C058     		ldr	r0, [r0, r3]
2940:Generated_Source\PSoC4/CyLib.c **** 
 2082              		.loc 1 2940 0
 2083              		@ sp needed
 2084 0006 7047     		bx	lr
 2085              	.L170:
 2086              		.align	2
 2087              	.L169:
 2088 0008 00000000 		.word	.LANCHOR2
 2089              		.cfi_endproc
 2090              	.LFE45:
 2091              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2092              		.section	.text.CyGetUniqueId,"ax",%progbits
 2093              		.align	1
 2094              		.global	CyGetUniqueId
 2095              		.code	16
 2096              		.thumb_func
 2097              		.type	CyGetUniqueId, %function
 2098              	CyGetUniqueId:
 2099              	.LFB47:
2966:Generated_Source\PSoC4/CyLib.c **** 
2967:Generated_Source\PSoC4/CyLib.c **** 
2968:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2969:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
2970:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2971:Generated_Source\PSoC4/CyLib.c **** *
2972:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
2973:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
2974:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
2975:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
2976:Generated_Source\PSoC4/CyLib.c **** *
2977:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
2978:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
2979:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
2980:Generated_Source\PSoC4/CyLib.c **** *
2981:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2982:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
2983:Generated_Source\PSoC4/CyLib.c **** {
 2100              		.loc 1 2983 0
 2101              		.cfi_startproc
 2102              		@ args = 0, pretend = 0, frame = 0
 2103              		@ frame_needed = 0, uses_anonymous_args = 0
 2104              		@ link register save eliminated.
 2105              	.LVL131:
2984:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
2985:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2106              		.loc 1 2985 0
 2107 0000 144B     		ldr	r3, .L172
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 94


2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
2988:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
2989:Generated_Source\PSoC4/CyLib.c **** 
2990:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
2993:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
2994:Generated_Source\PSoC4/CyLib.c **** #else
2995:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
2996:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
2997:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
2998:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
2999:Generated_Source\PSoC4/CyLib.c **** 
3000:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3001:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3002:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3003:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3004:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3005:Generated_Source\PSoC4/CyLib.c **** }
 2108              		.loc 1 3005 0
 2109              		@ sp needed
2985:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2110              		.loc 1 2985 0
 2111 0002 1A78     		ldrb	r2, [r3]
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2112              		.loc 1 2986 0
 2113 0004 144B     		ldr	r3, .L172+4
2985:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2114              		.loc 1 2985 0
 2115 0006 D1B2     		uxtb	r1, r2
 2116 0008 0160     		str	r1, [r0]
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2117              		.loc 1 2986 0
 2118 000a 1B78     		ldrb	r3, [r3]
 2119 000c 1B02     		lsls	r3, r3, #8
 2120 000e 0B43     		orrs	r3, r1
 2121 0010 1A00     		movs	r2, r3
 2122 0012 0360     		str	r3, [r0]
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2123              		.loc 1 2987 0
 2124 0014 114B     		ldr	r3, .L172+8
 2125 0016 1B78     		ldrb	r3, [r3]
 2126 0018 1B04     		lsls	r3, r3, #16
 2127 001a 1343     		orrs	r3, r2
2988:Generated_Source\PSoC4/CyLib.c **** 
 2128              		.loc 1 2988 0
 2129 001c 104A     		ldr	r2, .L172+12
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2130              		.loc 1 2987 0
 2131 001e 0360     		str	r3, [r0]
2988:Generated_Source\PSoC4/CyLib.c **** 
 2132              		.loc 1 2988 0
 2133 0020 1278     		ldrb	r2, [r2]
 2134 0022 1206     		lsls	r2, r2, #24
 2135 0024 1343     		orrs	r3, r2
 2136 0026 0360     		str	r3, [r0]
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 95


2990:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2137              		.loc 1 2990 0
 2138 0028 0E4B     		ldr	r3, .L172+16
 2139 002a 1A78     		ldrb	r2, [r3]
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2140              		.loc 1 2991 0
 2141 002c 0E4B     		ldr	r3, .L172+20
2990:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2142              		.loc 1 2990 0
 2143 002e D1B2     		uxtb	r1, r2
 2144 0030 4160     		str	r1, [r0, #4]
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2145              		.loc 1 2991 0
 2146 0032 1B78     		ldrb	r3, [r3]
 2147 0034 1B02     		lsls	r3, r3, #8
 2148 0036 0B43     		orrs	r3, r1
 2149 0038 1A00     		movs	r2, r3
 2150 003a 4360     		str	r3, [r0, #4]
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2151              		.loc 1 2992 0
 2152 003c 0B4B     		ldr	r3, .L172+24
 2153 003e 1B78     		ldrb	r3, [r3]
 2154 0040 1B04     		lsls	r3, r3, #16
 2155 0042 1343     		orrs	r3, r2
2993:Generated_Source\PSoC4/CyLib.c **** #else
 2156              		.loc 1 2993 0
 2157 0044 0A4A     		ldr	r2, .L172+28
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2158              		.loc 1 2992 0
 2159 0046 4360     		str	r3, [r0, #4]
2993:Generated_Source\PSoC4/CyLib.c **** #else
 2160              		.loc 1 2993 0
 2161 0048 1278     		ldrb	r2, [r2]
 2162 004a 1206     		lsls	r2, r2, #24
 2163 004c 1343     		orrs	r3, r2
 2164 004e 4360     		str	r3, [r0, #4]
 2165              		.loc 1 3005 0
 2166 0050 7047     		bx	lr
 2167              	.L173:
 2168 0052 C046     		.align	2
 2169              	.L172:
 2170 0054 78F1FF0F 		.word	268431736
 2171 0058 79F1FF0F 		.word	268431737
 2172 005c 7AF1FF0F 		.word	268431738
 2173 0060 7BF1FF0F 		.word	268431739
 2174 0064 7CF1FF0F 		.word	268431740
 2175 0068 7DF1FF0F 		.word	268431741
 2176 006c 7EF1FF0F 		.word	268431742
 2177 0070 7FF1FF0F 		.word	268431743
 2178              		.cfi_endproc
 2179              	.LFE47:
 2180              		.size	CyGetUniqueId, .-CyGetUniqueId
 2181              		.global	CySysClkPumpConfig
 2182              		.global	cyImoFreqMhz2DpllOffset
 2183              		.global	CySysTickInitVar
 2184              		.global	cydelay32kMs
 2185              		.global	cydelayFreqMhz
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 96


 2186              		.global	cydelayFreqKhz
 2187              		.global	cydelayFreqHz
 2188              		.section	.rodata
 2189              		.set	.LANCHOR1,. + 0
 2190              		.type	cyImoFreqMhz2DpllOffset, %object
 2191              		.size	cyImoFreqMhz2DpllOffset, 23
 2192              	cyImoFreqMhz2DpllOffset:
 2193 0000 EE       		.byte	-18
 2194 0001 DB       		.byte	-37
 2195 0002 C9       		.byte	-55
 2196 0003 B9       		.byte	-71
 2197 0004 AA       		.byte	-86
 2198 0005 9B       		.byte	-101
 2199 0006 8E       		.byte	-114
 2200 0007 82       		.byte	-126
 2201 0008 76       		.byte	118
 2202 0009 6B       		.byte	107
 2203 000a 60       		.byte	96
 2204 000b 56       		.byte	86
 2205 000c 4D       		.byte	77
 2206 000d 44       		.byte	68
 2207 000e 3B       		.byte	59
 2208 000f 33       		.byte	51
 2209 0010 2C       		.byte	44
 2210 0011 24       		.byte	36
 2211 0012 1D       		.byte	29
 2212 0013 17       		.byte	23
 2213 0014 10       		.byte	16
 2214 0015 0A       		.byte	10
 2215 0016 04       		.byte	4
 2216              		.data
 2217              		.align	2
 2218              		.set	.LANCHOR0,. + 0
 2219              		.type	CySysClkPumpConfig, %object
 2220              		.size	CySysClkPumpConfig, 4
 2221              	CySysClkPumpConfig:
 2222 0000 01000000 		.word	1
 2223              		.type	cydelay32kMs, %object
 2224              		.size	cydelay32kMs, 4
 2225              	cydelay32kMs:
 2226 0004 0000E02E 		.word	786432000
 2227              		.type	cydelayFreqKhz, %object
 2228              		.size	cydelayFreqKhz, 4
 2229              	cydelayFreqKhz:
 2230 0008 C05D0000 		.word	24000
 2231              		.type	cydelayFreqMhz, %object
 2232              		.size	cydelayFreqMhz, 1
 2233              	cydelayFreqMhz:
 2234 000c 18       		.byte	24
 2235 000d 000000   		.space	3
 2236              		.type	cydelayFreqHz, %object
 2237              		.size	cydelayFreqHz, 4
 2238              	cydelayFreqHz:
 2239 0010 00366E01 		.word	24000000
 2240              		.bss
 2241              		.align	2
 2242              		.set	.LANCHOR2,. + 0
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 97


 2243              		.type	CySysTickCallbacks, %object
 2244              		.size	CySysTickCallbacks, 20
 2245              	CySysTickCallbacks:
 2246 0000 00000000 		.space	20
 2246      00000000 
 2246      00000000 
 2246      00000000 
 2246      00000000 
 2247              		.type	CySysTickInitVar, %object
 2248              		.size	CySysTickInitVar, 4
 2249              	CySysTickInitVar:
 2250 0014 00000000 		.space	4
 2251              		.text
 2252              	.Letext0:
 2253              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2254              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2255              		.file 4 "Generated_Source\\PSoC4\\CyFlash.h"
 2256              		.file 5 "Generated_Source\\PSoC4\\CyLFClk.h"
 2257              		.section	.debug_info,"",%progbits
 2258              	.Ldebug_info0:
 2259 0000 5E0C0000 		.4byte	0xc5e
 2260 0004 0400     		.2byte	0x4
 2261 0006 00000000 		.4byte	.Ldebug_abbrev0
 2262 000a 04       		.byte	0x4
 2263 000b 01       		.uleb128 0x1
 2264 000c B2010000 		.4byte	.LASF107
 2265 0010 0C       		.byte	0xc
 2266 0011 E2060000 		.4byte	.LASF108
 2267 0015 28010000 		.4byte	.LASF109
 2268 0019 58000000 		.4byte	.Ldebug_ranges0+0x58
 2269 001d 00000000 		.4byte	0
 2270 0021 00000000 		.4byte	.Ldebug_line0
 2271 0025 02       		.uleb128 0x2
 2272 0026 01       		.byte	0x1
 2273 0027 06       		.byte	0x6
 2274 0028 F4000000 		.4byte	.LASF0
 2275 002c 02       		.uleb128 0x2
 2276 002d 01       		.byte	0x1
 2277 002e 08       		.byte	0x8
 2278 002f 3D050000 		.4byte	.LASF1
 2279 0033 02       		.uleb128 0x2
 2280 0034 02       		.byte	0x2
 2281 0035 05       		.byte	0x5
 2282 0036 52050000 		.4byte	.LASF2
 2283 003a 02       		.uleb128 0x2
 2284 003b 02       		.byte	0x2
 2285 003c 07       		.byte	0x7
 2286 003d AF030000 		.4byte	.LASF3
 2287 0041 02       		.uleb128 0x2
 2288 0042 04       		.byte	0x4
 2289 0043 05       		.byte	0x5
 2290 0044 9C010000 		.4byte	.LASF4
 2291 0048 02       		.uleb128 0x2
 2292 0049 04       		.byte	0x4
 2293 004a 07       		.byte	0x7
 2294 004b 52030000 		.4byte	.LASF5
 2295 004f 02       		.uleb128 0x2
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 98


 2296 0050 08       		.byte	0x8
 2297 0051 05       		.byte	0x5
 2298 0052 E6000000 		.4byte	.LASF6
 2299 0056 02       		.uleb128 0x2
 2300 0057 08       		.byte	0x8
 2301 0058 07       		.byte	0x7
 2302 0059 67000000 		.4byte	.LASF7
 2303 005d 03       		.uleb128 0x3
 2304 005e 04       		.byte	0x4
 2305 005f 05       		.byte	0x5
 2306 0060 696E7400 		.ascii	"int\000"
 2307 0064 02       		.uleb128 0x2
 2308 0065 04       		.byte	0x4
 2309 0066 07       		.byte	0x7
 2310 0067 36030000 		.4byte	.LASF8
 2311 006b 04       		.uleb128 0x4
 2312 006c 6E020000 		.4byte	.LASF9
 2313 0070 02       		.byte	0x2
 2314 0071 D201     		.2byte	0x1d2
 2315 0073 2C000000 		.4byte	0x2c
 2316 0077 04       		.uleb128 0x4
 2317 0078 0F000000 		.4byte	.LASF10
 2318 007c 02       		.byte	0x2
 2319 007d D301     		.2byte	0x1d3
 2320 007f 3A000000 		.4byte	0x3a
 2321 0083 04       		.uleb128 0x4
 2322 0084 97020000 		.4byte	.LASF11
 2323 0088 02       		.byte	0x2
 2324 0089 D401     		.2byte	0x1d4
 2325 008b 48000000 		.4byte	0x48
 2326 008f 02       		.uleb128 0x2
 2327 0090 04       		.byte	0x4
 2328 0091 04       		.byte	0x4
 2329 0092 D9040000 		.4byte	.LASF12
 2330 0096 02       		.uleb128 0x2
 2331 0097 08       		.byte	0x8
 2332 0098 04       		.byte	0x4
 2333 0099 8A020000 		.4byte	.LASF13
 2334 009d 02       		.uleb128 0x2
 2335 009e 01       		.byte	0x1
 2336 009f 08       		.byte	0x8
 2337 00a0 A8050000 		.4byte	.LASF14
 2338 00a4 04       		.uleb128 0x4
 2339 00a5 31050000 		.4byte	.LASF15
 2340 00a9 02       		.byte	0x2
 2341 00aa 7C02     		.2byte	0x27c
 2342 00ac B0000000 		.4byte	0xb0
 2343 00b0 05       		.uleb128 0x5
 2344 00b1 6B000000 		.4byte	0x6b
 2345 00b5 04       		.uleb128 0x4
 2346 00b6 41040000 		.4byte	.LASF16
 2347 00ba 02       		.byte	0x2
 2348 00bb 7E02     		.2byte	0x27e
 2349 00bd C1000000 		.4byte	0xc1
 2350 00c1 05       		.uleb128 0x5
 2351 00c2 83000000 		.4byte	0x83
 2352 00c6 04       		.uleb128 0x4
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 99


 2353 00c7 C5050000 		.4byte	.LASF17
 2354 00cb 02       		.byte	0x2
 2355 00cc 8E02     		.2byte	0x28e
 2356 00ce D2000000 		.4byte	0xd2
 2357 00d2 06       		.uleb128 0x6
 2358 00d3 04       		.byte	0x4
 2359 00d4 D8000000 		.4byte	0xd8
 2360 00d8 07       		.uleb128 0x7
 2361 00d9 02       		.uleb128 0x2
 2362 00da 08       		.byte	0x8
 2363 00db 04       		.byte	0x4
 2364 00dc 7E040000 		.4byte	.LASF18
 2365 00e0 02       		.uleb128 0x2
 2366 00e1 04       		.byte	0x4
 2367 00e2 07       		.byte	0x7
 2368 00e3 63040000 		.4byte	.LASF19
 2369 00e7 08       		.uleb128 0x8
 2370 00e8 F5040000 		.4byte	.LASF20
 2371 00ec 03       		.byte	0x3
 2372 00ed F5       		.byte	0xf5
 2373 00ee D2000000 		.4byte	0xd2
 2374 00f2 09       		.uleb128 0x9
 2375 00f3 BB020000 		.4byte	.LASF26
 2376 00f7 01       		.byte	0x1
 2377 00f8 AF       		.byte	0xaf
 2378 00f9 01       		.byte	0x1
 2379 00fa 36010000 		.4byte	0x136
 2380 00fe 0A       		.uleb128 0xa
 2381 00ff 00010000 		.4byte	.LASF21
 2382 0103 01       		.byte	0x1
 2383 0104 B5       		.byte	0xb5
 2384 0105 83000000 		.4byte	0x83
 2385 0109 0A       		.uleb128 0xa
 2386 010a 11010000 		.4byte	.LASF22
 2387 010e 01       		.byte	0x1
 2388 010f B6       		.byte	0xb6
 2389 0110 6B000000 		.4byte	0x6b
 2390 0114 0A       		.uleb128 0xa
 2391 0115 C2030000 		.4byte	.LASF23
 2392 0119 01       		.byte	0x1
 2393 011a B7       		.byte	0xb7
 2394 011b 83000000 		.4byte	0x83
 2395 011f 0A       		.uleb128 0xa
 2396 0120 20010000 		.4byte	.LASF24
 2397 0124 01       		.byte	0x1
 2398 0125 B8       		.byte	0xb8
 2399 0126 83000000 		.4byte	0x83
 2400 012a 0A       		.uleb128 0xa
 2401 012b 4E060000 		.4byte	.LASF25
 2402 012f 01       		.byte	0x1
 2403 0130 B9       		.byte	0xb9
 2404 0131 C1000000 		.4byte	0xc1
 2405 0135 00       		.byte	0
 2406 0136 0B       		.uleb128 0xb
 2407 0137 C9030000 		.4byte	.LASF27
 2408 013b 01       		.byte	0x1
 2409 013c 010B     		.2byte	0xb01
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 100


 2410 013e 01       		.byte	0x1
 2411 013f 50010000 		.4byte	0x150
 2412 0143 0C       		.uleb128 0xc
 2413 0144 06030000 		.4byte	.LASF29
 2414 0148 01       		.byte	0x1
 2415 0149 010B     		.2byte	0xb01
 2416 014b 83000000 		.4byte	0x83
 2417 014f 00       		.byte	0
 2418 0150 0D       		.uleb128 0xd
 2419 0151 8E050000 		.4byte	.LASF110
 2420 0155 01       		.byte	0x1
 2421 0156 860B     		.2byte	0xb86
 2422 0158 01       		.byte	0x1
 2423 0159 68010000 		.4byte	0x168
 2424 015d 0E       		.uleb128 0xe
 2425 015e 6900     		.ascii	"i\000"
 2426 0160 01       		.byte	0x1
 2427 0161 880B     		.2byte	0xb88
 2428 0163 83000000 		.4byte	0x83
 2429 0167 00       		.byte	0
 2430 0168 0F       		.uleb128 0xf
 2431 0169 43030000 		.4byte	.LASF111
 2432 016d 01       		.byte	0x1
 2433 016e 3E0B     		.2byte	0xb3e
 2434 0170 01       		.byte	0x1
 2435 0171 0B       		.uleb128 0xb
 2436 0172 15070000 		.4byte	.LASF28
 2437 0176 01       		.byte	0x1
 2438 0177 C10A     		.2byte	0xac1
 2439 0179 01       		.byte	0x1
 2440 017a 8B010000 		.4byte	0x18b
 2441 017e 0C       		.uleb128 0xc
 2442 017f 00030000 		.4byte	.LASF30
 2443 0183 01       		.byte	0x1
 2444 0184 C10A     		.2byte	0xac1
 2445 0186 83000000 		.4byte	0x83
 2446 018a 00       		.byte	0
 2447 018b 10       		.uleb128 0x10
 2448 018c 15040000 		.4byte	.LASF112
 2449 0190 01       		.byte	0x1
 2450 0191 E708     		.2byte	0x8e7
 2451 0193 C6000000 		.4byte	0xc6
 2452 0197 01       		.byte	0x1
 2453 0198 CD010000 		.4byte	0x1cd
 2454 019c 0C       		.uleb128 0xc
 2455 019d F0030000 		.4byte	.LASF31
 2456 01a1 01       		.byte	0x1
 2457 01a2 E708     		.2byte	0x8e7
 2458 01a4 6B000000 		.4byte	0x6b
 2459 01a8 0C       		.uleb128 0xc
 2460 01a9 8A040000 		.4byte	.LASF32
 2461 01ad 01       		.byte	0x1
 2462 01ae E708     		.2byte	0x8e7
 2463 01b0 C6000000 		.4byte	0xc6
 2464 01b4 11       		.uleb128 0x11
 2465 01b5 4B000000 		.4byte	.LASF33
 2466 01b9 01       		.byte	0x1
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 101


 2467 01ba E908     		.2byte	0x8e9
 2468 01bc C6000000 		.4byte	0xc6
 2469 01c0 11       		.uleb128 0x11
 2470 01c1 00000000 		.4byte	.LASF34
 2471 01c5 01       		.byte	0x1
 2472 01c6 EA08     		.2byte	0x8ea
 2473 01c8 CD010000 		.4byte	0x1cd
 2474 01cc 00       		.byte	0
 2475 01cd 06       		.uleb128 0x6
 2476 01ce 04       		.byte	0x4
 2477 01cf C6000000 		.4byte	0xc6
 2478 01d3 12       		.uleb128 0x12
 2479 01d4 B9060000 		.4byte	.LASF35
 2480 01d8 01       		.byte	0x1
 2481 01d9 6B       		.byte	0x6b
 2482 01da 00000000 		.4byte	.LFB1
 2483 01de 14000000 		.4byte	.LFE1-.LFB1
 2484 01e2 01       		.uleb128 0x1
 2485 01e3 9C       		.byte	0x9c
 2486 01e4 13       		.uleb128 0x13
 2487 01e5 27040000 		.4byte	.LASF36
 2488 01e9 01       		.byte	0x1
 2489 01ea 1D01     		.2byte	0x11d
 2490 01ec 00000000 		.4byte	.LFB4
 2491 01f0 14000000 		.4byte	.LFE4-.LFB4
 2492 01f4 01       		.uleb128 0x1
 2493 01f5 9C       		.byte	0x9c
 2494 01f6 14       		.uleb128 0x14
 2495 01f7 64030000 		.4byte	.LASF37
 2496 01fb 01       		.byte	0x1
 2497 01fc 8B       		.byte	0x8b
 2498 01fd 00000000 		.4byte	.LFB2
 2499 0201 18000000 		.4byte	.LFE2-.LFB2
 2500 0205 01       		.uleb128 0x1
 2501 0206 9C       		.byte	0x9c
 2502 0207 15020000 		.4byte	0x215
 2503 020b 15       		.uleb128 0x15
 2504 020c 06000000 		.4byte	.LVL0
 2505 0210 E4010000 		.4byte	0x1e4
 2506 0214 00       		.byte	0
 2507 0215 16       		.uleb128 0x16
 2508 0216 7E010000 		.4byte	.LASF83
 2509 021a 01       		.byte	0x1
 2510 021b 3001     		.2byte	0x130
 2511 021d 83000000 		.4byte	0x83
 2512 0221 00000000 		.4byte	.LFB5
 2513 0225 10000000 		.4byte	.LFE5-.LFB5
 2514 0229 01       		.uleb128 0x1
 2515 022a 9C       		.byte	0x9c
 2516 022b 17       		.uleb128 0x17
 2517 022c 1F000000 		.4byte	.LASF38
 2518 0230 01       		.byte	0x1
 2519 0231 AD01     		.2byte	0x1ad
 2520 0233 00000000 		.4byte	.LFB6
 2521 0237 20000000 		.4byte	.LFE6-.LFB6
 2522 023b 01       		.uleb128 0x1
 2523 023c 9C       		.byte	0x9c
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 102


 2524 023d 84020000 		.4byte	0x284
 2525 0241 18       		.uleb128 0x18
 2526 0242 7A050000 		.4byte	.LASF41
 2527 0246 01       		.byte	0x1
 2528 0247 AD01     		.2byte	0x1ad
 2529 0249 83000000 		.4byte	0x83
 2530 024d 00000000 		.4byte	.LLST0
 2531 0251 19       		.uleb128 0x19
 2532 0252 11010000 		.4byte	.LASF22
 2533 0256 01       		.byte	0x1
 2534 0257 AF01     		.2byte	0x1af
 2535 0259 6B000000 		.4byte	0x6b
 2536 025d 2C000000 		.4byte	.LLST1
 2537 0261 19       		.uleb128 0x19
 2538 0262 0E070000 		.4byte	.LASF39
 2539 0266 01       		.byte	0x1
 2540 0267 B001     		.2byte	0x1b0
 2541 0269 83000000 		.4byte	0x83
 2542 026d 3F000000 		.4byte	.LLST2
 2543 0271 15       		.uleb128 0x15
 2544 0272 08000000 		.4byte	.LVL2
 2545 0276 2A0C0000 		.4byte	0xc2a
 2546 027a 15       		.uleb128 0x15
 2547 027b 1A000000 		.4byte	.LVL5
 2548 027f 350C0000 		.4byte	0xc35
 2549 0283 00       		.byte	0
 2550 0284 17       		.uleb128 0x17
 2551 0285 59020000 		.4byte	.LASF40
 2552 0289 01       		.byte	0x1
 2553 028a D901     		.2byte	0x1d9
 2554 028c 00000000 		.4byte	.LFB7
 2555 0290 30000000 		.4byte	.LFE7-.LFB7
 2556 0294 01       		.uleb128 0x1
 2557 0295 9C       		.byte	0x9c
 2558 0296 A9020000 		.4byte	0x2a9
 2559 029a 1A       		.uleb128 0x1a
 2560 029b 83020000 		.4byte	.LASF42
 2561 029f 01       		.byte	0x1
 2562 02a0 D901     		.2byte	0x1d9
 2563 02a2 83000000 		.4byte	0x83
 2564 02a6 01       		.uleb128 0x1
 2565 02a7 50       		.byte	0x50
 2566 02a8 00       		.byte	0
 2567 02a9 1B       		.uleb128 0x1b
 2568 02aa A3020000 		.4byte	.LASF47
 2569 02ae 01       		.byte	0x1
 2570 02af FE01     		.2byte	0x1fe
 2571 02b1 83000000 		.4byte	0x83
 2572 02b5 00000000 		.4byte	.LFB8
 2573 02b9 18000000 		.4byte	.LFE8-.LFB8
 2574 02bd 01       		.uleb128 0x1
 2575 02be 9C       		.byte	0x9c
 2576 02bf F6020000 		.4byte	0x2f6
 2577 02c3 19       		.uleb128 0x19
 2578 02c4 11010000 		.4byte	.LASF22
 2579 02c8 01       		.byte	0x1
 2580 02c9 0002     		.2byte	0x200
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 103


 2581 02cb 6B000000 		.4byte	0x6b
 2582 02cf 5D000000 		.4byte	.LLST3
 2583 02d3 19       		.uleb128 0x19
 2584 02d4 92040000 		.4byte	.LASF43
 2585 02d8 01       		.byte	0x1
 2586 02d9 0102     		.2byte	0x201
 2587 02db 83000000 		.4byte	0x83
 2588 02df 70000000 		.4byte	.LLST4
 2589 02e3 15       		.uleb128 0x15
 2590 02e4 06000000 		.4byte	.LVL8
 2591 02e8 2A0C0000 		.4byte	0xc2a
 2592 02ec 15       		.uleb128 0x15
 2593 02ed 0E000000 		.4byte	.LVL10
 2594 02f1 350C0000 		.4byte	0xc35
 2595 02f5 00       		.byte	0
 2596 02f6 17       		.uleb128 0x17
 2597 02f7 F8050000 		.4byte	.LASF44
 2598 02fb 01       		.byte	0x1
 2599 02fc 3502     		.2byte	0x235
 2600 02fe 00000000 		.4byte	.LFB9
 2601 0302 24000000 		.4byte	.LFE9-.LFB9
 2602 0306 01       		.uleb128 0x1
 2603 0307 9C       		.byte	0x9c
 2604 0308 3F030000 		.4byte	0x33f
 2605 030c 18       		.uleb128 0x18
 2606 030d B1060000 		.4byte	.LASF45
 2607 0311 01       		.byte	0x1
 2608 0312 3502     		.2byte	0x235
 2609 0314 83000000 		.4byte	0x83
 2610 0318 92000000 		.4byte	.LLST5
 2611 031c 19       		.uleb128 0x19
 2612 031d 11010000 		.4byte	.LASF22
 2613 0321 01       		.byte	0x1
 2614 0322 3702     		.2byte	0x237
 2615 0324 6B000000 		.4byte	0x6b
 2616 0328 BE000000 		.4byte	.LLST6
 2617 032c 15       		.uleb128 0x15
 2618 032d 08000000 		.4byte	.LVL13
 2619 0331 2A0C0000 		.4byte	0xc2a
 2620 0335 15       		.uleb128 0x15
 2621 0336 1E000000 		.4byte	.LVL14
 2622 033a 350C0000 		.4byte	0xc35
 2623 033e 00       		.byte	0
 2624 033f 17       		.uleb128 0x17
 2625 0340 E2050000 		.4byte	.LASF46
 2626 0344 01       		.byte	0x1
 2627 0345 D503     		.2byte	0x3d5
 2628 0347 00000000 		.4byte	.LFB11
 2629 034b 24000000 		.4byte	.LFE11-.LFB11
 2630 034f 01       		.uleb128 0x1
 2631 0350 9C       		.byte	0x9c
 2632 0351 88030000 		.4byte	0x388
 2633 0355 18       		.uleb128 0x18
 2634 0356 B1060000 		.4byte	.LASF45
 2635 035a 01       		.byte	0x1
 2636 035b D503     		.2byte	0x3d5
 2637 035d 83000000 		.4byte	0x83
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 104


 2638 0361 D1000000 		.4byte	.LLST7
 2639 0365 19       		.uleb128 0x19
 2640 0366 11010000 		.4byte	.LASF22
 2641 036a 01       		.byte	0x1
 2642 036b D703     		.2byte	0x3d7
 2643 036d 6B000000 		.4byte	0x6b
 2644 0371 FD000000 		.4byte	.LLST8
 2645 0375 15       		.uleb128 0x15
 2646 0376 08000000 		.4byte	.LVL17
 2647 037a 2A0C0000 		.4byte	0xc2a
 2648 037e 15       		.uleb128 0x15
 2649 037f 1C000000 		.4byte	.LVL19
 2650 0383 350C0000 		.4byte	0xc35
 2651 0387 00       		.byte	0
 2652 0388 1B       		.uleb128 0x1b
 2653 0389 9B030000 		.4byte	.LASF48
 2654 038d 01       		.byte	0x1
 2655 038e A008     		.2byte	0x8a0
 2656 0390 83000000 		.4byte	0x83
 2657 0394 00000000 		.4byte	.LFB12
 2658 0398 14000000 		.4byte	.LFE12-.LFB12
 2659 039c 01       		.uleb128 0x1
 2660 039d 9C       		.byte	0x9c
 2661 039e C3030000 		.4byte	0x3c3
 2662 03a2 18       		.uleb128 0x18
 2663 03a3 4B050000 		.4byte	.LASF49
 2664 03a7 01       		.byte	0x1
 2665 03a8 A008     		.2byte	0x8a0
 2666 03aa 83000000 		.4byte	0x83
 2667 03ae 10010000 		.4byte	.LLST9
 2668 03b2 19       		.uleb128 0x19
 2669 03b3 56040000 		.4byte	.LASF50
 2670 03b7 01       		.byte	0x1
 2671 03b8 A208     		.2byte	0x8a2
 2672 03ba 83000000 		.4byte	0x83
 2673 03be 2E010000 		.4byte	.LLST10
 2674 03c2 00       		.byte	0
 2675 03c3 1B       		.uleb128 0x1b
 2676 03c4 59000000 		.4byte	.LASF51
 2677 03c8 01       		.byte	0x1
 2678 03c9 B708     		.2byte	0x8b7
 2679 03cb 83000000 		.4byte	0x83
 2680 03cf 00000000 		.4byte	.LFB13
 2681 03d3 10000000 		.4byte	.LFE13-.LFB13
 2682 03d7 01       		.uleb128 0x1
 2683 03d8 9C       		.byte	0x9c
 2684 03d9 EC030000 		.4byte	0x3ec
 2685 03dd 1C       		.uleb128 0x1c
 2686 03de 16000000 		.4byte	.LASF52
 2687 03e2 01       		.byte	0x1
 2688 03e3 B908     		.2byte	0x8b9
 2689 03e5 83000000 		.4byte	0x83
 2690 03e9 01       		.uleb128 0x1
 2691 03ea 50       		.byte	0x50
 2692 03eb 00       		.byte	0
 2693 03ec 17       		.uleb128 0x17
 2694 03ed 8F000000 		.4byte	.LASF53
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 105


 2695 03f1 01       		.byte	0x1
 2696 03f2 CE08     		.2byte	0x8ce
 2697 03f4 00000000 		.4byte	.LFB14
 2698 03f8 0C000000 		.4byte	.LFE14-.LFB14
 2699 03fc 01       		.uleb128 0x1
 2700 03fd 9C       		.byte	0x9c
 2701 03fe 11040000 		.4byte	0x411
 2702 0402 1A       		.uleb128 0x1a
 2703 0403 9E020000 		.4byte	.LASF54
 2704 0407 01       		.byte	0x1
 2705 0408 CE08     		.2byte	0x8ce
 2706 040a 83000000 		.4byte	0x83
 2707 040e 01       		.uleb128 0x1
 2708 040f 50       		.byte	0x50
 2709 0410 00       		.byte	0
 2710 0411 1D       		.uleb128 0x1d
 2711 0412 8B010000 		.4byte	0x18b
 2712 0416 00000000 		.4byte	.LFB15
 2713 041a 0E000000 		.4byte	.LFE15-.LFB15
 2714 041e 01       		.uleb128 0x1
 2715 041f 9C       		.byte	0x9c
 2716 0420 45040000 		.4byte	0x445
 2717 0424 1E       		.uleb128 0x1e
 2718 0425 9C010000 		.4byte	0x19c
 2719 0429 50010000 		.4byte	.LLST11
 2720 042d 1F       		.uleb128 0x1f
 2721 042e A8010000 		.4byte	0x1a8
 2722 0432 01       		.uleb128 0x1
 2723 0433 51       		.byte	0x51
 2724 0434 20       		.uleb128 0x20
 2725 0435 B4010000 		.4byte	0x1b4
 2726 0439 01       		.uleb128 0x1
 2727 043a 50       		.byte	0x50
 2728 043b 21       		.uleb128 0x21
 2729 043c C0010000 		.4byte	0x1c0
 2730 0440 00000020 		.4byte	0x20000000
 2731 0444 00       		.byte	0
 2732 0445 1B       		.uleb128 0x1b
 2733 0446 68050000 		.4byte	.LASF55
 2734 044a 01       		.byte	0x1
 2735 044b 0909     		.2byte	0x909
 2736 044d C6000000 		.4byte	0xc6
 2737 0451 00000000 		.4byte	.LFB16
 2738 0455 0C000000 		.4byte	.LFE16-.LFB16
 2739 0459 01       		.uleb128 0x1
 2740 045a 9C       		.byte	0x9c
 2741 045b 80040000 		.4byte	0x480
 2742 045f 18       		.uleb128 0x18
 2743 0460 F0030000 		.4byte	.LASF31
 2744 0464 01       		.byte	0x1
 2745 0465 0909     		.2byte	0x909
 2746 0467 6B000000 		.4byte	0x6b
 2747 046b 71010000 		.4byte	.LLST12
 2748 046f 22       		.uleb128 0x22
 2749 0470 00000000 		.4byte	.LASF34
 2750 0474 01       		.byte	0x1
 2751 0475 0B09     		.2byte	0x90b
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 106


 2752 0477 CD010000 		.4byte	0x1cd
 2753 047b 00000020 		.4byte	0x20000000
 2754 047f 00       		.byte	0
 2755 0480 1B       		.uleb128 0x1b
 2756 0481 E1030000 		.4byte	.LASF56
 2757 0485 01       		.byte	0x1
 2758 0486 1F09     		.2byte	0x91f
 2759 0488 C6000000 		.4byte	0xc6
 2760 048c 00000000 		.4byte	.LFB17
 2761 0490 10000000 		.4byte	.LFE17-.LFB17
 2762 0494 01       		.uleb128 0x1
 2763 0495 9C       		.byte	0x9c
 2764 0496 D7040000 		.4byte	0x4d7
 2765 049a 18       		.uleb128 0x18
 2766 049b F0030000 		.4byte	.LASF31
 2767 049f 01       		.byte	0x1
 2768 04a0 1F09     		.2byte	0x91f
 2769 04a2 6B000000 		.4byte	0x6b
 2770 04a6 92010000 		.4byte	.LLST13
 2771 04aa 1A       		.uleb128 0x1a
 2772 04ab 8A040000 		.4byte	.LASF32
 2773 04af 01       		.byte	0x1
 2774 04b0 1F09     		.2byte	0x91f
 2775 04b2 C6000000 		.4byte	0xc6
 2776 04b6 01       		.uleb128 0x1
 2777 04b7 51       		.byte	0x51
 2778 04b8 1C       		.uleb128 0x1c
 2779 04b9 4B000000 		.4byte	.LASF33
 2780 04bd 01       		.byte	0x1
 2781 04be 2109     		.2byte	0x921
 2782 04c0 C6000000 		.4byte	0xc6
 2783 04c4 01       		.uleb128 0x1
 2784 04c5 50       		.byte	0x50
 2785 04c6 22       		.uleb128 0x22
 2786 04c7 00000000 		.4byte	.LASF34
 2787 04cb 01       		.byte	0x1
 2788 04cc 2209     		.2byte	0x922
 2789 04ce CD010000 		.4byte	0x1cd
 2790 04d2 00000020 		.4byte	0x20000000
 2791 04d6 00       		.byte	0
 2792 04d7 1B       		.uleb128 0x1b
 2793 04d8 07050000 		.4byte	.LASF57
 2794 04dc 01       		.byte	0x1
 2795 04dd 3B09     		.2byte	0x93b
 2796 04df C6000000 		.4byte	0xc6
 2797 04e3 00000000 		.4byte	.LFB18
 2798 04e7 10000000 		.4byte	.LFE18-.LFB18
 2799 04eb 01       		.uleb128 0x1
 2800 04ec 9C       		.byte	0x9c
 2801 04ed 12050000 		.4byte	0x512
 2802 04f1 18       		.uleb128 0x18
 2803 04f2 F0030000 		.4byte	.LASF31
 2804 04f6 01       		.byte	0x1
 2805 04f7 3B09     		.2byte	0x93b
 2806 04f9 6B000000 		.4byte	0x6b
 2807 04fd B3010000 		.4byte	.LLST14
 2808 0501 22       		.uleb128 0x22
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 107


 2809 0502 00000000 		.4byte	.LASF34
 2810 0506 01       		.byte	0x1
 2811 0507 3D09     		.2byte	0x93d
 2812 0509 CD010000 		.4byte	0x1cd
 2813 050d 00000020 		.4byte	0x20000000
 2814 0511 00       		.byte	0
 2815 0512 17       		.uleb128 0x17
 2816 0513 C8040000 		.4byte	.LASF58
 2817 0517 01       		.byte	0x1
 2818 0518 4E09     		.2byte	0x94e
 2819 051a 00000000 		.4byte	.LFB19
 2820 051e 34000000 		.4byte	.LFE19-.LFB19
 2821 0522 01       		.uleb128 0x1
 2822 0523 9C       		.byte	0x9c
 2823 0524 8B050000 		.4byte	0x58b
 2824 0528 18       		.uleb128 0x18
 2825 0529 F0030000 		.4byte	.LASF31
 2826 052d 01       		.byte	0x1
 2827 052e 4E09     		.2byte	0x94e
 2828 0530 6B000000 		.4byte	0x6b
 2829 0534 D4010000 		.4byte	.LLST15
 2830 0538 18       		.uleb128 0x18
 2831 0539 F7030000 		.4byte	.LASF59
 2832 053d 01       		.byte	0x1
 2833 053e 4E09     		.2byte	0x94e
 2834 0540 6B000000 		.4byte	0x6b
 2835 0544 F5010000 		.4byte	.LLST16
 2836 0548 19       		.uleb128 0x19
 2837 0549 11010000 		.4byte	.LASF22
 2838 054d 01       		.byte	0x1
 2839 054e 5009     		.2byte	0x950
 2840 0550 6B000000 		.4byte	0x6b
 2841 0554 16020000 		.4byte	.LLST17
 2842 0558 19       		.uleb128 0x19
 2843 0559 91020000 		.4byte	.LASF60
 2844 055d 01       		.byte	0x1
 2845 055e 5109     		.2byte	0x951
 2846 0560 83000000 		.4byte	0x83
 2847 0564 29020000 		.4byte	.LLST18
 2848 0568 19       		.uleb128 0x19
 2849 0569 00030000 		.4byte	.LASF30
 2850 056d 01       		.byte	0x1
 2851 056e 5209     		.2byte	0x952
 2852 0570 83000000 		.4byte	0x83
 2853 0574 3C020000 		.4byte	.LLST19
 2854 0578 15       		.uleb128 0x15
 2855 0579 18000000 		.4byte	.LVL38
 2856 057d 2A0C0000 		.4byte	0xc2a
 2857 0581 15       		.uleb128 0x15
 2858 0582 2C000000 		.4byte	.LVL42
 2859 0586 350C0000 		.4byte	0xc35
 2860 058a 00       		.byte	0
 2861 058b 1B       		.uleb128 0x1b
 2862 058c D4020000 		.4byte	.LASF61
 2863 0590 01       		.byte	0x1
 2864 0591 7009     		.2byte	0x970
 2865 0593 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 108


 2866 0597 00000000 		.4byte	.LFB20
 2867 059b 20000000 		.4byte	.LFE20-.LFB20
 2868 059f 01       		.uleb128 0x1
 2869 05a0 9C       		.byte	0x9c
 2870 05a1 C6050000 		.4byte	0x5c6
 2871 05a5 18       		.uleb128 0x18
 2872 05a6 F0030000 		.4byte	.LASF31
 2873 05aa 01       		.byte	0x1
 2874 05ab 7009     		.2byte	0x970
 2875 05ad 6B000000 		.4byte	0x6b
 2876 05b1 5A020000 		.4byte	.LLST20
 2877 05b5 19       		.uleb128 0x19
 2878 05b6 F7030000 		.4byte	.LASF59
 2879 05ba 01       		.byte	0x1
 2880 05bb 7209     		.2byte	0x972
 2881 05bd 6B000000 		.4byte	0x6b
 2882 05c1 7B020000 		.4byte	.LLST21
 2883 05c5 00       		.byte	0
 2884 05c6 17       		.uleb128 0x17
 2885 05c7 5C050000 		.4byte	.LASF62
 2886 05cb 01       		.byte	0x1
 2887 05cc 8509     		.2byte	0x985
 2888 05ce 00000000 		.4byte	.LFB21
 2889 05d2 14000000 		.4byte	.LFE21-.LFB21
 2890 05d6 01       		.uleb128 0x1
 2891 05d7 9C       		.byte	0x9c
 2892 05d8 ED050000 		.4byte	0x5ed
 2893 05dc 18       		.uleb128 0x18
 2894 05dd F0030000 		.4byte	.LASF31
 2895 05e1 01       		.byte	0x1
 2896 05e2 8509     		.2byte	0x985
 2897 05e4 6B000000 		.4byte	0x6b
 2898 05e8 9C020000 		.4byte	.LLST22
 2899 05ec 00       		.byte	0
 2900 05ed 1B       		.uleb128 0x1b
 2901 05ee D8000000 		.4byte	.LASF63
 2902 05f2 01       		.byte	0x1
 2903 05f3 9709     		.2byte	0x997
 2904 05f5 6B000000 		.4byte	0x6b
 2905 05f9 00000000 		.4byte	.LFB22
 2906 05fd 18000000 		.4byte	.LFE22-.LFB22
 2907 0601 01       		.uleb128 0x1
 2908 0602 9C       		.byte	0x9c
 2909 0603 18060000 		.4byte	0x618
 2910 0607 18       		.uleb128 0x18
 2911 0608 F0030000 		.4byte	.LASF31
 2912 060c 01       		.byte	0x1
 2913 060d 9709     		.2byte	0x997
 2914 060f 6B000000 		.4byte	0x6b
 2915 0613 BD020000 		.4byte	.LLST23
 2916 0617 00       		.byte	0
 2917 0618 17       		.uleb128 0x17
 2918 0619 A5010000 		.4byte	.LASF64
 2919 061d 01       		.byte	0x1
 2920 061e A709     		.2byte	0x9a7
 2921 0620 00000000 		.4byte	.LFB23
 2922 0624 14000000 		.4byte	.LFE23-.LFB23
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 109


 2923 0628 01       		.uleb128 0x1
 2924 0629 9C       		.byte	0x9c
 2925 062a 3F060000 		.4byte	0x63f
 2926 062e 18       		.uleb128 0x18
 2927 062f F0030000 		.4byte	.LASF31
 2928 0633 01       		.byte	0x1
 2929 0634 A709     		.2byte	0x9a7
 2930 0636 6B000000 		.4byte	0x6b
 2931 063a DE020000 		.4byte	.LLST24
 2932 063e 00       		.byte	0
 2933 063f 17       		.uleb128 0x17
 2934 0640 8B030000 		.4byte	.LASF65
 2935 0644 01       		.byte	0x1
 2936 0645 B509     		.2byte	0x9b5
 2937 0647 00000000 		.4byte	.LFB24
 2938 064b 14000000 		.4byte	.LFE24-.LFB24
 2939 064f 01       		.uleb128 0x1
 2940 0650 9C       		.byte	0x9c
 2941 0651 66060000 		.4byte	0x666
 2942 0655 18       		.uleb128 0x18
 2943 0656 F0030000 		.4byte	.LASF31
 2944 065a 01       		.byte	0x1
 2945 065b B509     		.2byte	0x9b5
 2946 065d 6B000000 		.4byte	0x6b
 2947 0661 FF020000 		.4byte	.LLST25
 2948 0665 00       		.byte	0
 2949 0666 17       		.uleb128 0x17
 2950 0667 6C040000 		.4byte	.LASF66
 2951 066b 01       		.byte	0x1
 2952 066c C409     		.2byte	0x9c4
 2953 066e 00000000 		.4byte	.LFB25
 2954 0672 14000000 		.4byte	.LFE25-.LFB25
 2955 0676 01       		.uleb128 0x1
 2956 0677 9C       		.byte	0x9c
 2957 0678 8D060000 		.4byte	0x68d
 2958 067c 18       		.uleb128 0x18
 2959 067d F0030000 		.4byte	.LASF31
 2960 0681 01       		.byte	0x1
 2961 0682 C409     		.2byte	0x9c4
 2962 0684 6B000000 		.4byte	0x6b
 2963 0688 20030000 		.4byte	.LLST26
 2964 068c 00       		.byte	0
 2965 068d 17       		.uleb128 0x17
 2966 068e 36050000 		.4byte	.LASF67
 2967 0692 01       		.byte	0x1
 2968 0693 D309     		.2byte	0x9d3
 2969 0695 00000000 		.4byte	.LFB26
 2970 0699 04000000 		.4byte	.LFE26-.LFB26
 2971 069d 01       		.uleb128 0x1
 2972 069e 9C       		.byte	0x9c
 2973 069f B2060000 		.4byte	0x6b2
 2974 06a3 1A       		.uleb128 0x1a
 2975 06a4 4B050000 		.4byte	.LASF49
 2976 06a8 01       		.byte	0x1
 2977 06a9 D309     		.2byte	0x9d3
 2978 06ab 6B000000 		.4byte	0x6b
 2979 06af 01       		.uleb128 0x1
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 110


 2980 06b0 50       		.byte	0x50
 2981 06b1 00       		.byte	0
 2982 06b2 13       		.uleb128 0x13
 2983 06b3 AF000000 		.4byte	.LASF68
 2984 06b7 01       		.byte	0x1
 2985 06b8 EB09     		.2byte	0x9eb
 2986 06ba 00000000 		.4byte	.LFB27
 2987 06be 18000000 		.4byte	.LFE27-.LFB27
 2988 06c2 01       		.uleb128 0x1
 2989 06c3 9C       		.byte	0x9c
 2990 06c4 17       		.uleb128 0x17
 2991 06c5 5A060000 		.4byte	.LASF69
 2992 06c9 01       		.byte	0x1
 2993 06ca FF09     		.2byte	0x9ff
 2994 06cc 00000000 		.4byte	.LFB28
 2995 06d0 2C000000 		.4byte	.LFE28-.LFB28
 2996 06d4 01       		.uleb128 0x1
 2997 06d5 9C       		.byte	0x9c
 2998 06d6 FD060000 		.4byte	0x6fd
 2999 06da 18       		.uleb128 0x18
 3000 06db 16050000 		.4byte	.LASF70
 3001 06df 01       		.byte	0x1
 3002 06e0 FF09     		.2byte	0x9ff
 3003 06e2 83000000 		.4byte	0x83
 3004 06e6 41030000 		.4byte	.LLST27
 3005 06ea 15       		.uleb128 0x15
 3006 06eb 14000000 		.4byte	.LVL62
 3007 06ef 400C0000 		.4byte	0xc40
 3008 06f3 15       		.uleb128 0x15
 3009 06f4 22000000 		.4byte	.LVL64
 3010 06f8 400C0000 		.4byte	0xc40
 3011 06fc 00       		.byte	0
 3012 06fd 1D       		.uleb128 0x1d
 3013 06fe F2000000 		.4byte	0xf2
 3014 0702 00000000 		.4byte	.LFB3
 3015 0706 BC000000 		.4byte	.LFE3-.LFB3
 3016 070a 01       		.uleb128 0x1
 3017 070b 9C       		.byte	0x9c
 3018 070c AE070000 		.4byte	0x7ae
 3019 0710 23       		.uleb128 0x23
 3020 0711 FE000000 		.4byte	0xfe
 3021 0715 23       		.uleb128 0x23
 3022 0716 09010000 		.4byte	0x109
 3023 071a 23       		.uleb128 0x23
 3024 071b 14010000 		.4byte	0x114
 3025 071f 24       		.uleb128 0x24
 3026 0720 1F010000 		.4byte	0x11f
 3027 0724 00       		.byte	0
 3028 0725 23       		.uleb128 0x23
 3029 0726 2A010000 		.4byte	0x12a
 3030 072a 25       		.uleb128 0x25
 3031 072b 0A000000 		.4byte	.LBB13
 3032 072f 86000000 		.4byte	.LBE13-.LBB13
 3033 0733 A4070000 		.4byte	0x7a4
 3034 0737 26       		.uleb128 0x26
 3035 0738 FE000000 		.4byte	0xfe
 3036 073c 5F030000 		.4byte	.LLST28
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 111


 3037 0740 26       		.uleb128 0x26
 3038 0741 09010000 		.4byte	0x109
 3039 0745 8E030000 		.4byte	.LLST29
 3040 0749 26       		.uleb128 0x26
 3041 074a 14010000 		.4byte	0x114
 3042 074e A1030000 		.4byte	.LLST30
 3043 0752 26       		.uleb128 0x26
 3044 0753 1F010000 		.4byte	0x11f
 3045 0757 D0030000 		.4byte	.LLST31
 3046 075b 20       		.uleb128 0x20
 3047 075c 2A010000 		.4byte	0x12a
 3048 0760 02       		.uleb128 0x2
 3049 0761 91       		.byte	0x91
 3050 0762 6C       		.sleb128 -20
 3051 0763 15       		.uleb128 0x15
 3052 0764 0E000000 		.4byte	.LVL68
 3053 0768 2A0C0000 		.4byte	0xc2a
 3054 076c 27       		.uleb128 0x27
 3055 076d 74000000 		.4byte	.LVL80
 3056 0771 4B0C0000 		.4byte	0xc4b
 3057 0775 80070000 		.4byte	0x780
 3058 0779 28       		.uleb128 0x28
 3059 077a 01       		.uleb128 0x1
 3060 077b 50       		.byte	0x50
 3061 077c 02       		.uleb128 0x2
 3062 077d 08       		.byte	0x8
 3063 077e 30       		.byte	0x30
 3064 077f 00       		.byte	0
 3065 0780 27       		.uleb128 0x27
 3066 0781 86000000 		.4byte	.LVL81
 3067 0785 C4060000 		.4byte	0x6c4
 3068 0789 93070000 		.4byte	0x793
 3069 078d 28       		.uleb128 0x28
 3070 078e 01       		.uleb128 0x1
 3071 078f 50       		.byte	0x50
 3072 0790 01       		.uleb128 0x1
 3073 0791 44       		.byte	0x44
 3074 0792 00       		.byte	0
 3075 0793 29       		.uleb128 0x29
 3076 0794 90000000 		.4byte	.LVL82
 3077 0798 350C0000 		.4byte	0xc35
 3078 079c 28       		.uleb128 0x28
 3079 079d 01       		.uleb128 0x1
 3080 079e 50       		.byte	0x50
 3081 079f 02       		.uleb128 0x2
 3082 07a0 74       		.byte	0x74
 3083 07a1 00       		.sleb128 0
 3084 07a2 00       		.byte	0
 3085 07a3 00       		.byte	0
 3086 07a4 15       		.uleb128 0x15
 3087 07a5 06000000 		.4byte	.LVL67
 3088 07a9 560C0000 		.4byte	0xc56
 3089 07ad 00       		.byte	0
 3090 07ae 17       		.uleb128 0x17
 3091 07af 00040000 		.4byte	.LASF71
 3092 07b3 01       		.byte	0x1
 3093 07b4 3C03     		.2byte	0x33c
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 112


 3094 07b6 00000000 		.4byte	.LFB10
 3095 07ba B8000000 		.4byte	.LFE10-.LFB10
 3096 07be 01       		.uleb128 0x1
 3097 07bf 9C       		.byte	0x9c
 3098 07c0 63080000 		.4byte	0x863
 3099 07c4 18       		.uleb128 0x18
 3100 07c5 00010000 		.4byte	.LASF21
 3101 07c9 01       		.byte	0x1
 3102 07ca 3C03     		.2byte	0x33c
 3103 07cc 83000000 		.4byte	0x83
 3104 07d0 FB030000 		.4byte	.LLST32
 3105 07d4 19       		.uleb128 0x19
 3106 07d5 11010000 		.4byte	.LASF22
 3107 07d9 01       		.byte	0x1
 3108 07da 3E03     		.2byte	0x33e
 3109 07dc 6B000000 		.4byte	0x6b
 3110 07e0 41040000 		.4byte	.LLST33
 3111 07e4 19       		.uleb128 0x19
 3112 07e5 37060000 		.4byte	.LASF72
 3113 07e9 01       		.byte	0x1
 3114 07ea 3F03     		.2byte	0x33f
 3115 07ec 6B000000 		.4byte	0x6b
 3116 07f0 55040000 		.4byte	.LLST34
 3117 07f4 19       		.uleb128 0x19
 3118 07f5 94010000 		.4byte	.LASF73
 3119 07f9 01       		.byte	0x1
 3120 07fa 4203     		.2byte	0x342
 3121 07fc 83000000 		.4byte	0x83
 3122 0800 79040000 		.4byte	.LLST35
 3123 0804 15       		.uleb128 0x15
 3124 0805 1C000000 		.4byte	.LVL84
 3125 0809 2A0C0000 		.4byte	0xc2a
 3126 080d 15       		.uleb128 0x15
 3127 080e 22000000 		.4byte	.LVL86
 3128 0812 15020000 		.4byte	0x215
 3129 0816 15       		.uleb128 0x15
 3130 0817 2C000000 		.4byte	.LVL88
 3131 081b E4010000 		.4byte	0x1e4
 3132 081f 27       		.uleb128 0x27
 3133 0820 66000000 		.4byte	.LVL93
 3134 0824 400C0000 		.4byte	0xc40
 3135 0828 33080000 		.4byte	0x833
 3136 082c 28       		.uleb128 0x28
 3137 082d 01       		.uleb128 0x1
 3138 082e 50       		.byte	0x50
 3139 082f 02       		.uleb128 0x2
 3140 0830 08       		.byte	0x8
 3141 0831 32       		.byte	0x32
 3142 0832 00       		.byte	0
 3143 0833 27       		.uleb128 0x27
 3144 0834 7E000000 		.4byte	.LVL96
 3145 0838 400C0000 		.4byte	0xc40
 3146 083c 47080000 		.4byte	0x847
 3147 0840 28       		.uleb128 0x28
 3148 0841 01       		.uleb128 0x1
 3149 0842 50       		.byte	0x50
 3150 0843 02       		.uleb128 0x2
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 113


 3151 0844 08       		.byte	0x8
 3152 0845 32       		.byte	0x32
 3153 0846 00       		.byte	0
 3154 0847 15       		.uleb128 0x15
 3155 0848 92000000 		.4byte	.LVL98
 3156 084c F2000000 		.4byte	0xf2
 3157 0850 29       		.uleb128 0x29
 3158 0851 98000000 		.4byte	.LVL99
 3159 0855 350C0000 		.4byte	0xc35
 3160 0859 28       		.uleb128 0x28
 3161 085a 01       		.uleb128 0x1
 3162 085b 50       		.byte	0x50
 3163 085c 04       		.uleb128 0x4
 3164 085d 91       		.byte	0x91
 3165 085e 64       		.sleb128 -28
 3166 085f 94       		.byte	0x94
 3167 0860 01       		.byte	0x1
 3168 0861 00       		.byte	0
 3169 0862 00       		.byte	0
 3170 0863 17       		.uleb128 0x17
 3171 0864 84050000 		.4byte	.LASF74
 3172 0868 01       		.byte	0x1
 3173 0869 160A     		.2byte	0xa16
 3174 086b 00000000 		.4byte	.LFB29
 3175 086f 14000000 		.4byte	.LFE29-.LFB29
 3176 0873 01       		.uleb128 0x1
 3177 0874 9C       		.byte	0x9c
 3178 0875 93080000 		.4byte	0x893
 3179 0879 18       		.uleb128 0x18
 3180 087a 01070000 		.4byte	.LASF75
 3181 087e 01       		.byte	0x1
 3182 087f 160A     		.2byte	0xa16
 3183 0881 77000000 		.4byte	0x77
 3184 0885 A5040000 		.4byte	.LLST36
 3185 0889 15       		.uleb128 0x15
 3186 088a 0C000000 		.4byte	.LVL102
 3187 088e 400C0000 		.4byte	0xc40
 3188 0892 00       		.byte	0
 3189 0893 2A       		.uleb128 0x2a
 3190 0894 05010000 		.4byte	.LASF76
 3191 0898 01       		.byte	0x1
 3192 0899 240A     		.2byte	0xa24
 3193 089b 00000000 		.4byte	.LFB30
 3194 089f 48000000 		.4byte	.LFE30-.LFB30
 3195 08a3 01       		.uleb128 0x1
 3196 08a4 9C       		.byte	0x9c
 3197 08a5 BA080000 		.4byte	0x8ba
 3198 08a9 18       		.uleb128 0x18
 3199 08aa 00010000 		.4byte	.LASF21
 3200 08ae 01       		.byte	0x1
 3201 08af 240A     		.2byte	0xa24
 3202 08b1 83000000 		.4byte	0x83
 3203 08b5 C6040000 		.4byte	.LLST37
 3204 08b9 00       		.byte	0
 3205 08ba 2A       		.uleb128 0x2a
 3206 08bb F2020000 		.4byte	.LASF77
 3207 08bf 01       		.byte	0x1
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 114


 3208 08c0 610A     		.2byte	0xa61
 3209 08c2 00000000 		.4byte	.LFB32
 3210 08c6 54000000 		.4byte	.LFE32-.LFB32
 3211 08ca 01       		.uleb128 0x1
 3212 08cb 9C       		.byte	0x9c
 3213 08cc 79090000 		.4byte	0x979
 3214 08d0 2B       		.uleb128 0x2b
 3215 08d1 6900     		.ascii	"i\000"
 3216 08d3 01       		.byte	0x1
 3217 08d4 630A     		.2byte	0xa63
 3218 08d6 83000000 		.4byte	0x83
 3219 08da E7040000 		.4byte	.LLST38
 3220 08de 2C       		.uleb128 0x2c
 3221 08df 36010000 		.4byte	0x136
 3222 08e3 04000000 		.4byte	.LBB24
 3223 08e7 00000000 		.4byte	.Ldebug_ranges0+0
 3224 08eb 01       		.byte	0x1
 3225 08ec 6D0A     		.2byte	0xa6d
 3226 08ee 0B090000 		.4byte	0x90b
 3227 08f2 1E       		.uleb128 0x1e
 3228 08f3 43010000 		.4byte	0x143
 3229 08f7 2B050000 		.4byte	.LLST39
 3230 08fb 2D       		.uleb128 0x2d
 3231 08fc 00000000 		.4byte	.Ldebug_ranges0+0
 3232 0900 1E       		.uleb128 0x1e
 3233 0901 43010000 		.4byte	0x143
 3234 0905 2B050000 		.4byte	.LLST39
 3235 0909 00       		.byte	0
 3236 090a 00       		.byte	0
 3237 090b 2C       		.uleb128 0x2c
 3238 090c 8B010000 		.4byte	0x18b
 3239 0910 08000000 		.4byte	.LBB31
 3240 0914 20000000 		.4byte	.Ldebug_ranges0+0x20
 3241 0918 01       		.byte	0x1
 3242 0919 6A0A     		.2byte	0xa6a
 3243 091b 4A090000 		.4byte	0x94a
 3244 091f 1E       		.uleb128 0x1e
 3245 0920 A8010000 		.4byte	0x1a8
 3246 0924 3F050000 		.4byte	.LLST41
 3247 0928 1E       		.uleb128 0x1e
 3248 0929 9C010000 		.4byte	0x19c
 3249 092d 57050000 		.4byte	.LLST42
 3250 0931 2D       		.uleb128 0x2d
 3251 0932 20000000 		.4byte	.Ldebug_ranges0+0x20
 3252 0936 26       		.uleb128 0x26
 3253 0937 B4010000 		.4byte	0x1b4
 3254 093b 6B050000 		.4byte	.LLST43
 3255 093f 21       		.uleb128 0x21
 3256 0940 C0010000 		.4byte	0x1c0
 3257 0944 00000020 		.4byte	0x20000000
 3258 0948 00       		.byte	0
 3259 0949 00       		.byte	0
 3260 094a 2E       		.uleb128 0x2e
 3261 094b 71010000 		.4byte	0x171
 3262 094f 2C000000 		.4byte	.LBB39
 3263 0953 04000000 		.4byte	.LBE39-.LBB39
 3264 0957 01       		.byte	0x1
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 115


 3265 0958 700A     		.2byte	0xa70
 3266 095a 68090000 		.4byte	0x968
 3267 095e 1E       		.uleb128 0x1e
 3268 095f 7E010000 		.4byte	0x17e
 3269 0963 8E050000 		.4byte	.LLST44
 3270 0967 00       		.byte	0
 3271 0968 2F       		.uleb128 0x2f
 3272 0969 68010000 		.4byte	0x168
 3273 096d 30000000 		.4byte	.LBB41
 3274 0971 04000000 		.4byte	.LBE41-.LBB41
 3275 0975 01       		.byte	0x1
 3276 0976 710A     		.2byte	0xa71
 3277 0978 00       		.byte	0
 3278 0979 13       		.uleb128 0x13
 3279 097a A3060000 		.4byte	.LASF78
 3280 097e 01       		.byte	0x1
 3281 097f 900A     		.2byte	0xa90
 3282 0981 00000000 		.4byte	.LFB34
 3283 0985 10000000 		.4byte	.LFE34-.LFB34
 3284 0989 01       		.uleb128 0x1
 3285 098a 9C       		.byte	0x9c
 3286 098b 13       		.uleb128 0x13
 3287 098c BF000000 		.4byte	.LASF79
 3288 0990 01       		.byte	0x1
 3289 0991 A00A     		.2byte	0xaa0
 3290 0993 00000000 		.4byte	.LFB35
 3291 0997 10000000 		.4byte	.LFE35-.LFB35
 3292 099b 01       		.uleb128 0x1
 3293 099c 9C       		.byte	0x9c
 3294 099d 17       		.uleb128 0x17
 3295 099e D2050000 		.4byte	.LASF80
 3296 09a2 01       		.byte	0x1
 3297 09a3 7F0A     		.2byte	0xa7f
 3298 09a5 00000000 		.4byte	.LFB33
 3299 09a9 18000000 		.4byte	.LFE33-.LFB33
 3300 09ad 01       		.uleb128 0x1
 3301 09ae 9C       		.byte	0x9c
 3302 09af BD090000 		.4byte	0x9bd
 3303 09b3 15       		.uleb128 0x15
 3304 09b4 06000000 		.4byte	.LVL117
 3305 09b8 8B090000 		.4byte	0x98b
 3306 09bc 00       		.byte	0
 3307 09bd 17       		.uleb128 0x17
 3308 09be 47040000 		.4byte	.LASF81
 3309 09c2 01       		.byte	0x1
 3310 09c3 440A     		.2byte	0xa44
 3311 09c5 00000000 		.4byte	.LFB31
 3312 09c9 1C000000 		.4byte	.LFE31-.LFB31
 3313 09cd 01       		.uleb128 0x1
 3314 09ce 9C       		.byte	0x9c
 3315 09cf E6090000 		.4byte	0x9e6
 3316 09d3 15       		.uleb128 0x15
 3317 09d4 0E000000 		.4byte	.LVL118
 3318 09d8 BA080000 		.4byte	0x8ba
 3319 09dc 15       		.uleb128 0x15
 3320 09dd 16000000 		.4byte	.LVL119
 3321 09e1 9D090000 		.4byte	0x99d
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 116


 3322 09e5 00       		.byte	0
 3323 09e6 13       		.uleb128 0x13
 3324 09e7 7A060000 		.4byte	.LASF82
 3325 09eb 01       		.byte	0x1
 3326 09ec B00A     		.2byte	0xab0
 3327 09ee 00000000 		.4byte	.LFB36
 3328 09f2 10000000 		.4byte	.LFE36-.LFB36
 3329 09f6 01       		.uleb128 0x1
 3330 09f7 9C       		.byte	0x9c
 3331 09f8 1D       		.uleb128 0x1d
 3332 09f9 71010000 		.4byte	0x171
 3333 09fd 00000000 		.4byte	.LFB37
 3334 0a01 10000000 		.4byte	.LFE37-.LFB37
 3335 0a05 01       		.uleb128 0x1
 3336 0a06 9C       		.byte	0x9c
 3337 0a07 150A0000 		.4byte	0xa15
 3338 0a0b 1E       		.uleb128 0x1e
 3339 0a0c 7E010000 		.4byte	0x17e
 3340 0a10 A1050000 		.4byte	.LLST45
 3341 0a14 00       		.byte	0
 3342 0a15 16       		.uleb128 0x16
 3343 0a16 6B010000 		.4byte	.LASF84
 3344 0a1a 01       		.byte	0x1
 3345 0a1b D10A     		.2byte	0xad1
 3346 0a1d 83000000 		.4byte	0x83
 3347 0a21 00000000 		.4byte	.LFB38
 3348 0a25 10000000 		.4byte	.LFE38-.LFB38
 3349 0a29 01       		.uleb128 0x1
 3350 0a2a 9C       		.byte	0x9c
 3351 0a2b 16       		.uleb128 0x16
 3352 0a2c A8040000 		.4byte	.LASF85
 3353 0a30 01       		.byte	0x1
 3354 0a31 E10A     		.2byte	0xae1
 3355 0a33 83000000 		.4byte	0x83
 3356 0a37 00000000 		.4byte	.LFB39
 3357 0a3b 10000000 		.4byte	.LFE39-.LFB39
 3358 0a3f 01       		.uleb128 0x1
 3359 0a40 9C       		.byte	0x9c
 3360 0a41 1D       		.uleb128 0x1d
 3361 0a42 36010000 		.4byte	0x136
 3362 0a46 00000000 		.4byte	.LFB40
 3363 0a4a 18000000 		.4byte	.LFE40-.LFB40
 3364 0a4e 01       		.uleb128 0x1
 3365 0a4f 9C       		.byte	0x9c
 3366 0a50 6B0A0000 		.4byte	0xa6b
 3367 0a54 1F       		.uleb128 0x1f
 3368 0a55 43010000 		.4byte	0x143
 3369 0a59 01       		.uleb128 0x1
 3370 0a5a 50       		.byte	0x50
 3371 0a5b 2D       		.uleb128 0x2d
 3372 0a5c 40000000 		.4byte	.Ldebug_ranges0+0x40
 3373 0a60 1E       		.uleb128 0x1e
 3374 0a61 43010000 		.4byte	0x143
 3375 0a65 C2050000 		.4byte	.LLST46
 3376 0a69 00       		.byte	0
 3377 0a6a 00       		.byte	0
 3378 0a6b 16       		.uleb128 0x16
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 117


 3379 0a6c 62060000 		.4byte	.LASF86
 3380 0a70 01       		.byte	0x1
 3381 0a71 1A0B     		.2byte	0xb1a
 3382 0a73 83000000 		.4byte	0x83
 3383 0a77 00000000 		.4byte	.LFB41
 3384 0a7b 10000000 		.4byte	.LFE41-.LFB41
 3385 0a7f 01       		.uleb128 0x1
 3386 0a80 9C       		.byte	0x9c
 3387 0a81 16       		.uleb128 0x16
 3388 0a82 20030000 		.4byte	.LASF87
 3389 0a86 01       		.byte	0x1
 3390 0a87 310B     		.2byte	0xb31
 3391 0a89 83000000 		.4byte	0x83
 3392 0a8d 00000000 		.4byte	.LFB42
 3393 0a91 10000000 		.4byte	.LFE42-.LFB42
 3394 0a95 01       		.uleb128 0x1
 3395 0a96 9C       		.byte	0x9c
 3396 0a97 30       		.uleb128 0x30
 3397 0a98 50010000 		.4byte	0x150
 3398 0a9c 00000000 		.4byte	.LFB46
 3399 0aa0 24000000 		.4byte	.LFE46-.LFB46
 3400 0aa4 01       		.uleb128 0x1
 3401 0aa5 9C       		.byte	0x9c
 3402 0aa6 CC0A0000 		.4byte	0xacc
 3403 0aaa 23       		.uleb128 0x23
 3404 0aab 5D010000 		.4byte	0x15d
 3405 0aaf 25       		.uleb128 0x25
 3406 0ab0 0C000000 		.4byte	.LBB51
 3407 0ab4 10000000 		.4byte	.LBE51-.LBB51
 3408 0ab8 C20A0000 		.4byte	0xac2
 3409 0abc 23       		.uleb128 0x23
 3410 0abd 5D010000 		.4byte	0x15d
 3411 0ac1 00       		.byte	0
 3412 0ac2 15       		.uleb128 0x15
 3413 0ac3 06000000 		.4byte	.LVL125
 3414 0ac7 810A0000 		.4byte	0xa81
 3415 0acb 00       		.byte	0
 3416 0acc 31       		.uleb128 0x31
 3417 0acd 68010000 		.4byte	0x168
 3418 0ad1 00000000 		.4byte	.LFB43
 3419 0ad5 0C000000 		.4byte	.LFE43-.LFB43
 3420 0ad9 01       		.uleb128 0x1
 3421 0ada 9C       		.byte	0x9c
 3422 0adb 1B       		.uleb128 0x1b
 3423 0adc 0F060000 		.4byte	.LASF88
 3424 0ae0 01       		.byte	0x1
 3425 0ae1 610B     		.2byte	0xb61
 3426 0ae3 E7000000 		.4byte	0xe7
 3427 0ae7 00000000 		.4byte	.LFB44
 3428 0aeb 10000000 		.4byte	.LFE44-.LFB44
 3429 0aef 01       		.uleb128 0x1
 3430 0af0 9C       		.byte	0x9c
 3431 0af1 220B0000 		.4byte	0xb22
 3432 0af5 18       		.uleb128 0x18
 3433 0af6 F0030000 		.4byte	.LASF31
 3434 0afa 01       		.byte	0x1
 3435 0afb 610B     		.2byte	0xb61
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 118


 3436 0afd 83000000 		.4byte	0x83
 3437 0b01 D6050000 		.4byte	.LLST47
 3438 0b05 1A       		.uleb128 0x1a
 3439 0b06 9F040000 		.4byte	.LASF89
 3440 0b0a 01       		.byte	0x1
 3441 0b0b 610B     		.2byte	0xb61
 3442 0b0d E7000000 		.4byte	0xe7
 3443 0b11 01       		.uleb128 0x1
 3444 0b12 51       		.byte	0x51
 3445 0b13 1C       		.uleb128 0x1c
 3446 0b14 52000000 		.4byte	.LASF90
 3447 0b18 01       		.byte	0x1
 3448 0b19 630B     		.2byte	0xb63
 3449 0b1b E7000000 		.4byte	0xe7
 3450 0b1f 01       		.uleb128 0x1
 3451 0b20 50       		.byte	0x50
 3452 0b21 00       		.byte	0
 3453 0b22 1B       		.uleb128 0x1b
 3454 0b23 44020000 		.4byte	.LASF91
 3455 0b27 01       		.byte	0x1
 3456 0b28 790B     		.2byte	0xb79
 3457 0b2a E7000000 		.4byte	0xe7
 3458 0b2e 00000000 		.4byte	.LFB45
 3459 0b32 0C000000 		.4byte	.LFE45-.LFB45
 3460 0b36 01       		.uleb128 0x1
 3461 0b37 9C       		.byte	0x9c
 3462 0b38 4D0B0000 		.4byte	0xb4d
 3463 0b3c 18       		.uleb128 0x18
 3464 0b3d F0030000 		.4byte	.LASF31
 3465 0b41 01       		.byte	0x1
 3466 0b42 790B     		.2byte	0xb79
 3467 0b44 83000000 		.4byte	0x83
 3468 0b48 F7050000 		.4byte	.LLST48
 3469 0b4c 00       		.byte	0
 3470 0b4d 17       		.uleb128 0x17
 3471 0b4e 12030000 		.4byte	.LASF92
 3472 0b52 01       		.byte	0x1
 3473 0b53 A60B     		.2byte	0xba6
 3474 0b55 00000000 		.4byte	.LFB47
 3475 0b59 74000000 		.4byte	.LFE47-.LFB47
 3476 0b5d 01       		.uleb128 0x1
 3477 0b5e 9C       		.byte	0x9c
 3478 0b5f 720B0000 		.4byte	0xb72
 3479 0b63 1A       		.uleb128 0x1a
 3480 0b64 45060000 		.4byte	.LASF93
 3481 0b68 01       		.byte	0x1
 3482 0b69 A60B     		.2byte	0xba6
 3483 0b6b 720B0000 		.4byte	0xb72
 3484 0b6f 01       		.uleb128 0x1
 3485 0b70 50       		.byte	0x50
 3486 0b71 00       		.byte	0
 3487 0b72 06       		.uleb128 0x6
 3488 0b73 04       		.byte	0x4
 3489 0b74 83000000 		.4byte	0x83
 3490 0b78 32       		.uleb128 0x32
 3491 0b79 E7000000 		.4byte	0xe7
 3492 0b7d 880B0000 		.4byte	0xb88
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 119


 3493 0b81 33       		.uleb128 0x33
 3494 0b82 E0000000 		.4byte	0xe0
 3495 0b86 04       		.byte	0x4
 3496 0b87 00       		.byte	0
 3497 0b88 34       		.uleb128 0x34
 3498 0b89 24060000 		.4byte	.LASF94
 3499 0b8d 01       		.byte	0x1
 3500 0b8e 22       		.byte	0x22
 3501 0b8f 780B0000 		.4byte	0xb78
 3502 0b93 05       		.uleb128 0x5
 3503 0b94 03       		.byte	0x3
 3504 0b95 00000000 		.4byte	CySysTickCallbacks
 3505 0b99 35       		.uleb128 0x35
 3506 0b9a BA040000 		.4byte	.LASF95
 3507 0b9e 01       		.byte	0x1
 3508 0b9f 1B       		.byte	0x1b
 3509 0ba0 83000000 		.4byte	0x83
 3510 0ba4 05       		.uleb128 0x5
 3511 0ba5 03       		.byte	0x3
 3512 0ba6 00000000 		.4byte	cydelayFreqHz
 3513 0baa 35       		.uleb128 0x35
 3514 0bab 74020000 		.4byte	.LASF96
 3515 0baf 01       		.byte	0x1
 3516 0bb0 1C       		.byte	0x1c
 3517 0bb1 83000000 		.4byte	0x83
 3518 0bb5 05       		.uleb128 0x5
 3519 0bb6 03       		.byte	0x3
 3520 0bb7 00000000 		.4byte	cydelayFreqKhz
 3521 0bbb 35       		.uleb128 0x35
 3522 0bbc 94060000 		.4byte	.LASF97
 3523 0bc0 01       		.byte	0x1
 3524 0bc1 1D       		.byte	0x1d
 3525 0bc2 6B000000 		.4byte	0x6b
 3526 0bc6 05       		.uleb128 0x5
 3527 0bc7 03       		.byte	0x3
 3528 0bc8 00000000 		.4byte	cydelayFreqMhz
 3529 0bcc 35       		.uleb128 0x35
 3530 0bcd E5020000 		.4byte	.LASF98
 3531 0bd1 01       		.byte	0x1
 3532 0bd2 1E       		.byte	0x1e
 3533 0bd3 83000000 		.4byte	0x83
 3534 0bd7 05       		.uleb128 0x5
 3535 0bd8 03       		.byte	0x3
 3536 0bd9 00000000 		.4byte	cydelay32kMs
 3537 0bdd 35       		.uleb128 0x35
 3538 0bde 7E000000 		.4byte	.LASF99
 3539 0be2 01       		.byte	0x1
 3540 0be3 36       		.byte	0x36
 3541 0be4 83000000 		.4byte	0x83
 3542 0be8 05       		.uleb128 0x5
 3543 0be9 03       		.byte	0x3
 3544 0bea 00000000 		.4byte	CySysTickInitVar
 3545 0bee 32       		.uleb128 0x32
 3546 0bef FE0B0000 		.4byte	0xbfe
 3547 0bf3 FE0B0000 		.4byte	0xbfe
 3548 0bf7 33       		.uleb128 0x33
 3549 0bf8 E0000000 		.4byte	0xe0
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 120


 3550 0bfc 16       		.byte	0x16
 3551 0bfd 00       		.byte	0
 3552 0bfe 36       		.uleb128 0x36
 3553 0bff 6B000000 		.4byte	0x6b
 3554 0c03 35       		.uleb128 0x35
 3555 0c04 AD050000 		.4byte	.LASF100
 3556 0c08 01       		.byte	0x1
 3557 0c09 4C       		.byte	0x4c
 3558 0c0a 140C0000 		.4byte	0xc14
 3559 0c0e 05       		.uleb128 0x5
 3560 0c0f 03       		.byte	0x3
 3561 0c10 00000000 		.4byte	cyImoFreqMhz2DpllOffset
 3562 0c14 36       		.uleb128 0x36
 3563 0c15 EE0B0000 		.4byte	0xbee
 3564 0c19 35       		.uleb128 0x35
 3565 0c1a 38000000 		.4byte	.LASF101
 3566 0c1e 01       		.byte	0x1
 3567 0c1f 5B       		.byte	0x5b
 3568 0c20 83000000 		.4byte	0x83
 3569 0c24 05       		.uleb128 0x5
 3570 0c25 03       		.byte	0x3
 3571 0c26 00000000 		.4byte	CySysClkPumpConfig
 3572 0c2a 37       		.uleb128 0x37
 3573 0c2b 74030000 		.4byte	.LASF102
 3574 0c2f 74030000 		.4byte	.LASF102
 3575 0c33 03       		.byte	0x3
 3576 0c34 E5       		.byte	0xe5
 3577 0c35 37       		.uleb128 0x37
 3578 0c36 DF040000 		.4byte	.LASF103
 3579 0c3a DF040000 		.4byte	.LASF103
 3580 0c3e 03       		.byte	0x3
 3581 0c3f E6       		.byte	0xe6
 3582 0c40 37       		.uleb128 0x37
 3583 0c41 23050000 		.4byte	.LASF104
 3584 0c45 23050000 		.4byte	.LASF104
 3585 0c49 03       		.byte	0x3
 3586 0c4a DC       		.byte	0xdc
 3587 0c4b 37       		.uleb128 0x37
 3588 0c4c CA060000 		.4byte	.LASF105
 3589 0c50 CA060000 		.4byte	.LASF105
 3590 0c54 04       		.byte	0x4
 3591 0c55 52       		.byte	0x52
 3592 0c56 37       		.uleb128 0x37
 3593 0c57 9C000000 		.4byte	.LASF106
 3594 0c5b 9C000000 		.4byte	.LASF106
 3595 0c5f 05       		.byte	0x5
 3596 0c60 54       		.byte	0x54
 3597 0c61 00       		.byte	0
 3598              		.section	.debug_abbrev,"",%progbits
 3599              	.Ldebug_abbrev0:
 3600 0000 01       		.uleb128 0x1
 3601 0001 11       		.uleb128 0x11
 3602 0002 01       		.byte	0x1
 3603 0003 25       		.uleb128 0x25
 3604 0004 0E       		.uleb128 0xe
 3605 0005 13       		.uleb128 0x13
 3606 0006 0B       		.uleb128 0xb
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 121


 3607 0007 03       		.uleb128 0x3
 3608 0008 0E       		.uleb128 0xe
 3609 0009 1B       		.uleb128 0x1b
 3610 000a 0E       		.uleb128 0xe
 3611 000b 55       		.uleb128 0x55
 3612 000c 17       		.uleb128 0x17
 3613 000d 11       		.uleb128 0x11
 3614 000e 01       		.uleb128 0x1
 3615 000f 10       		.uleb128 0x10
 3616 0010 17       		.uleb128 0x17
 3617 0011 00       		.byte	0
 3618 0012 00       		.byte	0
 3619 0013 02       		.uleb128 0x2
 3620 0014 24       		.uleb128 0x24
 3621 0015 00       		.byte	0
 3622 0016 0B       		.uleb128 0xb
 3623 0017 0B       		.uleb128 0xb
 3624 0018 3E       		.uleb128 0x3e
 3625 0019 0B       		.uleb128 0xb
 3626 001a 03       		.uleb128 0x3
 3627 001b 0E       		.uleb128 0xe
 3628 001c 00       		.byte	0
 3629 001d 00       		.byte	0
 3630 001e 03       		.uleb128 0x3
 3631 001f 24       		.uleb128 0x24
 3632 0020 00       		.byte	0
 3633 0021 0B       		.uleb128 0xb
 3634 0022 0B       		.uleb128 0xb
 3635 0023 3E       		.uleb128 0x3e
 3636 0024 0B       		.uleb128 0xb
 3637 0025 03       		.uleb128 0x3
 3638 0026 08       		.uleb128 0x8
 3639 0027 00       		.byte	0
 3640 0028 00       		.byte	0
 3641 0029 04       		.uleb128 0x4
 3642 002a 16       		.uleb128 0x16
 3643 002b 00       		.byte	0
 3644 002c 03       		.uleb128 0x3
 3645 002d 0E       		.uleb128 0xe
 3646 002e 3A       		.uleb128 0x3a
 3647 002f 0B       		.uleb128 0xb
 3648 0030 3B       		.uleb128 0x3b
 3649 0031 05       		.uleb128 0x5
 3650 0032 49       		.uleb128 0x49
 3651 0033 13       		.uleb128 0x13
 3652 0034 00       		.byte	0
 3653 0035 00       		.byte	0
 3654 0036 05       		.uleb128 0x5
 3655 0037 35       		.uleb128 0x35
 3656 0038 00       		.byte	0
 3657 0039 49       		.uleb128 0x49
 3658 003a 13       		.uleb128 0x13
 3659 003b 00       		.byte	0
 3660 003c 00       		.byte	0
 3661 003d 06       		.uleb128 0x6
 3662 003e 0F       		.uleb128 0xf
 3663 003f 00       		.byte	0
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 122


 3664 0040 0B       		.uleb128 0xb
 3665 0041 0B       		.uleb128 0xb
 3666 0042 49       		.uleb128 0x49
 3667 0043 13       		.uleb128 0x13
 3668 0044 00       		.byte	0
 3669 0045 00       		.byte	0
 3670 0046 07       		.uleb128 0x7
 3671 0047 15       		.uleb128 0x15
 3672 0048 00       		.byte	0
 3673 0049 27       		.uleb128 0x27
 3674 004a 19       		.uleb128 0x19
 3675 004b 00       		.byte	0
 3676 004c 00       		.byte	0
 3677 004d 08       		.uleb128 0x8
 3678 004e 16       		.uleb128 0x16
 3679 004f 00       		.byte	0
 3680 0050 03       		.uleb128 0x3
 3681 0051 0E       		.uleb128 0xe
 3682 0052 3A       		.uleb128 0x3a
 3683 0053 0B       		.uleb128 0xb
 3684 0054 3B       		.uleb128 0x3b
 3685 0055 0B       		.uleb128 0xb
 3686 0056 49       		.uleb128 0x49
 3687 0057 13       		.uleb128 0x13
 3688 0058 00       		.byte	0
 3689 0059 00       		.byte	0
 3690 005a 09       		.uleb128 0x9
 3691 005b 2E       		.uleb128 0x2e
 3692 005c 01       		.byte	0x1
 3693 005d 3F       		.uleb128 0x3f
 3694 005e 19       		.uleb128 0x19
 3695 005f 03       		.uleb128 0x3
 3696 0060 0E       		.uleb128 0xe
 3697 0061 3A       		.uleb128 0x3a
 3698 0062 0B       		.uleb128 0xb
 3699 0063 3B       		.uleb128 0x3b
 3700 0064 0B       		.uleb128 0xb
 3701 0065 27       		.uleb128 0x27
 3702 0066 19       		.uleb128 0x19
 3703 0067 20       		.uleb128 0x20
 3704 0068 0B       		.uleb128 0xb
 3705 0069 01       		.uleb128 0x1
 3706 006a 13       		.uleb128 0x13
 3707 006b 00       		.byte	0
 3708 006c 00       		.byte	0
 3709 006d 0A       		.uleb128 0xa
 3710 006e 34       		.uleb128 0x34
 3711 006f 00       		.byte	0
 3712 0070 03       		.uleb128 0x3
 3713 0071 0E       		.uleb128 0xe
 3714 0072 3A       		.uleb128 0x3a
 3715 0073 0B       		.uleb128 0xb
 3716 0074 3B       		.uleb128 0x3b
 3717 0075 0B       		.uleb128 0xb
 3718 0076 49       		.uleb128 0x49
 3719 0077 13       		.uleb128 0x13
 3720 0078 00       		.byte	0
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 123


 3721 0079 00       		.byte	0
 3722 007a 0B       		.uleb128 0xb
 3723 007b 2E       		.uleb128 0x2e
 3724 007c 01       		.byte	0x1
 3725 007d 3F       		.uleb128 0x3f
 3726 007e 19       		.uleb128 0x19
 3727 007f 03       		.uleb128 0x3
 3728 0080 0E       		.uleb128 0xe
 3729 0081 3A       		.uleb128 0x3a
 3730 0082 0B       		.uleb128 0xb
 3731 0083 3B       		.uleb128 0x3b
 3732 0084 05       		.uleb128 0x5
 3733 0085 27       		.uleb128 0x27
 3734 0086 19       		.uleb128 0x19
 3735 0087 20       		.uleb128 0x20
 3736 0088 0B       		.uleb128 0xb
 3737 0089 01       		.uleb128 0x1
 3738 008a 13       		.uleb128 0x13
 3739 008b 00       		.byte	0
 3740 008c 00       		.byte	0
 3741 008d 0C       		.uleb128 0xc
 3742 008e 05       		.uleb128 0x5
 3743 008f 00       		.byte	0
 3744 0090 03       		.uleb128 0x3
 3745 0091 0E       		.uleb128 0xe
 3746 0092 3A       		.uleb128 0x3a
 3747 0093 0B       		.uleb128 0xb
 3748 0094 3B       		.uleb128 0x3b
 3749 0095 05       		.uleb128 0x5
 3750 0096 49       		.uleb128 0x49
 3751 0097 13       		.uleb128 0x13
 3752 0098 00       		.byte	0
 3753 0099 00       		.byte	0
 3754 009a 0D       		.uleb128 0xd
 3755 009b 2E       		.uleb128 0x2e
 3756 009c 01       		.byte	0x1
 3757 009d 03       		.uleb128 0x3
 3758 009e 0E       		.uleb128 0xe
 3759 009f 3A       		.uleb128 0x3a
 3760 00a0 0B       		.uleb128 0xb
 3761 00a1 3B       		.uleb128 0x3b
 3762 00a2 05       		.uleb128 0x5
 3763 00a3 27       		.uleb128 0x27
 3764 00a4 19       		.uleb128 0x19
 3765 00a5 20       		.uleb128 0x20
 3766 00a6 0B       		.uleb128 0xb
 3767 00a7 01       		.uleb128 0x1
 3768 00a8 13       		.uleb128 0x13
 3769 00a9 00       		.byte	0
 3770 00aa 00       		.byte	0
 3771 00ab 0E       		.uleb128 0xe
 3772 00ac 34       		.uleb128 0x34
 3773 00ad 00       		.byte	0
 3774 00ae 03       		.uleb128 0x3
 3775 00af 08       		.uleb128 0x8
 3776 00b0 3A       		.uleb128 0x3a
 3777 00b1 0B       		.uleb128 0xb
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 124


 3778 00b2 3B       		.uleb128 0x3b
 3779 00b3 05       		.uleb128 0x5
 3780 00b4 49       		.uleb128 0x49
 3781 00b5 13       		.uleb128 0x13
 3782 00b6 00       		.byte	0
 3783 00b7 00       		.byte	0
 3784 00b8 0F       		.uleb128 0xf
 3785 00b9 2E       		.uleb128 0x2e
 3786 00ba 00       		.byte	0
 3787 00bb 3F       		.uleb128 0x3f
 3788 00bc 19       		.uleb128 0x19
 3789 00bd 03       		.uleb128 0x3
 3790 00be 0E       		.uleb128 0xe
 3791 00bf 3A       		.uleb128 0x3a
 3792 00c0 0B       		.uleb128 0xb
 3793 00c1 3B       		.uleb128 0x3b
 3794 00c2 05       		.uleb128 0x5
 3795 00c3 27       		.uleb128 0x27
 3796 00c4 19       		.uleb128 0x19
 3797 00c5 20       		.uleb128 0x20
 3798 00c6 0B       		.uleb128 0xb
 3799 00c7 00       		.byte	0
 3800 00c8 00       		.byte	0
 3801 00c9 10       		.uleb128 0x10
 3802 00ca 2E       		.uleb128 0x2e
 3803 00cb 01       		.byte	0x1
 3804 00cc 3F       		.uleb128 0x3f
 3805 00cd 19       		.uleb128 0x19
 3806 00ce 03       		.uleb128 0x3
 3807 00cf 0E       		.uleb128 0xe
 3808 00d0 3A       		.uleb128 0x3a
 3809 00d1 0B       		.uleb128 0xb
 3810 00d2 3B       		.uleb128 0x3b
 3811 00d3 05       		.uleb128 0x5
 3812 00d4 27       		.uleb128 0x27
 3813 00d5 19       		.uleb128 0x19
 3814 00d6 49       		.uleb128 0x49
 3815 00d7 13       		.uleb128 0x13
 3816 00d8 20       		.uleb128 0x20
 3817 00d9 0B       		.uleb128 0xb
 3818 00da 01       		.uleb128 0x1
 3819 00db 13       		.uleb128 0x13
 3820 00dc 00       		.byte	0
 3821 00dd 00       		.byte	0
 3822 00de 11       		.uleb128 0x11
 3823 00df 34       		.uleb128 0x34
 3824 00e0 00       		.byte	0
 3825 00e1 03       		.uleb128 0x3
 3826 00e2 0E       		.uleb128 0xe
 3827 00e3 3A       		.uleb128 0x3a
 3828 00e4 0B       		.uleb128 0xb
 3829 00e5 3B       		.uleb128 0x3b
 3830 00e6 05       		.uleb128 0x5
 3831 00e7 49       		.uleb128 0x49
 3832 00e8 13       		.uleb128 0x13
 3833 00e9 00       		.byte	0
 3834 00ea 00       		.byte	0
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 125


 3835 00eb 12       		.uleb128 0x12
 3836 00ec 2E       		.uleb128 0x2e
 3837 00ed 00       		.byte	0
 3838 00ee 3F       		.uleb128 0x3f
 3839 00ef 19       		.uleb128 0x19
 3840 00f0 03       		.uleb128 0x3
 3841 00f1 0E       		.uleb128 0xe
 3842 00f2 3A       		.uleb128 0x3a
 3843 00f3 0B       		.uleb128 0xb
 3844 00f4 3B       		.uleb128 0x3b
 3845 00f5 0B       		.uleb128 0xb
 3846 00f6 27       		.uleb128 0x27
 3847 00f7 19       		.uleb128 0x19
 3848 00f8 11       		.uleb128 0x11
 3849 00f9 01       		.uleb128 0x1
 3850 00fa 12       		.uleb128 0x12
 3851 00fb 06       		.uleb128 0x6
 3852 00fc 40       		.uleb128 0x40
 3853 00fd 18       		.uleb128 0x18
 3854 00fe 9742     		.uleb128 0x2117
 3855 0100 19       		.uleb128 0x19
 3856 0101 00       		.byte	0
 3857 0102 00       		.byte	0
 3858 0103 13       		.uleb128 0x13
 3859 0104 2E       		.uleb128 0x2e
 3860 0105 00       		.byte	0
 3861 0106 3F       		.uleb128 0x3f
 3862 0107 19       		.uleb128 0x19
 3863 0108 03       		.uleb128 0x3
 3864 0109 0E       		.uleb128 0xe
 3865 010a 3A       		.uleb128 0x3a
 3866 010b 0B       		.uleb128 0xb
 3867 010c 3B       		.uleb128 0x3b
 3868 010d 05       		.uleb128 0x5
 3869 010e 27       		.uleb128 0x27
 3870 010f 19       		.uleb128 0x19
 3871 0110 11       		.uleb128 0x11
 3872 0111 01       		.uleb128 0x1
 3873 0112 12       		.uleb128 0x12
 3874 0113 06       		.uleb128 0x6
 3875 0114 40       		.uleb128 0x40
 3876 0115 18       		.uleb128 0x18
 3877 0116 9742     		.uleb128 0x2117
 3878 0118 19       		.uleb128 0x19
 3879 0119 00       		.byte	0
 3880 011a 00       		.byte	0
 3881 011b 14       		.uleb128 0x14
 3882 011c 2E       		.uleb128 0x2e
 3883 011d 01       		.byte	0x1
 3884 011e 3F       		.uleb128 0x3f
 3885 011f 19       		.uleb128 0x19
 3886 0120 03       		.uleb128 0x3
 3887 0121 0E       		.uleb128 0xe
 3888 0122 3A       		.uleb128 0x3a
 3889 0123 0B       		.uleb128 0xb
 3890 0124 3B       		.uleb128 0x3b
 3891 0125 0B       		.uleb128 0xb
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 126


 3892 0126 27       		.uleb128 0x27
 3893 0127 19       		.uleb128 0x19
 3894 0128 11       		.uleb128 0x11
 3895 0129 01       		.uleb128 0x1
 3896 012a 12       		.uleb128 0x12
 3897 012b 06       		.uleb128 0x6
 3898 012c 40       		.uleb128 0x40
 3899 012d 18       		.uleb128 0x18
 3900 012e 9742     		.uleb128 0x2117
 3901 0130 19       		.uleb128 0x19
 3902 0131 01       		.uleb128 0x1
 3903 0132 13       		.uleb128 0x13
 3904 0133 00       		.byte	0
 3905 0134 00       		.byte	0
 3906 0135 15       		.uleb128 0x15
 3907 0136 898201   		.uleb128 0x4109
 3908 0139 00       		.byte	0
 3909 013a 11       		.uleb128 0x11
 3910 013b 01       		.uleb128 0x1
 3911 013c 31       		.uleb128 0x31
 3912 013d 13       		.uleb128 0x13
 3913 013e 00       		.byte	0
 3914 013f 00       		.byte	0
 3915 0140 16       		.uleb128 0x16
 3916 0141 2E       		.uleb128 0x2e
 3917 0142 00       		.byte	0
 3918 0143 3F       		.uleb128 0x3f
 3919 0144 19       		.uleb128 0x19
 3920 0145 03       		.uleb128 0x3
 3921 0146 0E       		.uleb128 0xe
 3922 0147 3A       		.uleb128 0x3a
 3923 0148 0B       		.uleb128 0xb
 3924 0149 3B       		.uleb128 0x3b
 3925 014a 05       		.uleb128 0x5
 3926 014b 27       		.uleb128 0x27
 3927 014c 19       		.uleb128 0x19
 3928 014d 49       		.uleb128 0x49
 3929 014e 13       		.uleb128 0x13
 3930 014f 11       		.uleb128 0x11
 3931 0150 01       		.uleb128 0x1
 3932 0151 12       		.uleb128 0x12
 3933 0152 06       		.uleb128 0x6
 3934 0153 40       		.uleb128 0x40
 3935 0154 18       		.uleb128 0x18
 3936 0155 9742     		.uleb128 0x2117
 3937 0157 19       		.uleb128 0x19
 3938 0158 00       		.byte	0
 3939 0159 00       		.byte	0
 3940 015a 17       		.uleb128 0x17
 3941 015b 2E       		.uleb128 0x2e
 3942 015c 01       		.byte	0x1
 3943 015d 3F       		.uleb128 0x3f
 3944 015e 19       		.uleb128 0x19
 3945 015f 03       		.uleb128 0x3
 3946 0160 0E       		.uleb128 0xe
 3947 0161 3A       		.uleb128 0x3a
 3948 0162 0B       		.uleb128 0xb
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 127


 3949 0163 3B       		.uleb128 0x3b
 3950 0164 05       		.uleb128 0x5
 3951 0165 27       		.uleb128 0x27
 3952 0166 19       		.uleb128 0x19
 3953 0167 11       		.uleb128 0x11
 3954 0168 01       		.uleb128 0x1
 3955 0169 12       		.uleb128 0x12
 3956 016a 06       		.uleb128 0x6
 3957 016b 40       		.uleb128 0x40
 3958 016c 18       		.uleb128 0x18
 3959 016d 9742     		.uleb128 0x2117
 3960 016f 19       		.uleb128 0x19
 3961 0170 01       		.uleb128 0x1
 3962 0171 13       		.uleb128 0x13
 3963 0172 00       		.byte	0
 3964 0173 00       		.byte	0
 3965 0174 18       		.uleb128 0x18
 3966 0175 05       		.uleb128 0x5
 3967 0176 00       		.byte	0
 3968 0177 03       		.uleb128 0x3
 3969 0178 0E       		.uleb128 0xe
 3970 0179 3A       		.uleb128 0x3a
 3971 017a 0B       		.uleb128 0xb
 3972 017b 3B       		.uleb128 0x3b
 3973 017c 05       		.uleb128 0x5
 3974 017d 49       		.uleb128 0x49
 3975 017e 13       		.uleb128 0x13
 3976 017f 02       		.uleb128 0x2
 3977 0180 17       		.uleb128 0x17
 3978 0181 00       		.byte	0
 3979 0182 00       		.byte	0
 3980 0183 19       		.uleb128 0x19
 3981 0184 34       		.uleb128 0x34
 3982 0185 00       		.byte	0
 3983 0186 03       		.uleb128 0x3
 3984 0187 0E       		.uleb128 0xe
 3985 0188 3A       		.uleb128 0x3a
 3986 0189 0B       		.uleb128 0xb
 3987 018a 3B       		.uleb128 0x3b
 3988 018b 05       		.uleb128 0x5
 3989 018c 49       		.uleb128 0x49
 3990 018d 13       		.uleb128 0x13
 3991 018e 02       		.uleb128 0x2
 3992 018f 17       		.uleb128 0x17
 3993 0190 00       		.byte	0
 3994 0191 00       		.byte	0
 3995 0192 1A       		.uleb128 0x1a
 3996 0193 05       		.uleb128 0x5
 3997 0194 00       		.byte	0
 3998 0195 03       		.uleb128 0x3
 3999 0196 0E       		.uleb128 0xe
 4000 0197 3A       		.uleb128 0x3a
 4001 0198 0B       		.uleb128 0xb
 4002 0199 3B       		.uleb128 0x3b
 4003 019a 05       		.uleb128 0x5
 4004 019b 49       		.uleb128 0x49
 4005 019c 13       		.uleb128 0x13
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 128


 4006 019d 02       		.uleb128 0x2
 4007 019e 18       		.uleb128 0x18
 4008 019f 00       		.byte	0
 4009 01a0 00       		.byte	0
 4010 01a1 1B       		.uleb128 0x1b
 4011 01a2 2E       		.uleb128 0x2e
 4012 01a3 01       		.byte	0x1
 4013 01a4 3F       		.uleb128 0x3f
 4014 01a5 19       		.uleb128 0x19
 4015 01a6 03       		.uleb128 0x3
 4016 01a7 0E       		.uleb128 0xe
 4017 01a8 3A       		.uleb128 0x3a
 4018 01a9 0B       		.uleb128 0xb
 4019 01aa 3B       		.uleb128 0x3b
 4020 01ab 05       		.uleb128 0x5
 4021 01ac 27       		.uleb128 0x27
 4022 01ad 19       		.uleb128 0x19
 4023 01ae 49       		.uleb128 0x49
 4024 01af 13       		.uleb128 0x13
 4025 01b0 11       		.uleb128 0x11
 4026 01b1 01       		.uleb128 0x1
 4027 01b2 12       		.uleb128 0x12
 4028 01b3 06       		.uleb128 0x6
 4029 01b4 40       		.uleb128 0x40
 4030 01b5 18       		.uleb128 0x18
 4031 01b6 9742     		.uleb128 0x2117
 4032 01b8 19       		.uleb128 0x19
 4033 01b9 01       		.uleb128 0x1
 4034 01ba 13       		.uleb128 0x13
 4035 01bb 00       		.byte	0
 4036 01bc 00       		.byte	0
 4037 01bd 1C       		.uleb128 0x1c
 4038 01be 34       		.uleb128 0x34
 4039 01bf 00       		.byte	0
 4040 01c0 03       		.uleb128 0x3
 4041 01c1 0E       		.uleb128 0xe
 4042 01c2 3A       		.uleb128 0x3a
 4043 01c3 0B       		.uleb128 0xb
 4044 01c4 3B       		.uleb128 0x3b
 4045 01c5 05       		.uleb128 0x5
 4046 01c6 49       		.uleb128 0x49
 4047 01c7 13       		.uleb128 0x13
 4048 01c8 02       		.uleb128 0x2
 4049 01c9 18       		.uleb128 0x18
 4050 01ca 00       		.byte	0
 4051 01cb 00       		.byte	0
 4052 01cc 1D       		.uleb128 0x1d
 4053 01cd 2E       		.uleb128 0x2e
 4054 01ce 01       		.byte	0x1
 4055 01cf 31       		.uleb128 0x31
 4056 01d0 13       		.uleb128 0x13
 4057 01d1 11       		.uleb128 0x11
 4058 01d2 01       		.uleb128 0x1
 4059 01d3 12       		.uleb128 0x12
 4060 01d4 06       		.uleb128 0x6
 4061 01d5 40       		.uleb128 0x40
 4062 01d6 18       		.uleb128 0x18
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 129


 4063 01d7 9742     		.uleb128 0x2117
 4064 01d9 19       		.uleb128 0x19
 4065 01da 01       		.uleb128 0x1
 4066 01db 13       		.uleb128 0x13
 4067 01dc 00       		.byte	0
 4068 01dd 00       		.byte	0
 4069 01de 1E       		.uleb128 0x1e
 4070 01df 05       		.uleb128 0x5
 4071 01e0 00       		.byte	0
 4072 01e1 31       		.uleb128 0x31
 4073 01e2 13       		.uleb128 0x13
 4074 01e3 02       		.uleb128 0x2
 4075 01e4 17       		.uleb128 0x17
 4076 01e5 00       		.byte	0
 4077 01e6 00       		.byte	0
 4078 01e7 1F       		.uleb128 0x1f
 4079 01e8 05       		.uleb128 0x5
 4080 01e9 00       		.byte	0
 4081 01ea 31       		.uleb128 0x31
 4082 01eb 13       		.uleb128 0x13
 4083 01ec 02       		.uleb128 0x2
 4084 01ed 18       		.uleb128 0x18
 4085 01ee 00       		.byte	0
 4086 01ef 00       		.byte	0
 4087 01f0 20       		.uleb128 0x20
 4088 01f1 34       		.uleb128 0x34
 4089 01f2 00       		.byte	0
 4090 01f3 31       		.uleb128 0x31
 4091 01f4 13       		.uleb128 0x13
 4092 01f5 02       		.uleb128 0x2
 4093 01f6 18       		.uleb128 0x18
 4094 01f7 00       		.byte	0
 4095 01f8 00       		.byte	0
 4096 01f9 21       		.uleb128 0x21
 4097 01fa 34       		.uleb128 0x34
 4098 01fb 00       		.byte	0
 4099 01fc 31       		.uleb128 0x31
 4100 01fd 13       		.uleb128 0x13
 4101 01fe 1C       		.uleb128 0x1c
 4102 01ff 06       		.uleb128 0x6
 4103 0200 00       		.byte	0
 4104 0201 00       		.byte	0
 4105 0202 22       		.uleb128 0x22
 4106 0203 34       		.uleb128 0x34
 4107 0204 00       		.byte	0
 4108 0205 03       		.uleb128 0x3
 4109 0206 0E       		.uleb128 0xe
 4110 0207 3A       		.uleb128 0x3a
 4111 0208 0B       		.uleb128 0xb
 4112 0209 3B       		.uleb128 0x3b
 4113 020a 05       		.uleb128 0x5
 4114 020b 49       		.uleb128 0x49
 4115 020c 13       		.uleb128 0x13
 4116 020d 1C       		.uleb128 0x1c
 4117 020e 06       		.uleb128 0x6
 4118 020f 00       		.byte	0
 4119 0210 00       		.byte	0
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 130


 4120 0211 23       		.uleb128 0x23
 4121 0212 34       		.uleb128 0x34
 4122 0213 00       		.byte	0
 4123 0214 31       		.uleb128 0x31
 4124 0215 13       		.uleb128 0x13
 4125 0216 00       		.byte	0
 4126 0217 00       		.byte	0
 4127 0218 24       		.uleb128 0x24
 4128 0219 34       		.uleb128 0x34
 4129 021a 00       		.byte	0
 4130 021b 31       		.uleb128 0x31
 4131 021c 13       		.uleb128 0x13
 4132 021d 1C       		.uleb128 0x1c
 4133 021e 0B       		.uleb128 0xb
 4134 021f 00       		.byte	0
 4135 0220 00       		.byte	0
 4136 0221 25       		.uleb128 0x25
 4137 0222 0B       		.uleb128 0xb
 4138 0223 01       		.byte	0x1
 4139 0224 11       		.uleb128 0x11
 4140 0225 01       		.uleb128 0x1
 4141 0226 12       		.uleb128 0x12
 4142 0227 06       		.uleb128 0x6
 4143 0228 01       		.uleb128 0x1
 4144 0229 13       		.uleb128 0x13
 4145 022a 00       		.byte	0
 4146 022b 00       		.byte	0
 4147 022c 26       		.uleb128 0x26
 4148 022d 34       		.uleb128 0x34
 4149 022e 00       		.byte	0
 4150 022f 31       		.uleb128 0x31
 4151 0230 13       		.uleb128 0x13
 4152 0231 02       		.uleb128 0x2
 4153 0232 17       		.uleb128 0x17
 4154 0233 00       		.byte	0
 4155 0234 00       		.byte	0
 4156 0235 27       		.uleb128 0x27
 4157 0236 898201   		.uleb128 0x4109
 4158 0239 01       		.byte	0x1
 4159 023a 11       		.uleb128 0x11
 4160 023b 01       		.uleb128 0x1
 4161 023c 31       		.uleb128 0x31
 4162 023d 13       		.uleb128 0x13
 4163 023e 01       		.uleb128 0x1
 4164 023f 13       		.uleb128 0x13
 4165 0240 00       		.byte	0
 4166 0241 00       		.byte	0
 4167 0242 28       		.uleb128 0x28
 4168 0243 8A8201   		.uleb128 0x410a
 4169 0246 00       		.byte	0
 4170 0247 02       		.uleb128 0x2
 4171 0248 18       		.uleb128 0x18
 4172 0249 9142     		.uleb128 0x2111
 4173 024b 18       		.uleb128 0x18
 4174 024c 00       		.byte	0
 4175 024d 00       		.byte	0
 4176 024e 29       		.uleb128 0x29
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 131


 4177 024f 898201   		.uleb128 0x4109
 4178 0252 01       		.byte	0x1
 4179 0253 11       		.uleb128 0x11
 4180 0254 01       		.uleb128 0x1
 4181 0255 31       		.uleb128 0x31
 4182 0256 13       		.uleb128 0x13
 4183 0257 00       		.byte	0
 4184 0258 00       		.byte	0
 4185 0259 2A       		.uleb128 0x2a
 4186 025a 2E       		.uleb128 0x2e
 4187 025b 01       		.byte	0x1
 4188 025c 3F       		.uleb128 0x3f
 4189 025d 19       		.uleb128 0x19
 4190 025e 03       		.uleb128 0x3
 4191 025f 0E       		.uleb128 0xe
 4192 0260 3A       		.uleb128 0x3a
 4193 0261 0B       		.uleb128 0xb
 4194 0262 3B       		.uleb128 0x3b
 4195 0263 05       		.uleb128 0x5
 4196 0264 27       		.uleb128 0x27
 4197 0265 19       		.uleb128 0x19
 4198 0266 11       		.uleb128 0x11
 4199 0267 01       		.uleb128 0x1
 4200 0268 12       		.uleb128 0x12
 4201 0269 06       		.uleb128 0x6
 4202 026a 40       		.uleb128 0x40
 4203 026b 18       		.uleb128 0x18
 4204 026c 9642     		.uleb128 0x2116
 4205 026e 19       		.uleb128 0x19
 4206 026f 01       		.uleb128 0x1
 4207 0270 13       		.uleb128 0x13
 4208 0271 00       		.byte	0
 4209 0272 00       		.byte	0
 4210 0273 2B       		.uleb128 0x2b
 4211 0274 34       		.uleb128 0x34
 4212 0275 00       		.byte	0
 4213 0276 03       		.uleb128 0x3
 4214 0277 08       		.uleb128 0x8
 4215 0278 3A       		.uleb128 0x3a
 4216 0279 0B       		.uleb128 0xb
 4217 027a 3B       		.uleb128 0x3b
 4218 027b 05       		.uleb128 0x5
 4219 027c 49       		.uleb128 0x49
 4220 027d 13       		.uleb128 0x13
 4221 027e 02       		.uleb128 0x2
 4222 027f 17       		.uleb128 0x17
 4223 0280 00       		.byte	0
 4224 0281 00       		.byte	0
 4225 0282 2C       		.uleb128 0x2c
 4226 0283 1D       		.uleb128 0x1d
 4227 0284 01       		.byte	0x1
 4228 0285 31       		.uleb128 0x31
 4229 0286 13       		.uleb128 0x13
 4230 0287 52       		.uleb128 0x52
 4231 0288 01       		.uleb128 0x1
 4232 0289 55       		.uleb128 0x55
 4233 028a 17       		.uleb128 0x17
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 132


 4234 028b 58       		.uleb128 0x58
 4235 028c 0B       		.uleb128 0xb
 4236 028d 59       		.uleb128 0x59
 4237 028e 05       		.uleb128 0x5
 4238 028f 01       		.uleb128 0x1
 4239 0290 13       		.uleb128 0x13
 4240 0291 00       		.byte	0
 4241 0292 00       		.byte	0
 4242 0293 2D       		.uleb128 0x2d
 4243 0294 0B       		.uleb128 0xb
 4244 0295 01       		.byte	0x1
 4245 0296 55       		.uleb128 0x55
 4246 0297 17       		.uleb128 0x17
 4247 0298 00       		.byte	0
 4248 0299 00       		.byte	0
 4249 029a 2E       		.uleb128 0x2e
 4250 029b 1D       		.uleb128 0x1d
 4251 029c 01       		.byte	0x1
 4252 029d 31       		.uleb128 0x31
 4253 029e 13       		.uleb128 0x13
 4254 029f 11       		.uleb128 0x11
 4255 02a0 01       		.uleb128 0x1
 4256 02a1 12       		.uleb128 0x12
 4257 02a2 06       		.uleb128 0x6
 4258 02a3 58       		.uleb128 0x58
 4259 02a4 0B       		.uleb128 0xb
 4260 02a5 59       		.uleb128 0x59
 4261 02a6 05       		.uleb128 0x5
 4262 02a7 01       		.uleb128 0x1
 4263 02a8 13       		.uleb128 0x13
 4264 02a9 00       		.byte	0
 4265 02aa 00       		.byte	0
 4266 02ab 2F       		.uleb128 0x2f
 4267 02ac 1D       		.uleb128 0x1d
 4268 02ad 00       		.byte	0
 4269 02ae 31       		.uleb128 0x31
 4270 02af 13       		.uleb128 0x13
 4271 02b0 11       		.uleb128 0x11
 4272 02b1 01       		.uleb128 0x1
 4273 02b2 12       		.uleb128 0x12
 4274 02b3 06       		.uleb128 0x6
 4275 02b4 58       		.uleb128 0x58
 4276 02b5 0B       		.uleb128 0xb
 4277 02b6 59       		.uleb128 0x59
 4278 02b7 05       		.uleb128 0x5
 4279 02b8 00       		.byte	0
 4280 02b9 00       		.byte	0
 4281 02ba 30       		.uleb128 0x30
 4282 02bb 2E       		.uleb128 0x2e
 4283 02bc 01       		.byte	0x1
 4284 02bd 31       		.uleb128 0x31
 4285 02be 13       		.uleb128 0x13
 4286 02bf 11       		.uleb128 0x11
 4287 02c0 01       		.uleb128 0x1
 4288 02c1 12       		.uleb128 0x12
 4289 02c2 06       		.uleb128 0x6
 4290 02c3 40       		.uleb128 0x40
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 133


 4291 02c4 18       		.uleb128 0x18
 4292 02c5 9642     		.uleb128 0x2116
 4293 02c7 19       		.uleb128 0x19
 4294 02c8 01       		.uleb128 0x1
 4295 02c9 13       		.uleb128 0x13
 4296 02ca 00       		.byte	0
 4297 02cb 00       		.byte	0
 4298 02cc 31       		.uleb128 0x31
 4299 02cd 2E       		.uleb128 0x2e
 4300 02ce 00       		.byte	0
 4301 02cf 31       		.uleb128 0x31
 4302 02d0 13       		.uleb128 0x13
 4303 02d1 11       		.uleb128 0x11
 4304 02d2 01       		.uleb128 0x1
 4305 02d3 12       		.uleb128 0x12
 4306 02d4 06       		.uleb128 0x6
 4307 02d5 40       		.uleb128 0x40
 4308 02d6 18       		.uleb128 0x18
 4309 02d7 9742     		.uleb128 0x2117
 4310 02d9 19       		.uleb128 0x19
 4311 02da 00       		.byte	0
 4312 02db 00       		.byte	0
 4313 02dc 32       		.uleb128 0x32
 4314 02dd 01       		.uleb128 0x1
 4315 02de 01       		.byte	0x1
 4316 02df 49       		.uleb128 0x49
 4317 02e0 13       		.uleb128 0x13
 4318 02e1 01       		.uleb128 0x1
 4319 02e2 13       		.uleb128 0x13
 4320 02e3 00       		.byte	0
 4321 02e4 00       		.byte	0
 4322 02e5 33       		.uleb128 0x33
 4323 02e6 21       		.uleb128 0x21
 4324 02e7 00       		.byte	0
 4325 02e8 49       		.uleb128 0x49
 4326 02e9 13       		.uleb128 0x13
 4327 02ea 2F       		.uleb128 0x2f
 4328 02eb 0B       		.uleb128 0xb
 4329 02ec 00       		.byte	0
 4330 02ed 00       		.byte	0
 4331 02ee 34       		.uleb128 0x34
 4332 02ef 34       		.uleb128 0x34
 4333 02f0 00       		.byte	0
 4334 02f1 03       		.uleb128 0x3
 4335 02f2 0E       		.uleb128 0xe
 4336 02f3 3A       		.uleb128 0x3a
 4337 02f4 0B       		.uleb128 0xb
 4338 02f5 3B       		.uleb128 0x3b
 4339 02f6 0B       		.uleb128 0xb
 4340 02f7 49       		.uleb128 0x49
 4341 02f8 13       		.uleb128 0x13
 4342 02f9 02       		.uleb128 0x2
 4343 02fa 18       		.uleb128 0x18
 4344 02fb 00       		.byte	0
 4345 02fc 00       		.byte	0
 4346 02fd 35       		.uleb128 0x35
 4347 02fe 34       		.uleb128 0x34
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 134


 4348 02ff 00       		.byte	0
 4349 0300 03       		.uleb128 0x3
 4350 0301 0E       		.uleb128 0xe
 4351 0302 3A       		.uleb128 0x3a
 4352 0303 0B       		.uleb128 0xb
 4353 0304 3B       		.uleb128 0x3b
 4354 0305 0B       		.uleb128 0xb
 4355 0306 49       		.uleb128 0x49
 4356 0307 13       		.uleb128 0x13
 4357 0308 3F       		.uleb128 0x3f
 4358 0309 19       		.uleb128 0x19
 4359 030a 02       		.uleb128 0x2
 4360 030b 18       		.uleb128 0x18
 4361 030c 00       		.byte	0
 4362 030d 00       		.byte	0
 4363 030e 36       		.uleb128 0x36
 4364 030f 26       		.uleb128 0x26
 4365 0310 00       		.byte	0
 4366 0311 49       		.uleb128 0x49
 4367 0312 13       		.uleb128 0x13
 4368 0313 00       		.byte	0
 4369 0314 00       		.byte	0
 4370 0315 37       		.uleb128 0x37
 4371 0316 2E       		.uleb128 0x2e
 4372 0317 00       		.byte	0
 4373 0318 3F       		.uleb128 0x3f
 4374 0319 19       		.uleb128 0x19
 4375 031a 3C       		.uleb128 0x3c
 4376 031b 19       		.uleb128 0x19
 4377 031c 6E       		.uleb128 0x6e
 4378 031d 0E       		.uleb128 0xe
 4379 031e 03       		.uleb128 0x3
 4380 031f 0E       		.uleb128 0xe
 4381 0320 3A       		.uleb128 0x3a
 4382 0321 0B       		.uleb128 0xb
 4383 0322 3B       		.uleb128 0x3b
 4384 0323 0B       		.uleb128 0xb
 4385 0324 00       		.byte	0
 4386 0325 00       		.byte	0
 4387 0326 00       		.byte	0
 4388              		.section	.debug_loc,"",%progbits
 4389              	.Ldebug_loc0:
 4390              	.LLST0:
 4391 0000 00000000 		.4byte	.LVL1
 4392 0004 07000000 		.4byte	.LVL2-1
 4393 0008 0100     		.2byte	0x1
 4394 000a 50       		.byte	0x50
 4395 000b 07000000 		.4byte	.LVL2-1
 4396 000f 1A000000 		.4byte	.LVL6
 4397 0013 0100     		.2byte	0x1
 4398 0015 54       		.byte	0x54
 4399 0016 1A000000 		.4byte	.LVL6
 4400 001a 20000000 		.4byte	.LFE6
 4401 001e 0400     		.2byte	0x4
 4402 0020 F3       		.byte	0xf3
 4403 0021 01       		.uleb128 0x1
 4404 0022 50       		.byte	0x50
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 135


 4405 0023 9F       		.byte	0x9f
 4406 0024 00000000 		.4byte	0
 4407 0028 00000000 		.4byte	0
 4408              	.LLST1:
 4409 002c 08000000 		.4byte	.LVL2
 4410 0030 19000000 		.4byte	.LVL5-1
 4411 0034 0100     		.2byte	0x1
 4412 0036 50       		.byte	0x50
 4413 0037 00000000 		.4byte	0
 4414 003b 00000000 		.4byte	0
 4415              	.LLST2:
 4416 003f 10000000 		.4byte	.LVL3
 4417 0043 14000000 		.4byte	.LVL4
 4418 0047 0100     		.2byte	0x1
 4419 0049 52       		.byte	0x52
 4420 004a 14000000 		.4byte	.LVL4
 4421 004e 19000000 		.4byte	.LVL5-1
 4422 0052 0100     		.2byte	0x1
 4423 0054 53       		.byte	0x53
 4424 0055 00000000 		.4byte	0
 4425 0059 00000000 		.4byte	0
 4426              	.LLST3:
 4427 005d 06000000 		.4byte	.LVL8
 4428 0061 0D000000 		.4byte	.LVL10-1
 4429 0065 0100     		.2byte	0x1
 4430 0067 50       		.byte	0x50
 4431 0068 00000000 		.4byte	0
 4432 006c 00000000 		.4byte	0
 4433              	.LLST4:
 4434 0070 0A000000 		.4byte	.LVL9
 4435 0074 12000000 		.4byte	.LVL11
 4436 0078 0500     		.2byte	0x5
 4437 007a 74       		.byte	0x74
 4438 007b 00       		.sleb128 0
 4439 007c 33       		.byte	0x33
 4440 007d 1A       		.byte	0x1a
 4441 007e 9F       		.byte	0x9f
 4442 007f 12000000 		.4byte	.LVL11
 4443 0083 18000000 		.4byte	.LFE8
 4444 0087 0100     		.2byte	0x1
 4445 0089 50       		.byte	0x50
 4446 008a 00000000 		.4byte	0
 4447 008e 00000000 		.4byte	0
 4448              	.LLST5:
 4449 0092 00000000 		.4byte	.LVL12
 4450 0096 07000000 		.4byte	.LVL13-1
 4451 009a 0100     		.2byte	0x1
 4452 009c 50       		.byte	0x50
 4453 009d 07000000 		.4byte	.LVL13-1
 4454 00a1 1E000000 		.4byte	.LVL15
 4455 00a5 0100     		.2byte	0x1
 4456 00a7 54       		.byte	0x54
 4457 00a8 1E000000 		.4byte	.LVL15
 4458 00ac 24000000 		.4byte	.LFE9
 4459 00b0 0400     		.2byte	0x4
 4460 00b2 F3       		.byte	0xf3
 4461 00b3 01       		.uleb128 0x1
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 136


 4462 00b4 50       		.byte	0x50
 4463 00b5 9F       		.byte	0x9f
 4464 00b6 00000000 		.4byte	0
 4465 00ba 00000000 		.4byte	0
 4466              	.LLST6:
 4467 00be 08000000 		.4byte	.LVL13
 4468 00c2 1D000000 		.4byte	.LVL14-1
 4469 00c6 0100     		.2byte	0x1
 4470 00c8 50       		.byte	0x50
 4471 00c9 00000000 		.4byte	0
 4472 00cd 00000000 		.4byte	0
 4473              	.LLST7:
 4474 00d1 00000000 		.4byte	.LVL16
 4475 00d5 07000000 		.4byte	.LVL17-1
 4476 00d9 0100     		.2byte	0x1
 4477 00db 50       		.byte	0x50
 4478 00dc 07000000 		.4byte	.LVL17-1
 4479 00e0 0C000000 		.4byte	.LVL18
 4480 00e4 0100     		.2byte	0x1
 4481 00e6 54       		.byte	0x54
 4482 00e7 0C000000 		.4byte	.LVL18
 4483 00eb 24000000 		.4byte	.LFE11
 4484 00ef 0400     		.2byte	0x4
 4485 00f1 F3       		.byte	0xf3
 4486 00f2 01       		.uleb128 0x1
 4487 00f3 50       		.byte	0x50
 4488 00f4 9F       		.byte	0x9f
 4489 00f5 00000000 		.4byte	0
 4490 00f9 00000000 		.4byte	0
 4491              	.LLST8:
 4492 00fd 08000000 		.4byte	.LVL17
 4493 0101 1B000000 		.4byte	.LVL19-1
 4494 0105 0100     		.2byte	0x1
 4495 0107 50       		.byte	0x50
 4496 0108 00000000 		.4byte	0
 4497 010c 00000000 		.4byte	0
 4498              	.LLST9:
 4499 0110 00000000 		.4byte	.LVL20
 4500 0114 08000000 		.4byte	.LVL21
 4501 0118 0100     		.2byte	0x1
 4502 011a 50       		.byte	0x50
 4503 011b 08000000 		.4byte	.LVL21
 4504 011f 14000000 		.4byte	.LFE12
 4505 0123 0100     		.2byte	0x1
 4506 0125 52       		.byte	0x52
 4507 0126 00000000 		.4byte	0
 4508 012a 00000000 		.4byte	0
 4509              	.LLST10:
 4510 012e 0A000000 		.4byte	.LVL22
 4511 0132 0C000000 		.4byte	.LVL23
 4512 0136 0500     		.2byte	0x5
 4513 0138 70       		.byte	0x70
 4514 0139 00       		.sleb128 0
 4515 013a 49       		.byte	0x49
 4516 013b 1A       		.byte	0x1a
 4517 013c 9F       		.byte	0x9f
 4518 013d 0C000000 		.4byte	.LVL23
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 137


 4519 0141 14000000 		.4byte	.LFE12
 4520 0145 0100     		.2byte	0x1
 4521 0147 50       		.byte	0x50
 4522 0148 00000000 		.4byte	0
 4523 014c 00000000 		.4byte	0
 4524              	.LLST11:
 4525 0150 00000000 		.4byte	.LVL26
 4526 0154 04000000 		.4byte	.LVL27
 4527 0158 0100     		.2byte	0x1
 4528 015a 50       		.byte	0x50
 4529 015b 04000000 		.4byte	.LVL27
 4530 015f 0E000000 		.4byte	.LFE15
 4531 0163 0400     		.2byte	0x4
 4532 0165 F3       		.byte	0xf3
 4533 0166 01       		.uleb128 0x1
 4534 0167 50       		.byte	0x50
 4535 0168 9F       		.byte	0x9f
 4536 0169 00000000 		.4byte	0
 4537 016d 00000000 		.4byte	0
 4538              	.LLST12:
 4539 0171 00000000 		.4byte	.LVL29
 4540 0175 04000000 		.4byte	.LVL30
 4541 0179 0100     		.2byte	0x1
 4542 017b 50       		.byte	0x50
 4543 017c 04000000 		.4byte	.LVL30
 4544 0180 0C000000 		.4byte	.LFE16
 4545 0184 0400     		.2byte	0x4
 4546 0186 F3       		.byte	0xf3
 4547 0187 01       		.uleb128 0x1
 4548 0188 50       		.byte	0x50
 4549 0189 9F       		.byte	0x9f
 4550 018a 00000000 		.4byte	0
 4551 018e 00000000 		.4byte	0
 4552              	.LLST13:
 4553 0192 00000000 		.4byte	.LVL31
 4554 0196 04000000 		.4byte	.LVL32
 4555 019a 0100     		.2byte	0x1
 4556 019c 50       		.byte	0x50
 4557 019d 04000000 		.4byte	.LVL32
 4558 01a1 10000000 		.4byte	.LFE17
 4559 01a5 0400     		.2byte	0x4
 4560 01a7 F3       		.byte	0xf3
 4561 01a8 01       		.uleb128 0x1
 4562 01a9 50       		.byte	0x50
 4563 01aa 9F       		.byte	0x9f
 4564 01ab 00000000 		.4byte	0
 4565 01af 00000000 		.4byte	0
 4566              	.LLST14:
 4567 01b3 00000000 		.4byte	.LVL34
 4568 01b7 04000000 		.4byte	.LVL35
 4569 01bb 0100     		.2byte	0x1
 4570 01bd 50       		.byte	0x50
 4571 01be 04000000 		.4byte	.LVL35
 4572 01c2 10000000 		.4byte	.LFE18
 4573 01c6 0400     		.2byte	0x4
 4574 01c8 F3       		.byte	0xf3
 4575 01c9 01       		.uleb128 0x1
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 138


 4576 01ca 50       		.byte	0x50
 4577 01cb 9F       		.byte	0x9f
 4578 01cc 00000000 		.4byte	0
 4579 01d0 00000000 		.4byte	0
 4580              	.LLST15:
 4581 01d4 00000000 		.4byte	.LVL36
 4582 01d8 17000000 		.4byte	.LVL38-1
 4583 01dc 0100     		.2byte	0x1
 4584 01de 50       		.byte	0x50
 4585 01df 17000000 		.4byte	.LVL38-1
 4586 01e3 34000000 		.4byte	.LFE19
 4587 01e7 0400     		.2byte	0x4
 4588 01e9 F3       		.byte	0xf3
 4589 01ea 01       		.uleb128 0x1
 4590 01eb 50       		.byte	0x50
 4591 01ec 9F       		.byte	0x9f
 4592 01ed 00000000 		.4byte	0
 4593 01f1 00000000 		.4byte	0
 4594              	.LLST16:
 4595 01f5 00000000 		.4byte	.LVL36
 4596 01f9 17000000 		.4byte	.LVL38-1
 4597 01fd 0100     		.2byte	0x1
 4598 01ff 51       		.byte	0x51
 4599 0200 17000000 		.4byte	.LVL38-1
 4600 0204 34000000 		.4byte	.LFE19
 4601 0208 0400     		.2byte	0x4
 4602 020a F3       		.byte	0xf3
 4603 020b 01       		.uleb128 0x1
 4604 020c 51       		.byte	0x51
 4605 020d 9F       		.byte	0x9f
 4606 020e 00000000 		.4byte	0
 4607 0212 00000000 		.4byte	0
 4608              	.LLST17:
 4609 0216 18000000 		.4byte	.LVL38
 4610 021a 2B000000 		.4byte	.LVL42-1
 4611 021e 0100     		.2byte	0x1
 4612 0220 50       		.byte	0x50
 4613 0221 00000000 		.4byte	0
 4614 0225 00000000 		.4byte	0
 4615              	.LLST18:
 4616 0229 10000000 		.4byte	.LVL37
 4617 022d 2C000000 		.4byte	.LVL43
 4618 0231 0100     		.2byte	0x1
 4619 0233 55       		.byte	0x55
 4620 0234 00000000 		.4byte	0
 4621 0238 00000000 		.4byte	0
 4622              	.LLST19:
 4623 023c 22000000 		.4byte	.LVL39
 4624 0240 26000000 		.4byte	.LVL41
 4625 0244 0100     		.2byte	0x1
 4626 0246 53       		.byte	0x53
 4627 0247 26000000 		.4byte	.LVL41
 4628 024b 2C000000 		.4byte	.LVL44
 4629 024f 0100     		.2byte	0x1
 4630 0251 57       		.byte	0x57
 4631 0252 00000000 		.4byte	0
 4632 0256 00000000 		.4byte	0
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 139


 4633              	.LLST20:
 4634 025a 00000000 		.4byte	.LVL45
 4635 025e 18000000 		.4byte	.LVL48
 4636 0262 0100     		.2byte	0x1
 4637 0264 50       		.byte	0x50
 4638 0265 18000000 		.4byte	.LVL48
 4639 0269 20000000 		.4byte	.LFE20
 4640 026d 0400     		.2byte	0x4
 4641 026f F3       		.byte	0xf3
 4642 0270 01       		.uleb128 0x1
 4643 0271 50       		.byte	0x50
 4644 0272 9F       		.byte	0x9f
 4645 0273 00000000 		.4byte	0
 4646 0277 00000000 		.4byte	0
 4647              	.LLST21:
 4648 027b 0A000000 		.4byte	.LVL46
 4649 027f 16000000 		.4byte	.LVL47
 4650 0283 0F00     		.2byte	0xf
 4651 0285 71       		.byte	0x71
 4652 0286 00       		.sleb128 0
 4653 0287 70       		.byte	0x70
 4654 0288 00       		.sleb128 0
 4655 0289 33       		.byte	0x33
 4656 028a 1A       		.byte	0x1a
 4657 028b 08       		.byte	0x8
 4658 028c FF       		.byte	0xff
 4659 028d 1A       		.byte	0x1a
 4660 028e 33       		.byte	0x33
 4661 028f 24       		.byte	0x24
 4662 0290 23       		.byte	0x23
 4663 0291 06       		.uleb128 0x6
 4664 0292 25       		.byte	0x25
 4665 0293 9F       		.byte	0x9f
 4666 0294 00000000 		.4byte	0
 4667 0298 00000000 		.4byte	0
 4668              	.LLST22:
 4669 029c 00000000 		.4byte	.LVL49
 4670 02a0 04000000 		.4byte	.LVL50
 4671 02a4 0100     		.2byte	0x1
 4672 02a6 50       		.byte	0x50
 4673 02a7 04000000 		.4byte	.LVL50
 4674 02ab 14000000 		.4byte	.LFE21
 4675 02af 0400     		.2byte	0x4
 4676 02b1 F3       		.byte	0xf3
 4677 02b2 01       		.uleb128 0x1
 4678 02b3 50       		.byte	0x50
 4679 02b4 9F       		.byte	0x9f
 4680 02b5 00000000 		.4byte	0
 4681 02b9 00000000 		.4byte	0
 4682              	.LLST23:
 4683 02bd 00000000 		.4byte	.LVL51
 4684 02c1 06000000 		.4byte	.LVL52
 4685 02c5 0100     		.2byte	0x1
 4686 02c7 50       		.byte	0x50
 4687 02c8 06000000 		.4byte	.LVL52
 4688 02cc 18000000 		.4byte	.LFE22
 4689 02d0 0400     		.2byte	0x4
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 140


 4690 02d2 F3       		.byte	0xf3
 4691 02d3 01       		.uleb128 0x1
 4692 02d4 50       		.byte	0x50
 4693 02d5 9F       		.byte	0x9f
 4694 02d6 00000000 		.4byte	0
 4695 02da 00000000 		.4byte	0
 4696              	.LLST24:
 4697 02de 00000000 		.4byte	.LVL53
 4698 02e2 04000000 		.4byte	.LVL54
 4699 02e6 0100     		.2byte	0x1
 4700 02e8 50       		.byte	0x50
 4701 02e9 04000000 		.4byte	.LVL54
 4702 02ed 14000000 		.4byte	.LFE23
 4703 02f1 0400     		.2byte	0x4
 4704 02f3 F3       		.byte	0xf3
 4705 02f4 01       		.uleb128 0x1
 4706 02f5 50       		.byte	0x50
 4707 02f6 9F       		.byte	0x9f
 4708 02f7 00000000 		.4byte	0
 4709 02fb 00000000 		.4byte	0
 4710              	.LLST25:
 4711 02ff 00000000 		.4byte	.LVL55
 4712 0303 04000000 		.4byte	.LVL56
 4713 0307 0100     		.2byte	0x1
 4714 0309 50       		.byte	0x50
 4715 030a 04000000 		.4byte	.LVL56
 4716 030e 14000000 		.4byte	.LFE24
 4717 0312 0400     		.2byte	0x4
 4718 0314 F3       		.byte	0xf3
 4719 0315 01       		.uleb128 0x1
 4720 0316 50       		.byte	0x50
 4721 0317 9F       		.byte	0x9f
 4722 0318 00000000 		.4byte	0
 4723 031c 00000000 		.4byte	0
 4724              	.LLST26:
 4725 0320 00000000 		.4byte	.LVL57
 4726 0324 04000000 		.4byte	.LVL58
 4727 0328 0100     		.2byte	0x1
 4728 032a 50       		.byte	0x50
 4729 032b 04000000 		.4byte	.LVL58
 4730 032f 14000000 		.4byte	.LFE25
 4731 0333 0400     		.2byte	0x4
 4732 0335 F3       		.byte	0xf3
 4733 0336 01       		.uleb128 0x1
 4734 0337 50       		.byte	0x50
 4735 0338 9F       		.byte	0x9f
 4736 0339 00000000 		.4byte	0
 4737 033d 00000000 		.4byte	0
 4738              	.LLST27:
 4739 0341 00000000 		.4byte	.LVL60
 4740 0345 08000000 		.4byte	.LVL61
 4741 0349 0100     		.2byte	0x1
 4742 034b 50       		.byte	0x50
 4743 034c 08000000 		.4byte	.LVL61
 4744 0350 22000000 		.4byte	.LVL65
 4745 0354 0100     		.2byte	0x1
 4746 0356 54       		.byte	0x54
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 141


 4747 0357 00000000 		.4byte	0
 4748 035b 00000000 		.4byte	0
 4749              	.LLST28:
 4750 035f 2C000000 		.4byte	.LVL69
 4751 0363 44000000 		.4byte	.LVL72
 4752 0367 0100     		.2byte	0x1
 4753 0369 53       		.byte	0x53
 4754 036a 46000000 		.4byte	.LVL73
 4755 036e 4E000000 		.4byte	.LVL74
 4756 0372 0100     		.2byte	0x1
 4757 0374 53       		.byte	0x53
 4758 0375 4E000000 		.4byte	.LVL74
 4759 0379 54000000 		.4byte	.LVL75
 4760 037d 0700     		.2byte	0x7
 4761 037f 70       		.byte	0x70
 4762 0380 B39C8080 		.sleb128 -268431821
 4762      7F
 4763 0385 9F       		.byte	0x9f
 4764 0386 00000000 		.4byte	0
 4765 038a 00000000 		.4byte	0
 4766              	.LLST29:
 4767 038e 2C000000 		.4byte	.LVL69
 4768 0392 90000000 		.4byte	.LVL82
 4769 0396 0100     		.2byte	0x1
 4770 0398 54       		.byte	0x54
 4771 0399 00000000 		.4byte	0
 4772 039d 00000000 		.4byte	0
 4773              	.LLST30:
 4774 03a1 32000000 		.4byte	.LVL70
 4775 03a5 3E000000 		.4byte	.LVL71
 4776 03a9 0100     		.2byte	0x1
 4777 03ab 50       		.byte	0x50
 4778 03ac 3E000000 		.4byte	.LVL71
 4779 03b0 5C000000 		.4byte	.LVL78
 4780 03b4 0700     		.2byte	0x7
 4781 03b6 72       		.byte	0x72
 4782 03b7 00       		.sleb128 0
 4783 03b8 44       		.byte	0x44
 4784 03b9 40       		.byte	0x40
 4785 03ba 24       		.byte	0x24
 4786 03bb 21       		.byte	0x21
 4787 03bc 9F       		.byte	0x9f
 4788 03bd 66000000 		.4byte	.LVL79
 4789 03c1 73000000 		.4byte	.LVL80-1
 4790 03c5 0100     		.2byte	0x1
 4791 03c7 52       		.byte	0x52
 4792 03c8 00000000 		.4byte	0
 4793 03cc 00000000 		.4byte	0
 4794              	.LLST31:
 4795 03d0 56000000 		.4byte	.LVL76
 4796 03d4 5A000000 		.4byte	.LVL77
 4797 03d8 1900     		.2byte	0x19
 4798 03da 73       		.byte	0x73
 4799 03db 00       		.sleb128 0
 4800 03dc 70       		.byte	0x70
 4801 03dd 00       		.sleb128 0
 4802 03de 22       		.byte	0x22
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 142


 4803 03df 12       		.byte	0x12
 4804 03e0 40       		.byte	0x40
 4805 03e1 4B       		.byte	0x4b
 4806 03e2 24       		.byte	0x24
 4807 03e3 22       		.byte	0x22
 4808 03e4 08       		.byte	0x8
 4809 03e5 FF       		.byte	0xff
 4810 03e6 16       		.byte	0x16
 4811 03e7 14       		.byte	0x14
 4812 03e8 40       		.byte	0x40
 4813 03e9 4B       		.byte	0x4b
 4814 03ea 24       		.byte	0x24
 4815 03eb 22       		.byte	0x22
 4816 03ec 2D       		.byte	0x2d
 4817 03ed 28       		.byte	0x28
 4818 03ee 0100     		.2byte	0x1
 4819 03f0 16       		.byte	0x16
 4820 03f1 13       		.byte	0x13
 4821 03f2 9F       		.byte	0x9f
 4822 03f3 00000000 		.4byte	0
 4823 03f7 00000000 		.4byte	0
 4824              	.LLST32:
 4825 03fb 00000000 		.4byte	.LVL83
 4826 03ff 1B000000 		.4byte	.LVL84-1
 4827 0403 0100     		.2byte	0x1
 4828 0405 50       		.byte	0x50
 4829 0406 1B000000 		.4byte	.LVL84-1
 4830 040a 6E000000 		.4byte	.LVL94
 4831 040e 0100     		.2byte	0x1
 4832 0410 54       		.byte	0x54
 4833 0411 6E000000 		.4byte	.LVL94
 4834 0415 70000000 		.4byte	.LVL95
 4835 0419 0300     		.2byte	0x3
 4836 041b 74       		.byte	0x74
 4837 041c 1C       		.sleb128 28
 4838 041d 9F       		.byte	0x9f
 4839 041e 70000000 		.4byte	.LVL95
 4840 0422 82000000 		.4byte	.LVL97
 4841 0426 0300     		.2byte	0x3
 4842 0428 75       		.byte	0x75
 4843 0429 18       		.sleb128 24
 4844 042a 9F       		.byte	0x9f
 4845 042b 82000000 		.4byte	.LVL97
 4846 042f B8000000 		.4byte	.LFE10
 4847 0433 0400     		.2byte	0x4
 4848 0435 F3       		.byte	0xf3
 4849 0436 01       		.uleb128 0x1
 4850 0437 50       		.byte	0x50
 4851 0438 9F       		.byte	0x9f
 4852 0439 00000000 		.4byte	0
 4853 043d 00000000 		.4byte	0
 4854              	.LLST33:
 4855 0441 1E000000 		.4byte	.LVL85
 4856 0445 98000000 		.4byte	.LVL99
 4857 0449 0200     		.2byte	0x2
 4858 044b 91       		.byte	0x91
 4859 044c 64       		.sleb128 -28
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 143


 4860 044d 00000000 		.4byte	0
 4861 0451 00000000 		.4byte	0
 4862              	.LLST34:
 4863 0455 44000000 		.4byte	.LVL90
 4864 0459 4A000000 		.4byte	.LVL91
 4865 045d 0100     		.2byte	0x1
 4866 045f 53       		.byte	0x53
 4867 0460 4A000000 		.4byte	.LVL91
 4868 0464 4E000000 		.4byte	.LVL92
 4869 0468 0700     		.2byte	0x7
 4870 046a 0C       		.byte	0xc
 4871 046b 0C0F0340 		.4byte	0x40030f0c
 4872 046f 06       		.byte	0x6
 4873 0470 9F       		.byte	0x9f
 4874 0471 00000000 		.4byte	0
 4875 0475 00000000 		.4byte	0
 4876              	.LLST35:
 4877 0479 00000000 		.4byte	.LVL83
 4878 047d 28000000 		.4byte	.LVL87
 4879 0481 0200     		.2byte	0x2
 4880 0483 30       		.byte	0x30
 4881 0484 9F       		.byte	0x9f
 4882 0485 28000000 		.4byte	.LVL87
 4883 0489 2E000000 		.4byte	.LVL89
 4884 048d 0200     		.2byte	0x2
 4885 048f 31       		.byte	0x31
 4886 0490 9F       		.byte	0x9f
 4887 0491 2E000000 		.4byte	.LVL89
 4888 0495 98000000 		.4byte	.LVL99
 4889 0499 0200     		.2byte	0x2
 4890 049b 7D       		.byte	0x7d
 4891 049c 00       		.sleb128 0
 4892 049d 00000000 		.4byte	0
 4893 04a1 00000000 		.4byte	0
 4894              	.LLST36:
 4895 04a5 00000000 		.4byte	.LVL100
 4896 04a9 08000000 		.4byte	.LVL101
 4897 04ad 0100     		.2byte	0x1
 4898 04af 50       		.byte	0x50
 4899 04b0 08000000 		.4byte	.LVL101
 4900 04b4 14000000 		.4byte	.LFE29
 4901 04b8 0400     		.2byte	0x4
 4902 04ba F3       		.byte	0xf3
 4903 04bb 01       		.uleb128 0x1
 4904 04bc 50       		.byte	0x50
 4905 04bd 9F       		.byte	0x9f
 4906 04be 00000000 		.4byte	0
 4907 04c2 00000000 		.4byte	0
 4908              	.LLST37:
 4909 04c6 00000000 		.4byte	.LVL103
 4910 04ca 18000000 		.4byte	.LVL104
 4911 04ce 0100     		.2byte	0x1
 4912 04d0 50       		.byte	0x50
 4913 04d1 18000000 		.4byte	.LVL104
 4914 04d5 48000000 		.4byte	.LFE30
 4915 04d9 0400     		.2byte	0x4
 4916 04db F3       		.byte	0xf3
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 144


 4917 04dc 01       		.uleb128 0x1
 4918 04dd 50       		.byte	0x50
 4919 04de 9F       		.byte	0x9f
 4920 04df 00000000 		.4byte	0
 4921 04e3 00000000 		.4byte	0
 4922              	.LLST38:
 4923 04e7 00000000 		.4byte	.LVL107
 4924 04eb 0C000000 		.4byte	.LVL108
 4925 04ef 0200     		.2byte	0x2
 4926 04f1 30       		.byte	0x30
 4927 04f2 9F       		.byte	0x9f
 4928 04f3 0C000000 		.4byte	.LVL108
 4929 04f7 10000000 		.4byte	.LVL109
 4930 04fb 0200     		.2byte	0x2
 4931 04fd 31       		.byte	0x31
 4932 04fe 9F       		.byte	0x9f
 4933 04ff 10000000 		.4byte	.LVL109
 4934 0503 12000000 		.4byte	.LVL110
 4935 0507 0200     		.2byte	0x2
 4936 0509 32       		.byte	0x32
 4937 050a 9F       		.byte	0x9f
 4938 050b 12000000 		.4byte	.LVL110
 4939 050f 14000000 		.4byte	.LVL111
 4940 0513 0200     		.2byte	0x2
 4941 0515 33       		.byte	0x33
 4942 0516 9F       		.byte	0x9f
 4943 0517 14000000 		.4byte	.LVL111
 4944 051b 54000000 		.4byte	.LFE32
 4945 051f 0200     		.2byte	0x2
 4946 0521 35       		.byte	0x35
 4947 0522 9F       		.byte	0x9f
 4948 0523 00000000 		.4byte	0
 4949 0527 00000000 		.4byte	0
 4950              	.LLST39:
 4951 052b 18000000 		.4byte	.LVL113
 4952 052f 22000000 		.4byte	.LVL114
 4953 0533 0200     		.2byte	0x2
 4954 0535 31       		.byte	0x31
 4955 0536 9F       		.byte	0x9f
 4956 0537 00000000 		.4byte	0
 4957 053b 00000000 		.4byte	0
 4958              	.LLST41:
 4959 053f 14000000 		.4byte	.LVL111
 4960 0543 18000000 		.4byte	.LVL113
 4961 0547 0600     		.2byte	0x6
 4962 0549 03       		.byte	0x3
 4963 054a 00000000 		.4byte	CySysTickServiceCallbacks
 4964 054e 9F       		.byte	0x9f
 4965 054f 00000000 		.4byte	0
 4966 0553 00000000 		.4byte	0
 4967              	.LLST42:
 4968 0557 14000000 		.4byte	.LVL111
 4969 055b 18000000 		.4byte	.LVL113
 4970 055f 0200     		.2byte	0x2
 4971 0561 3F       		.byte	0x3f
 4972 0562 9F       		.byte	0x9f
 4973 0563 00000000 		.4byte	0
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 145


 4974 0567 00000000 		.4byte	0
 4975              	.LLST43:
 4976 056b 14000000 		.4byte	.LVL111
 4977 056f 16000000 		.4byte	.LVL112
 4978 0573 0500     		.2byte	0x5
 4979 0575 0C       		.byte	0xc
 4980 0576 3C000020 		.4byte	0x2000003c
 4981 057a 16000000 		.4byte	.LVL112
 4982 057e 18000000 		.4byte	.LVL113
 4983 0582 0200     		.2byte	0x2
 4984 0584 73       		.byte	0x73
 4985 0585 00       		.sleb128 0
 4986 0586 00000000 		.4byte	0
 4987 058a 00000000 		.4byte	0
 4988              	.LLST44:
 4989 058e 2C000000 		.4byte	.LVL115
 4990 0592 30000000 		.4byte	.LVL116
 4991 0596 0100     		.2byte	0x1
 4992 0598 50       		.byte	0x50
 4993 0599 00000000 		.4byte	0
 4994 059d 00000000 		.4byte	0
 4995              	.LLST45:
 4996 05a1 00000000 		.4byte	.LVL120
 4997 05a5 04000000 		.4byte	.LVL121
 4998 05a9 0100     		.2byte	0x1
 4999 05ab 50       		.byte	0x50
 5000 05ac 04000000 		.4byte	.LVL121
 5001 05b0 10000000 		.4byte	.LFE37
 5002 05b4 0400     		.2byte	0x4
 5003 05b6 F3       		.byte	0xf3
 5004 05b7 01       		.uleb128 0x1
 5005 05b8 50       		.byte	0x50
 5006 05b9 9F       		.byte	0x9f
 5007 05ba 00000000 		.4byte	0
 5008 05be 00000000 		.4byte	0
 5009              	.LLST46:
 5010 05c2 0A000000 		.4byte	.LVL123
 5011 05c6 0E000000 		.4byte	.LVL124
 5012 05ca 0200     		.2byte	0x2
 5013 05cc 31       		.byte	0x31
 5014 05cd 9F       		.byte	0x9f
 5015 05ce 00000000 		.4byte	0
 5016 05d2 00000000 		.4byte	0
 5017              	.LLST47:
 5018 05d6 00000000 		.4byte	.LVL127
 5019 05da 06000000 		.4byte	.LVL128
 5020 05de 0100     		.2byte	0x1
 5021 05e0 50       		.byte	0x50
 5022 05e1 06000000 		.4byte	.LVL128
 5023 05e5 10000000 		.4byte	.LFE44
 5024 05e9 0400     		.2byte	0x4
 5025 05eb F3       		.byte	0xf3
 5026 05ec 01       		.uleb128 0x1
 5027 05ed 50       		.byte	0x50
 5028 05ee 9F       		.byte	0x9f
 5029 05ef 00000000 		.4byte	0
 5030 05f3 00000000 		.4byte	0
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 146


 5031              	.LLST48:
 5032 05f7 00000000 		.4byte	.LVL129
 5033 05fb 04000000 		.4byte	.LVL130
 5034 05ff 0100     		.2byte	0x1
 5035 0601 50       		.byte	0x50
 5036 0602 04000000 		.4byte	.LVL130
 5037 0606 0C000000 		.4byte	.LFE45
 5038 060a 0400     		.2byte	0x4
 5039 060c F3       		.byte	0xf3
 5040 060d 01       		.uleb128 0x1
 5041 060e 50       		.byte	0x50
 5042 060f 9F       		.byte	0x9f
 5043 0610 00000000 		.4byte	0
 5044 0614 00000000 		.4byte	0
 5045              		.section	.debug_aranges,"",%progbits
 5046 0000 8C010000 		.4byte	0x18c
 5047 0004 0200     		.2byte	0x2
 5048 0006 00000000 		.4byte	.Ldebug_info0
 5049 000a 04       		.byte	0x4
 5050 000b 00       		.byte	0
 5051 000c 0000     		.2byte	0
 5052 000e 0000     		.2byte	0
 5053 0010 00000000 		.4byte	.LFB1
 5054 0014 14000000 		.4byte	.LFE1-.LFB1
 5055 0018 00000000 		.4byte	.LFB4
 5056 001c 14000000 		.4byte	.LFE4-.LFB4
 5057 0020 00000000 		.4byte	.LFB2
 5058 0024 18000000 		.4byte	.LFE2-.LFB2
 5059 0028 00000000 		.4byte	.LFB5
 5060 002c 10000000 		.4byte	.LFE5-.LFB5
 5061 0030 00000000 		.4byte	.LFB6
 5062 0034 20000000 		.4byte	.LFE6-.LFB6
 5063 0038 00000000 		.4byte	.LFB7
 5064 003c 30000000 		.4byte	.LFE7-.LFB7
 5065 0040 00000000 		.4byte	.LFB8
 5066 0044 18000000 		.4byte	.LFE8-.LFB8
 5067 0048 00000000 		.4byte	.LFB9
 5068 004c 24000000 		.4byte	.LFE9-.LFB9
 5069 0050 00000000 		.4byte	.LFB11
 5070 0054 24000000 		.4byte	.LFE11-.LFB11
 5071 0058 00000000 		.4byte	.LFB12
 5072 005c 14000000 		.4byte	.LFE12-.LFB12
 5073 0060 00000000 		.4byte	.LFB13
 5074 0064 10000000 		.4byte	.LFE13-.LFB13
 5075 0068 00000000 		.4byte	.LFB14
 5076 006c 0C000000 		.4byte	.LFE14-.LFB14
 5077 0070 00000000 		.4byte	.LFB15
 5078 0074 0E000000 		.4byte	.LFE15-.LFB15
 5079 0078 00000000 		.4byte	.LFB16
 5080 007c 0C000000 		.4byte	.LFE16-.LFB16
 5081 0080 00000000 		.4byte	.LFB17
 5082 0084 10000000 		.4byte	.LFE17-.LFB17
 5083 0088 00000000 		.4byte	.LFB18
 5084 008c 10000000 		.4byte	.LFE18-.LFB18
 5085 0090 00000000 		.4byte	.LFB19
 5086 0094 34000000 		.4byte	.LFE19-.LFB19
 5087 0098 00000000 		.4byte	.LFB20
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 147


 5088 009c 20000000 		.4byte	.LFE20-.LFB20
 5089 00a0 00000000 		.4byte	.LFB21
 5090 00a4 14000000 		.4byte	.LFE21-.LFB21
 5091 00a8 00000000 		.4byte	.LFB22
 5092 00ac 18000000 		.4byte	.LFE22-.LFB22
 5093 00b0 00000000 		.4byte	.LFB23
 5094 00b4 14000000 		.4byte	.LFE23-.LFB23
 5095 00b8 00000000 		.4byte	.LFB24
 5096 00bc 14000000 		.4byte	.LFE24-.LFB24
 5097 00c0 00000000 		.4byte	.LFB25
 5098 00c4 14000000 		.4byte	.LFE25-.LFB25
 5099 00c8 00000000 		.4byte	.LFB26
 5100 00cc 04000000 		.4byte	.LFE26-.LFB26
 5101 00d0 00000000 		.4byte	.LFB27
 5102 00d4 18000000 		.4byte	.LFE27-.LFB27
 5103 00d8 00000000 		.4byte	.LFB28
 5104 00dc 2C000000 		.4byte	.LFE28-.LFB28
 5105 00e0 00000000 		.4byte	.LFB3
 5106 00e4 BC000000 		.4byte	.LFE3-.LFB3
 5107 00e8 00000000 		.4byte	.LFB10
 5108 00ec B8000000 		.4byte	.LFE10-.LFB10
 5109 00f0 00000000 		.4byte	.LFB29
 5110 00f4 14000000 		.4byte	.LFE29-.LFB29
 5111 00f8 00000000 		.4byte	.LFB30
 5112 00fc 48000000 		.4byte	.LFE30-.LFB30
 5113 0100 00000000 		.4byte	.LFB32
 5114 0104 54000000 		.4byte	.LFE32-.LFB32
 5115 0108 00000000 		.4byte	.LFB34
 5116 010c 10000000 		.4byte	.LFE34-.LFB34
 5117 0110 00000000 		.4byte	.LFB35
 5118 0114 10000000 		.4byte	.LFE35-.LFB35
 5119 0118 00000000 		.4byte	.LFB33
 5120 011c 18000000 		.4byte	.LFE33-.LFB33
 5121 0120 00000000 		.4byte	.LFB31
 5122 0124 1C000000 		.4byte	.LFE31-.LFB31
 5123 0128 00000000 		.4byte	.LFB36
 5124 012c 10000000 		.4byte	.LFE36-.LFB36
 5125 0130 00000000 		.4byte	.LFB37
 5126 0134 10000000 		.4byte	.LFE37-.LFB37
 5127 0138 00000000 		.4byte	.LFB38
 5128 013c 10000000 		.4byte	.LFE38-.LFB38
 5129 0140 00000000 		.4byte	.LFB39
 5130 0144 10000000 		.4byte	.LFE39-.LFB39
 5131 0148 00000000 		.4byte	.LFB40
 5132 014c 18000000 		.4byte	.LFE40-.LFB40
 5133 0150 00000000 		.4byte	.LFB41
 5134 0154 10000000 		.4byte	.LFE41-.LFB41
 5135 0158 00000000 		.4byte	.LFB42
 5136 015c 10000000 		.4byte	.LFE42-.LFB42
 5137 0160 00000000 		.4byte	.LFB46
 5138 0164 24000000 		.4byte	.LFE46-.LFB46
 5139 0168 00000000 		.4byte	.LFB43
 5140 016c 0C000000 		.4byte	.LFE43-.LFB43
 5141 0170 00000000 		.4byte	.LFB44
 5142 0174 10000000 		.4byte	.LFE44-.LFB44
 5143 0178 00000000 		.4byte	.LFB45
 5144 017c 0C000000 		.4byte	.LFE45-.LFB45
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 148


 5145 0180 00000000 		.4byte	.LFB47
 5146 0184 74000000 		.4byte	.LFE47-.LFB47
 5147 0188 00000000 		.4byte	0
 5148 018c 00000000 		.4byte	0
 5149              		.section	.debug_ranges,"",%progbits
 5150              	.Ldebug_ranges0:
 5151 0000 04000000 		.4byte	.LBB24
 5152 0004 06000000 		.4byte	.LBE24
 5153 0008 18000000 		.4byte	.LBB37
 5154 000c 1E000000 		.4byte	.LBE37
 5155 0010 20000000 		.4byte	.LBB38
 5156 0014 22000000 		.4byte	.LBE38
 5157 0018 00000000 		.4byte	0
 5158 001c 00000000 		.4byte	0
 5159 0020 08000000 		.4byte	.LBB31
 5160 0024 0A000000 		.4byte	.LBE31
 5161 0028 14000000 		.4byte	.LBB35
 5162 002c 16000000 		.4byte	.LBE35
 5163 0030 16000000 		.4byte	.LBB36
 5164 0034 18000000 		.4byte	.LBE36
 5165 0038 00000000 		.4byte	0
 5166 003c 00000000 		.4byte	0
 5167 0040 04000000 		.4byte	.LBB45
 5168 0044 06000000 		.4byte	.LBE45
 5169 0048 0A000000 		.4byte	.LBB48
 5170 004c 0E000000 		.4byte	.LBE48
 5171 0050 00000000 		.4byte	0
 5172 0054 00000000 		.4byte	0
 5173 0058 00000000 		.4byte	.LFB1
 5174 005c 14000000 		.4byte	.LFE1
 5175 0060 00000000 		.4byte	.LFB4
 5176 0064 14000000 		.4byte	.LFE4
 5177 0068 00000000 		.4byte	.LFB2
 5178 006c 18000000 		.4byte	.LFE2
 5179 0070 00000000 		.4byte	.LFB5
 5180 0074 10000000 		.4byte	.LFE5
 5181 0078 00000000 		.4byte	.LFB6
 5182 007c 20000000 		.4byte	.LFE6
 5183 0080 00000000 		.4byte	.LFB7
 5184 0084 30000000 		.4byte	.LFE7
 5185 0088 00000000 		.4byte	.LFB8
 5186 008c 18000000 		.4byte	.LFE8
 5187 0090 00000000 		.4byte	.LFB9
 5188 0094 24000000 		.4byte	.LFE9
 5189 0098 00000000 		.4byte	.LFB11
 5190 009c 24000000 		.4byte	.LFE11
 5191 00a0 00000000 		.4byte	.LFB12
 5192 00a4 14000000 		.4byte	.LFE12
 5193 00a8 00000000 		.4byte	.LFB13
 5194 00ac 10000000 		.4byte	.LFE13
 5195 00b0 00000000 		.4byte	.LFB14
 5196 00b4 0C000000 		.4byte	.LFE14
 5197 00b8 00000000 		.4byte	.LFB15
 5198 00bc 0E000000 		.4byte	.LFE15
 5199 00c0 00000000 		.4byte	.LFB16
 5200 00c4 0C000000 		.4byte	.LFE16
 5201 00c8 00000000 		.4byte	.LFB17
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 149


 5202 00cc 10000000 		.4byte	.LFE17
 5203 00d0 00000000 		.4byte	.LFB18
 5204 00d4 10000000 		.4byte	.LFE18
 5205 00d8 00000000 		.4byte	.LFB19
 5206 00dc 34000000 		.4byte	.LFE19
 5207 00e0 00000000 		.4byte	.LFB20
 5208 00e4 20000000 		.4byte	.LFE20
 5209 00e8 00000000 		.4byte	.LFB21
 5210 00ec 14000000 		.4byte	.LFE21
 5211 00f0 00000000 		.4byte	.LFB22
 5212 00f4 18000000 		.4byte	.LFE22
 5213 00f8 00000000 		.4byte	.LFB23
 5214 00fc 14000000 		.4byte	.LFE23
 5215 0100 00000000 		.4byte	.LFB24
 5216 0104 14000000 		.4byte	.LFE24
 5217 0108 00000000 		.4byte	.LFB25
 5218 010c 14000000 		.4byte	.LFE25
 5219 0110 00000000 		.4byte	.LFB26
 5220 0114 04000000 		.4byte	.LFE26
 5221 0118 00000000 		.4byte	.LFB27
 5222 011c 18000000 		.4byte	.LFE27
 5223 0120 00000000 		.4byte	.LFB28
 5224 0124 2C000000 		.4byte	.LFE28
 5225 0128 00000000 		.4byte	.LFB3
 5226 012c BC000000 		.4byte	.LFE3
 5227 0130 00000000 		.4byte	.LFB10
 5228 0134 B8000000 		.4byte	.LFE10
 5229 0138 00000000 		.4byte	.LFB29
 5230 013c 14000000 		.4byte	.LFE29
 5231 0140 00000000 		.4byte	.LFB30
 5232 0144 48000000 		.4byte	.LFE30
 5233 0148 00000000 		.4byte	.LFB32
 5234 014c 54000000 		.4byte	.LFE32
 5235 0150 00000000 		.4byte	.LFB34
 5236 0154 10000000 		.4byte	.LFE34
 5237 0158 00000000 		.4byte	.LFB35
 5238 015c 10000000 		.4byte	.LFE35
 5239 0160 00000000 		.4byte	.LFB33
 5240 0164 18000000 		.4byte	.LFE33
 5241 0168 00000000 		.4byte	.LFB31
 5242 016c 1C000000 		.4byte	.LFE31
 5243 0170 00000000 		.4byte	.LFB36
 5244 0174 10000000 		.4byte	.LFE36
 5245 0178 00000000 		.4byte	.LFB37
 5246 017c 10000000 		.4byte	.LFE37
 5247 0180 00000000 		.4byte	.LFB38
 5248 0184 10000000 		.4byte	.LFE38
 5249 0188 00000000 		.4byte	.LFB39
 5250 018c 10000000 		.4byte	.LFE39
 5251 0190 00000000 		.4byte	.LFB40
 5252 0194 18000000 		.4byte	.LFE40
 5253 0198 00000000 		.4byte	.LFB41
 5254 019c 10000000 		.4byte	.LFE41
 5255 01a0 00000000 		.4byte	.LFB42
 5256 01a4 10000000 		.4byte	.LFE42
 5257 01a8 00000000 		.4byte	.LFB46
 5258 01ac 24000000 		.4byte	.LFE46
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 150


 5259 01b0 00000000 		.4byte	.LFB43
 5260 01b4 0C000000 		.4byte	.LFE43
 5261 01b8 00000000 		.4byte	.LFB44
 5262 01bc 10000000 		.4byte	.LFE44
 5263 01c0 00000000 		.4byte	.LFB45
 5264 01c4 0C000000 		.4byte	.LFE45
 5265 01c8 00000000 		.4byte	.LFB47
 5266 01cc 74000000 		.4byte	.LFE47
 5267 01d0 00000000 		.4byte	0
 5268 01d4 00000000 		.4byte	0
 5269              		.section	.debug_line,"",%progbits
 5270              	.Ldebug_line0:
 5271 0000 1C050000 		.section	.debug_str,"MS",%progbits,1
 5271      02006700 
 5271      00000201 
 5271      FB0E0D00 
 5271      01010101 
 5272              	.LASF34:
 5273 0000 72616D56 		.ascii	"ramVectorTable\000"
 5273      6563746F 
 5273      72546162 
 5273      6C6500
 5274              	.LASF10:
 5275 000f 75696E74 		.ascii	"uint16\000"
 5275      313600
 5276              	.LASF52:
 5277 0016 696E7453 		.ascii	"intState\000"
 5277      74617465 
 5277      00
 5278              	.LASF38:
 5279 001f 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 5279      73436C6B 
 5279      57726974 
 5279      65486663 
 5279      6C6B4469 
 5280              	.LASF101:
 5281 0038 43795379 		.ascii	"CySysClkPumpConfig\000"
 5281      73436C6B 
 5281      50756D70 
 5281      436F6E66 
 5281      696700
 5282              	.LASF33:
 5283 004b 6F6C6449 		.ascii	"oldIsr\000"
 5283      737200
 5284              	.LASF90:
 5285 0052 72657456 		.ascii	"retVal\000"
 5285      616C00
 5286              	.LASF51:
 5287 0059 43794469 		.ascii	"CyDisableInts\000"
 5287      7361626C 
 5287      65496E74 
 5287      7300
 5288              	.LASF7:
 5289 0067 6C6F6E67 		.ascii	"long long unsigned int\000"
 5289      206C6F6E 
 5289      6720756E 
 5289      7369676E 
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 151


 5289      65642069 
 5290              	.LASF99:
 5291 007e 43795379 		.ascii	"CySysTickInitVar\000"
 5291      73546963 
 5291      6B496E69 
 5291      74566172 
 5291      00
 5292              	.LASF53:
 5293 008f 4379456E 		.ascii	"CyEnableInts\000"
 5293      61626C65 
 5293      496E7473 
 5293      00
 5294              	.LASF106:
 5295 009c 43795379 		.ascii	"CySysClkWcoEnabled\000"
 5295      73436C6B 
 5295      57636F45 
 5295      6E61626C 
 5295      656400
 5296              	.LASF68:
 5297 00af 4379536F 		.ascii	"CySoftwareReset\000"
 5297      66747761 
 5297      72655265 
 5297      73657400 
 5298              	.LASF79:
 5299 00bf 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 5299      73546963 
 5299      6B456E61 
 5299      626C6549 
 5299      6E746572 
 5300              	.LASF63:
 5301 00d8 4379496E 		.ascii	"CyIntGetState\000"
 5301      74476574 
 5301      53746174 
 5301      6500
 5302              	.LASF6:
 5303 00e6 6C6F6E67 		.ascii	"long long int\000"
 5303      206C6F6E 
 5303      6720696E 
 5303      7400
 5304              	.LASF0:
 5305 00f4 7369676E 		.ascii	"signed char\000"
 5305      65642063 
 5305      68617200 
 5306              	.LASF21:
 5307 0100 66726571 		.ascii	"freq\000"
 5307      00
 5308              	.LASF76:
 5309 0105 43794465 		.ascii	"CyDelayFreq\000"
 5309      6C617946 
 5309      72657100 
 5310              	.LASF22:
 5311 0111 696E7465 		.ascii	"interruptState\000"
 5311      72727570 
 5311      74537461 
 5311      746500
 5312              	.LASF24:
 5313 0120 6C664C69 		.ascii	"lfLimit\000"
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 152


 5313      6D697400 
 5314              	.LASF109:
 5315 0128 433A5C55 		.ascii	"C:\\Users\\Minakian\\Documents\\PSoC Creator\\Bootl"
 5315      73657273 
 5315      5C4D696E 
 5315      616B6961 
 5315      6E5C446F 
 5316 0156 6F61645C 		.ascii	"oad\\Bootloader.cydsn\000"
 5316      426F6F74 
 5316      6C6F6164 
 5316      65722E63 
 5316      7964736E 
 5317              	.LASF84:
 5318 016b 43795379 		.ascii	"CySysTickGetReload\000"
 5318      73546963 
 5318      6B476574 
 5318      52656C6F 
 5318      616400
 5319              	.LASF83:
 5320 017e 43795379 		.ascii	"CySysClkImoGetWcoLock\000"
 5320      73436C6B 
 5320      496D6F47 
 5320      65745763 
 5320      6F4C6F63 
 5321              	.LASF73:
 5322 0194 77636F4C 		.ascii	"wcoLock\000"
 5322      6F636B00 
 5323              	.LASF4:
 5324 019c 6C6F6E67 		.ascii	"long int\000"
 5324      20696E74 
 5324      00
 5325              	.LASF64:
 5326 01a5 4379496E 		.ascii	"CyIntDisable\000"
 5326      74446973 
 5326      61626C65 
 5326      00
 5327              	.LASF107:
 5328 01b2 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5328      43313120 
 5328      352E342E 
 5328      31203230 
 5328      31363036 
 5329 01e5 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 5329      20726576 
 5329      6973696F 
 5329      6E203233 
 5329      37373135 
 5330 0218 67202D4F 		.ascii	"g -Os -ffunction-sections -ffat-lto-objects\000"
 5330      73202D66 
 5330      66756E63 
 5330      74696F6E 
 5330      2D736563 
 5331              	.LASF91:
 5332 0244 43795379 		.ascii	"CySysTickGetCallback\000"
 5332      73546963 
 5332      6B476574 
 5332      43616C6C 
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 153


 5332      6261636B 
 5333              	.LASF40:
 5334 0259 43795379 		.ascii	"CySysEnablePumpClock\000"
 5334      73456E61 
 5334      626C6550 
 5334      756D7043 
 5334      6C6F636B 
 5335              	.LASF9:
 5336 026e 75696E74 		.ascii	"uint8\000"
 5336      3800
 5337              	.LASF96:
 5338 0274 63796465 		.ascii	"cydelayFreqKhz\000"
 5338      6C617946 
 5338      7265714B 
 5338      687A00
 5339              	.LASF42:
 5340 0283 656E6162 		.ascii	"enable\000"
 5340      6C6500
 5341              	.LASF13:
 5342 028a 646F7562 		.ascii	"double\000"
 5342      6C6500
 5343              	.LASF60:
 5344 0291 73686966 		.ascii	"shift\000"
 5344      7400
 5345              	.LASF11:
 5346 0297 75696E74 		.ascii	"uint32\000"
 5346      333200
 5347              	.LASF54:
 5348 029e 6D61736B 		.ascii	"mask\000"
 5348      00
 5349              	.LASF47:
 5350 02a3 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 5350      73436C6B 
 5350      47657453 
 5350      7973636C 
 5350      6B536F75 
 5351              	.LASF26:
 5352 02bb 43795379 		.ascii	"CySysClkImoEnableWcoLock\000"
 5352      73436C6B 
 5352      496D6F45 
 5352      6E61626C 
 5352      6557636F 
 5353              	.LASF61:
 5354 02d4 4379496E 		.ascii	"CyIntGetPriority\000"
 5354      74476574 
 5354      5072696F 
 5354      72697479 
 5354      00
 5355              	.LASF98:
 5356 02e5 63796465 		.ascii	"cydelay32kMs\000"
 5356      6C617933 
 5356      326B4D73 
 5356      00
 5357              	.LASF77:
 5358 02f2 43795379 		.ascii	"CySysTickInit\000"
 5358      73546963 
 5358      6B496E69 
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 154


 5358      7400
 5359              	.LASF30:
 5360 0300 76616C75 		.ascii	"value\000"
 5360      6500
 5361              	.LASF29:
 5362 0306 636C6F63 		.ascii	"clockSource\000"
 5362      6B536F75 
 5362      72636500 
 5363              	.LASF92:
 5364 0312 43794765 		.ascii	"CyGetUniqueId\000"
 5364      74556E69 
 5364      71756549 
 5364      6400
 5365              	.LASF87:
 5366 0320 43795379 		.ascii	"CySysTickGetCountFlag\000"
 5366      73546963 
 5366      6B476574 
 5366      436F756E 
 5366      74466C61 
 5367              	.LASF8:
 5368 0336 756E7369 		.ascii	"unsigned int\000"
 5368      676E6564 
 5368      20696E74 
 5368      00
 5369              	.LASF111:
 5370 0343 43795379 		.ascii	"CySysTickClear\000"
 5370      73546963 
 5370      6B436C65 
 5370      617200
 5371              	.LASF5:
 5372 0352 6C6F6E67 		.ascii	"long unsigned int\000"
 5372      20756E73 
 5372      69676E65 
 5372      6420696E 
 5372      7400
 5373              	.LASF37:
 5374 0364 43795379 		.ascii	"CySysClkImoStop\000"
 5374      73436C6B 
 5374      496D6F53 
 5374      746F7000 
 5375              	.LASF102:
 5376 0374 4379456E 		.ascii	"CyEnterCriticalSection\000"
 5376      74657243 
 5376      72697469 
 5376      63616C53 
 5376      65637469 
 5377              	.LASF65:
 5378 038b 4379496E 		.ascii	"CyIntSetPending\000"
 5378      74536574 
 5378      50656E64 
 5378      696E6700 
 5379              	.LASF48:
 5380 039b 43795379 		.ascii	"CySysGetResetReason\000"
 5380      73476574 
 5380      52657365 
 5380      74526561 
 5380      736F6E00 
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 155


 5381              	.LASF3:
 5382 03af 73686F72 		.ascii	"short unsigned int\000"
 5382      7420756E 
 5382      7369676E 
 5382      65642069 
 5382      6E7400
 5383              	.LASF23:
 5384 03c2 72656754 		.ascii	"regTmp\000"
 5384      6D7000
 5385              	.LASF27:
 5386 03c9 43795379 		.ascii	"CySysTickSetClockSource\000"
 5386      73546963 
 5386      6B536574 
 5386      436C6F63 
 5386      6B536F75 
 5387              	.LASF56:
 5388 03e1 4379496E 		.ascii	"CyIntSetVector\000"
 5388      74536574 
 5388      56656374 
 5388      6F7200
 5389              	.LASF31:
 5390 03f0 6E756D62 		.ascii	"number\000"
 5390      657200
 5391              	.LASF59:
 5392 03f7 7072696F 		.ascii	"priority\000"
 5392      72697479 
 5392      00
 5393              	.LASF71:
 5394 0400 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 5394      73436C6B 
 5394      57726974 
 5394      65496D6F 
 5394      46726571 
 5395              	.LASF112:
 5396 0415 4379496E 		.ascii	"CyIntSetSysVector\000"
 5396      74536574 
 5396      53797356 
 5396      6563746F 
 5396      7200
 5397              	.LASF36:
 5398 0427 43795379 		.ascii	"CySysClkImoDisableWcoLock\000"
 5398      73436C6B 
 5398      496D6F44 
 5398      69736162 
 5398      6C655763 
 5399              	.LASF16:
 5400 0441 72656733 		.ascii	"reg32\000"
 5400      3200
 5401              	.LASF81:
 5402 0447 43795379 		.ascii	"CySysTickStart\000"
 5402      73546963 
 5402      6B537461 
 5402      727400
 5403              	.LASF50:
 5404 0456 72657475 		.ascii	"returnStatus\000"
 5404      726E5374 
 5404      61747573 
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 156


 5404      00
 5405              	.LASF19:
 5406 0463 73697A65 		.ascii	"sizetype\000"
 5406      74797065 
 5406      00
 5407              	.LASF66:
 5408 046c 4379496E 		.ascii	"CyIntClearPending\000"
 5408      74436C65 
 5408      61725065 
 5408      6E64696E 
 5408      6700
 5409              	.LASF18:
 5410 047e 6C6F6E67 		.ascii	"long double\000"
 5410      20646F75 
 5410      626C6500 
 5411              	.LASF32:
 5412 048a 61646472 		.ascii	"address\000"
 5412      65737300 
 5413              	.LASF43:
 5414 0492 73797363 		.ascii	"sysclkSource\000"
 5414      6C6B536F 
 5414      75726365 
 5414      00
 5415              	.LASF89:
 5416 049f 66756E63 		.ascii	"function\000"
 5416      74696F6E 
 5416      00
 5417              	.LASF85:
 5418 04a8 43795379 		.ascii	"CySysTickGetValue\000"
 5418      73546963 
 5418      6B476574 
 5418      56616C75 
 5418      6500
 5419              	.LASF95:
 5420 04ba 63796465 		.ascii	"cydelayFreqHz\000"
 5420      6C617946 
 5420      72657148 
 5420      7A00
 5421              	.LASF58:
 5422 04c8 4379496E 		.ascii	"CyIntSetPriority\000"
 5422      74536574 
 5422      5072696F 
 5422      72697479 
 5422      00
 5423              	.LASF12:
 5424 04d9 666C6F61 		.ascii	"float\000"
 5424      7400
 5425              	.LASF103:
 5426 04df 43794578 		.ascii	"CyExitCriticalSection\000"
 5426      69744372 
 5426      69746963 
 5426      616C5365 
 5426      6374696F 
 5427              	.LASF20:
 5428 04f5 63795379 		.ascii	"cySysTickCallback\000"
 5428      73546963 
 5428      6B43616C 
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 157


 5428      6C626163 
 5428      6B00
 5429              	.LASF57:
 5430 0507 4379496E 		.ascii	"CyIntGetVector\000"
 5430      74476574 
 5430      56656374 
 5430      6F7200
 5431              	.LASF70:
 5432 0516 6D696C6C 		.ascii	"milliseconds\000"
 5432      69736563 
 5432      6F6E6473 
 5432      00
 5433              	.LASF104:
 5434 0523 43794465 		.ascii	"CyDelayCycles\000"
 5434      6C617943 
 5434      79636C65 
 5434      7300
 5435              	.LASF15:
 5436 0531 72656738 		.ascii	"reg8\000"
 5436      00
 5437              	.LASF67:
 5438 0536 43794861 		.ascii	"CyHalt\000"
 5438      6C7400
 5439              	.LASF1:
 5440 053d 756E7369 		.ascii	"unsigned char\000"
 5440      676E6564 
 5440      20636861 
 5440      7200
 5441              	.LASF49:
 5442 054b 72656173 		.ascii	"reason\000"
 5442      6F6E00
 5443              	.LASF2:
 5444 0552 73686F72 		.ascii	"short int\000"
 5444      7420696E 
 5444      7400
 5445              	.LASF62:
 5446 055c 4379496E 		.ascii	"CyIntEnable\000"
 5446      74456E61 
 5446      626C6500 
 5447              	.LASF55:
 5448 0568 4379496E 		.ascii	"CyIntGetSysVector\000"
 5448      74476574 
 5448      53797356 
 5448      6563746F 
 5448      7200
 5449              	.LASF41:
 5450 057a 636C6B53 		.ascii	"clkSelect\000"
 5450      656C6563 
 5450      7400
 5451              	.LASF74:
 5452 0584 43794465 		.ascii	"CyDelayUs\000"
 5452      6C617955 
 5452      7300
 5453              	.LASF110:
 5454 058e 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 5454      73546963 
 5454      6B536572 
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 158


 5454      76696365 
 5454      43616C6C 
 5455              	.LASF14:
 5456 05a8 63686172 		.ascii	"char\000"
 5456      00
 5457              	.LASF100:
 5458 05ad 6379496D 		.ascii	"cyImoFreqMhz2DpllOffset\000"
 5458      6F467265 
 5458      714D687A 
 5458      3244706C 
 5458      6C4F6666 
 5459              	.LASF17:
 5460 05c5 63796973 		.ascii	"cyisraddress\000"
 5460      72616464 
 5460      72657373 
 5460      00
 5461              	.LASF80:
 5462 05d2 43795379 		.ascii	"CySysTickEnable\000"
 5462      73546963 
 5462      6B456E61 
 5462      626C6500 
 5463              	.LASF46:
 5464 05e2 43795379 		.ascii	"CySysClkWriteHfclkDiv\000"
 5464      73436C6B 
 5464      57726974 
 5464      65486663 
 5464      6C6B4469 
 5465              	.LASF44:
 5466 05f8 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 5466      73436C6B 
 5466      57726974 
 5466      65537973 
 5466      636C6B44 
 5467              	.LASF88:
 5468 060f 43795379 		.ascii	"CySysTickSetCallback\000"
 5468      73546963 
 5468      6B536574 
 5468      43616C6C 
 5468      6261636B 
 5469              	.LASF94:
 5470 0624 43795379 		.ascii	"CySysTickCallbacks\000"
 5470      73546963 
 5470      6B43616C 
 5470      6C626163 
 5470      6B7300
 5471              	.LASF72:
 5472 0637 696D6F54 		.ascii	"imoTrim1Value\000"
 5472      72696D31 
 5472      56616C75 
 5472      6500
 5473              	.LASF93:
 5474 0645 756E6971 		.ascii	"uniqueId\000"
 5474      75654964 
 5474      00
 5475              	.LASF25:
 5476 064e 666C6173 		.ascii	"flashCtlReg\000"
 5476      6843746C 
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 159


 5476      52656700 
 5477              	.LASF69:
 5478 065a 43794465 		.ascii	"CyDelay\000"
 5478      6C617900 
 5479              	.LASF86:
 5480 0662 43795379 		.ascii	"CySysTickGetClockSource\000"
 5480      73546963 
 5480      6B476574 
 5480      436C6F63 
 5480      6B536F75 
 5481              	.LASF82:
 5482 067a 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 5482      73546963 
 5482      6B446973 
 5482      61626C65 
 5482      496E7465 
 5483              	.LASF97:
 5484 0694 63796465 		.ascii	"cydelayFreqMhz\000"
 5484      6C617946 
 5484      7265714D 
 5484      687A00
 5485              	.LASF78:
 5486 06a3 43795379 		.ascii	"CySysTickStop\000"
 5486      73546963 
 5486      6B53746F 
 5486      7000
 5487              	.LASF45:
 5488 06b1 64697669 		.ascii	"divider\000"
 5488      64657200 
 5489              	.LASF35:
 5490 06b9 43795379 		.ascii	"CySysClkImoStart\000"
 5490      73436C6B 
 5490      496D6F53 
 5490      74617274 
 5490      00
 5491              	.LASF105:
 5492 06ca 43795379 		.ascii	"CySysFlashSetWaitCycles\000"
 5492      73466C61 
 5492      73685365 
 5492      74576169 
 5492      74437963 
 5493              	.LASF108:
 5494 06e2 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 5494      72617465 
 5494      645F536F 
 5494      75726365 
 5494      5C50536F 
 5495              	.LASF75:
 5496 0701 6D696372 		.ascii	"microseconds\000"
 5496      6F736563 
 5496      6F6E6473 
 5496      00
 5497              	.LASF39:
 5498 070e 746D7052 		.ascii	"tmpReg\000"
 5498      656700
 5499              	.LASF28:
 5500 0715 43795379 		.ascii	"CySysTickSetReload\000"
ARM GAS  C:\Users\Minakian\AppData\Local\Temp\ccatIG1h.s 			page 160


 5500      73546963 
 5500      6B536574 
 5500      52656C6F 
 5500      616400
 5501              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
